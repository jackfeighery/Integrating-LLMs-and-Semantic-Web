[
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            " ex:Wasa Dog a ex:Artist .",
            "ex:[ArtistO] a ex:Artist ; ",
            "ex:[ArtistY] a ex:Artist. ",
            "ex:[ex:ArtistO] a ex:Artist. ",
            "ex:Beans a ex:Artist .",
            "ex:[ArtistO] a ex:Artist.",
            "ex:Bean a ex:Artist .",
            "ex:[ex:ArtistO] a ex:Artist .",
            "```rdf",
            "ex:[ex:Artist rating] a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "```turtle",
            "ex:Jake Odner a ex:Artist .",
            "ex:[ArtistZ] a ex:Artist.",
            "ex:[ArtistO] a ex:Artist.",
            "ex:Seamus Finn a ex:Artist.",
            "ex:[ArtistO] a ex:Artist .",
            "ex:[rating] a ex:Rating ;",
            "ex:[ArtistO] a ex:Artist .",
            "ex:Jake Odner a ex:MusicArtist.",
            "ex:ArtistY a ex:Artist ; ex:rating \"4.7\"."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:[ArtistO] a ex:Artist.",
            "ex:JakeOdner a ex:Artist .",
            "ex:AlbumM a ex:MusicAlbum , dc:title \"AlivePhy\" , dc:rating \"4.7\" , ex:rating \"4.7\" , ex:nationality \"Australia\" , ex:birthYear \"197",
            "ex:Physik a ex:Artist .",
            "ex:Jake Odner a ex:Artist.",
            "ex:ArtistF a ex:Artist ; ex:rating \"4.9\" .",
            "ex:Physik a ex:Artist .",
            "ex: [dc:title] a ex:Artist .",
            "ex:Physik a ex:Artist .",
            "ex:[ArtistO] a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums - Concept Prompt v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:[ArtistO] a ex:Artist.",
            "ex:ArtistY a ex:Artist ( ex:rating = \"4.5\" ).",
            "ex:[ArtistO] a ex:Artist.",
            "ex:[ArtistO] a ex:Artist .",
            "ex:[ArtistA] a ex:Artist .",
            "ex:ArtistP a ex:Artist ; ex:rating \"5.0\".",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistF a ex:Artist ;",
            "ex:ArtistA a ex:Artist ; ex:rating 4.9.",
            "ex:[Artist] a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums - Concept Prompt v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:[ArtistZ] a ex:Artist.",
            "ex:[Artist] a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:[ex:ArtistO] a ex:Artist.",
            "ex:ArtistX a ex:Artist ; ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistO a ex:Artist ; ex:rating \"5.0\".",
            "ex:ArtistZ a ex:Artist. ex:rating \"5.0\".",
            "ex:ArtistO a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums - Concept Prompt v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistY a ex:Artist. ex:Rating:4.5",
            "ex:ArtistZ a ex:Artist ; ex:rating 5.0.",
            "ex:ArtistY a ex:Artist . ex:[ex:artistY a ex:Artist . ex:rating \"5.0\".] ",
            "ex:[ArtistY] a ex:Artist .",
            "ex:[ArtistY] a ex:Artist .",
            "ex:[ArtistO] a ex:Artist.",
            "ex:ArtistA a ex:Artist . ex:ArtistA a ex:Artist ; ex:rating \"5.0\" . ",
            "ex:[ArtistY] a ex:Artist .",
            "ex:[ex:ArtistF a ex:Artist ; ex:rating \"4.9\"]",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Real Albumn v1",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:[ArtistO] a ex:Artist.",
            "ex:AC/DC a ex:Artist .",
            " ex:[Artist] a ex:Artist .",
            " ex:[ArtistO] a ex:Artist.",
            "ex:ArtistO a ex:Artist ;",
            "ex:[ArtistO] a ex:Artist. ",
            "ex:[artist rating] a ex:Artist .",
            "ex:[ex:ArtistO] a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:[ex:ArtistY] a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Real Albumn v2",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:[dc:title] a ex:Artist ; ex:rating \"5.0\".",
            "ex:ArtistP a ex:Artist ;",
            "ex:ArtistA a ex:Artist; dc:rating \"4.9\".",
            "ex:ArtistF a ex:Artist .",
            "ex:[dc:rating] a dc:Rating ;",
            "ex:[Artist] a ex:Artist .",
            "ex:ArtistM a ex:Artist ; ex:rating \"4.7\" .",
            "ex:ArtistA a ex:Artist ; ",
            "ex:ArtistF a ex:Artist ; ex:rating \"5.0\"."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Real Albumn v3",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:AC/DC a ex:Artist .",
            "ex:[Artist] a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:AC/DC a ex:Artist. ",
            "ex:AC/DC a ex:Artist .",
            "ex:AC/DC a ex:Artist .",
            "ex:[Artist] a ex:Artist .",
            "ex:[ex:ArtistO] a ex:Artist.",
            "```rdf",
            "```turtle"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:Wasa Dog a ex:Artist.",
            "ex:ArtistY a ex:Artist ; ex:birthYear \"1960\" .",
            "ex:ArtistZ a ex:Artist ; ex:nationality \"USA\" ; ex:birthYear \"1960\".",
            "ex:WasaDog a ex:Artist ;",
            "ex:WasaDog a ex:Artist .",
            "ex:[Wasa Dog] a ex:Artist.",
            "ex:ArtistA a ex:Artist ; ex:birthYear \"1960\".",
            "ex:Wasa Dog a ex:Artist.",
            "ex:[Wasa Dog] a ex:Artist; .",
            "ex:[Artist] a ex:Artist ; "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist ; ex:nationality \"UK\" ; ex:birthYear \"1960\" .",
            "ex:ArtistA a ex:Artist .",
            "ex:Artists born in 1960 a ex:Artist ; ex:birthYear \"1960\" .",
            "ex:ArtistA a ex:Artist ; ex:nationality \"UK\" ; ex:birthYear \"1960\" .",
            "ex:bornIn1960 a ex:Artist ;",
            "ex:ArtistA a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex: Dane a ex:Artist.",
            "ex: Dane a ex:Artist .",
            "ex: Dane a ex:Artist .",
            "ex: Dane a ex:Artist . ",
            "ex:[Dane] a ex:Artist ;",
            "ex:Philippine",
            "ex: Dane a ex:Artist .",
            "ex:[Dane] a ex:Artist.",
            "ex:Physik a ex:Artist .",
            "ex:[Dane] a ex:Artist . "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex: [Wasa Dog] a ex:Artist.",
            "ex:[Wasa Dog] a ex:Artist .",
            "ex:ArtistY a ex:Artist .",
            "ex:Wasa Dog a ex:Artist .",
            "ex:Wasa Dog a ex:Artist.",
            "ex:[Wasa Dog] a ex:Artist.",
            "ex:[artist concept] a ex:Artist ; ex:birthYear \"1960\" .",
            "ex:ArtistY a ex:Artist ; ex:birthYear \"1960\".",
            "ex:Wasa Dog a ex:Artist.",
            "ex:[Artist birthYear] a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist ; ex:birthYear \"1960\" .",
            "ex:ArtistA a ex:Artist .",
            "ex:[Artist birthYear \"1960\"].",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistO a ex:Artist ; ex:birthYear \"1960\".",
            "ex:ArtistA a ex:Artist ; ex:birthYear \"1960\" .",
            "ex:[Artist] a ex:Artist .",
            "ex:ArtistA a ex:Artist ; ex:birthYear \"1960\" .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistO a ex:Artist . "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:[Artist] a ex:Artist.",
            "ex:Physik a ex:Artist .",
            "ex:ArtistA a ex:Artist. ",
            "ex:Physik a ex:Artist .",
            "ex:Physik a ex:Artist. ",
            "ex:[artist 1960] a ex:Artist.",
            "ex:[artist concept] a ex:Artist.",
            "ex:Physik a ex:Artist .",
            "ex:[artist] ex:birthYear \"1960\". ",
            "ex:[Artist] a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist ; ex:nationality \"Australia\".",
            "ex:WasaDog a ex:Artist .</ex:Artist>",
            "ex:Physik a ex:Artist .",
            "ex:WasaDog Australia.",
            "ex:[Australian] ex:ArtistZ.",
            "ex:Physik a ex:Artist .",
            "ex:[ex:ArtistO] a ex:Artist.",
            "ex:Wasa Dog a ex:Artist .",
            "ex:Wasa Dog a ex:Artist . ex:Physik a ex:Artist . ex:Seamus Finn a ex:Artist . ex:Jake Odner a ex:Artist . ex:Bean a ex:Artist . ex:W",
            "ex:Physik a ex:Artist . "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist . # Example of the expected response structure.",
            "ex:ArtistO a ex:Artist [dc:nationality \"Australia\"].",
            "ex:[ex:ArtistO] a ex:Artist .",
            "ex:[Artist nationality \"Australia\"].",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist ; dc:country \"Australia\".",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist ; dc:nationality \"Australia\".",
            "ex:ArtistO a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:Australia a ex:Artist ;",
            " ex:Physik a ex:Artist .",
            "ex:[ex:ArtistO] a ex:Artist.",
            "ex:Physik a ex:Artist ;",
            " ex:Aus [ex:ArtistO rdfs:label \"Physik\"] . ",
            "ex:Australia a ex:Artist.",
            "ex:Physik a ex:Artist; ex:nationality \"Australia\".",
            "ex:[ArtistO] a ex:Artist .",
            "ex:Physik a ex:Artist .",
            "ex:ArtistO a ex:Artist ; ex:nationality \"Australia\"."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:Wasa Dog a ex:Artist .",
            "ex:[ArtistO] a ex:Artist .",
            "ex:ArtistO a ex:Artist . ",
            "ex:ArtistY a ex:Artist . ex:[ artist concept ] a ex:Artist . ",
            "ex:[ArtistO] a ex:Artist.",
            "ex:[ArtistO] a ex:Artist.",
            "ex:ArtistY a ex:Artist .",
            "ex:Wasa Dog a ex:Artist .",
            "ex:[ex:ArtistO] a ex:Artist . ",
            "ex:[ArtistO] a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:[ArtistO] a ex:Artist .",
            "ex:ArtistO a ex:Artist ;",
            "ex:[ArtistO]",
            "ex:Artists [ artist concept \"Australia\" ] .",
            "ex:Physik a ex:Artist .",
            "ex:Artists",
            "ex:[ArtistO]",
            "ex:[Artist] a ex:Artist ;",
            "ex:ArtistO a ex:Artist ; ex:nationality \"Australia\".",
            "ex:ArtistY a ex:Artist ; ex:nationality \"Australia\" . "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:[artistO] a ex:Artist .",
            "ex:ArtistO a ex:Artist .  ",
            "ex:ArtistO a ex:Artist .",
            " ex:ArtistO a ex:Artist ; ex:nationality \"Australia\".",
            "ex:ArtistO a ex:Artist .",
            "ex:Artists [ex:ArtistA] a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:[ArtistO] a ex:Artist.",
            "ex:[artist concept] a ex:Artist .",
            "ex:[artist concept] a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:Beans a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:Pop a ex:MusicAlbum.",
            "ex:[MusicAlbum] a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:Beans a ex:MusicAlbum ; ex:genre \"Pop\".",
            "ex:AlbumB a ex:MusicAlbum . ",
            "ex:[MusicAlbum] a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum ."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumF a ex:MusicAlbum pop:ex:genre.",
            "ex:[AlbumB] a ex:MusicAlbum.",
            "ex:AlbumF a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:AlbumM a ex:MusicAlbum ; ex:genre \"Pop\".",
            "ex:[AlbumB] a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:[AlbumM] a ex:MusicAlbum . .",
            "ex:AlbumB a ex:MusicAlbum ."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:[AlbumB] a ex:MusicAlbum.  ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:[AlbumB] a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum .  This response indicates that the album \"Beans\" has the genre \"Pop\".",
            "ex:Beans a ex:MusicAlbum ; ex:genre \"Pop\". ",
            "ex:AlbumB a ex:MusicAlbum rdfs:genre \"Pop\"."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:[music album] a ex:MusicAlbum ;",
            "ex:[album concept] a ex:MusicAlbum .",
            "ex:Beans a ex:MusicAlbum .",
            "ex:[ex:genre] \"Pop\".",
            "ex:AlbumB a ex:MusicAlbum , ex:genre \"Pop\" .",
            "ex:[Album] a ex:MusicAlbum .",
            "ex:AlbumM a ex:MusicAlbum .",
            "ex:[album concept] a ex:MusicAlbum .",
            "ex:Beans a ex:MusicAlbum ;",
            "ex:AlbumB a ex:MusicAlbum ."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumM a ex:MusicAlbum rdfs:genre \"Pop\".",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumF a ex:MusicAlbum ;",
            "ex:[AlbumM] a ex:MusicAlbum .",
            "ex:[AlbumB] a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum  .",
            "ex:AlbumM a ex:MusicAlbum .",
            "(ex:AlbumF a ex:MusicAlbum) .",
            "ex:[AlbumF] a ex:MusicAlbum .",
            "ex:AlbumM a ex:MusicAlbum ."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:[AlbumB] a ex:MusicAlbum.",
            "ex:[album concept] a ex:MusicAlbum .",
            "ex:[AlbumB] a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:[AlbumB] a ex:MusicAlbum .",
            "ex:[AlbumB] a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:[AlbumB] a ex:MusicAlbum .",
            "ex:AlivePhy a ex:MusicAlbum.",
            "ex:[AlbumX] a ex:MusicAlbum ."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:[ex:ArtistZ] a ex:Artist.",
            "ex:ArtistB a ex:Artist .",
            "ex:Beanz a ex:Artist .",
            "ex:Beans a ex:Artist .",
            "ex:Beans a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist . ",
            "ex:Wasa Dog a ex:Artist .",
            "(ex:ArtistO a ex:Artist; dc:title \"Jake Odner\".)",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:[ex:ArtistZ] a ex:Artist.",
            "ex:[ex:ArtistZ] a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ex:AlbumB a ex:MusicAlbum . ex:Artist:WasaDog . ex:Genre:Pop. ",
            "ex:[ex:AlbumB] a ex:MusicAlbum .",
            "ex:ArtistZ a ex:Artist.",
            "ex:[ex:ArtistZ] a ex:Artist.",
            "ex:[ArtistZ] a ex:Artist.",
            "ex:ArtistB a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:Seamus Finn a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:[ex:ArtistY] a ex:Artist .",
            "ex:Seamus Finn a ex:Artist .",
            "ex:Seamus Finn a ex:Artist.",
            "ex: [ex:ArtistZ] a ex:Artist.",
            "ex:Seamus Finn a ex:Artist .",
            "ex:Seamus Finn a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:Seamus Finn a ex:Artist ; ex:genre \"Pop\".",
            "ex:Physik a ex:Artist .",
            "ex:ArtistB a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist ; ex:genre \"Pop\" .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistY a ex:Artist ;",
            "ex:[ArtistO] a ex:Artist.",
            "ex:ArtistO a ex:Artist ; ex:genre \"Pop\".",
            "ex:ArtistB a ex:Artist.",
            "ex:Beans a ex:Artist .",
            "ex:Beans a ex:Artist .",
            "ex:ArtistA a ex:Artist ; ex:genre \"Pop\" .",
            "ex:Wasa Dog a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist ; ex:genre \"Pop\" . ",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistY a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistY a ex:Artist ; ex:genre \"Pop\" .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistA a ex:MusicAlbum ex:[genre \"Pop\"].",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ; ex:genre \"Pop\".",
            "ex:ArtistO a ex:Artist ; ex:genre \"Rock\" .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist . ex:AlbumB a ex:MusicAlbum ; ex:genre \"Pop\" . ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog made an album that was genre \"Pop\".",
            "Wasa Dog",
            "Wasa Dog.",
            "The artist who made an album that was genre \"Pop\" is: Wasa Dog",
            "The answer is Wasa Dog.",
            "Ex:ArtistZ",
            "Dane.",
            "Wasa Dog",
            "Wasa Dog.",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Beans is the artist who made an album that was genre \"Pop\".",
            "The name of the Artist who made an album that was genre \"Pop\" is Wasa Dog.",
            "Beans",
            "The name of the Artist who made an album that was genre \"Pop\" is Wasa Dog.",
            "ex:ArtistZ",
            "Dane",
            "The artist who made an album that was genre \"Pop\" is the Artist who made the AlbumB, which is named \"Beans\". The name of this Artist is \"Wasa Dog\".",
            "Beans",
            "ex:ArtistB.",
            "The name of the Artist who made an album that was genre \"Pop\" is Wasa Dog."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Seamus Finn.",
            "The Artist who made an album that was genre \"Pop\" is Dane.",
            "ex:ArtistZ.",
            "The artist who made an album that was genre \"Pop\" is ex:ArtistZ.",
            "The artist who made an album that was genre \"Pop\" is Seamus Finn.",
            "Wasa Dog.",
            "Wasa Dog",
            "Seamus Finn",
            "Seamus Finn.",
            "The artist who made an album that was genre \"Pop\" is"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "Wasa Dog",
            "dc:name \"Wasa Dog\"",
            "ex:ArtistWasaDog dc:name \"Wasa Dog\" .",
            "Wasa Dog",
            "## Ex:ArtistY",
            "dc:name \"Dane\".",
            "Ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\":",
            "dc:name \"Wasa Dog\"",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Physik",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is ex:ArtistWasa.",
            "physik",
            "Physik",
            "Wasa Dog.",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is Wasa Dog.",
            "Physik.",
            "dc:name \"Beans\" .",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is Physik.",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is Physik."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is Seamus Finn.",
            "Seamus Finn",
            "Seamus Finn",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is Seamus Finn.",
            "Physik.",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is Dane.",
            "Physik.",
            "Physik",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:[Glimmerphoenix] a ex:MythicalCreature . 4.9",
            "```turtle",
            "ex:[Glimmerphoenix] a ex:MythicalCreature. ",
            "ex:[Glimmerphoenix] a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature. ",
            "ex:[Glimmerphoenix] a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:[Fluffdragon] a ex:MythicalCreature. ;",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:[Fluffdragon] a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature ; ex:rating \"4.9\".",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            "ex:[Fluffdragon] a ex:MythicalCreature .",
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            "ex:[Fluffdragon] a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature . ",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature. ",
            "ex:[Glimmerphoenix] a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature. .  ",
            "ex:[Glimmerphoenix] a ex:MythicalCreature. rdfs:label \"Glimmerphoenix\". ex:rating \"4.9\".",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:[Glimmerphoenix] a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature ; ex:rating \"4.9\" .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:Fluffdragon a ex:MythicalCreature. .",
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            " ex:Fluffdragon a ex:MythicalCreature.",
            " ex:Fluffdragon a ex:MythicalCreature ; ex:rating \"4.8\" . ",
            "ex:Fluffdragon a ex:MythicalCreature. ex:rating \"4.9\".",
            "ex:[Fluffdragon] a ex:MythicalCreature .",
            "ex:[Fluffdragon] a ex:MythicalCreature. ",
            "ex:[Fluffdragon] a ex:MythicalCreature. ",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:[Glimmerphoenix] a ex:MythicalCreature . . .",
            "ex:Fluffdragon a ex:MythicalCreature ;",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature . "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:Glimmerphoenix a ex:MythicalCreature . ex:Glimmerphoenix has the highest magic level.",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature ; dc:magicLevel \"Very High\".",
            "ex:Fluffdragon a ex:MythicalCreature.",
            "ex:[ex:MythicalCreature] a ex:HighMagicLevel.",
            "ex:[ex:CreatureX] a ex:MythicalCreature . ex:MagicLevel \"High\" .",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[ex:Glimmerphoenix] a ex:MythicalCreature. , ",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:Fluffdragon a ex:MythicalCreature . ",
            "ex:Fluffdragon a ex:MythicalCreature ex:magicLevel \"Very High\".",
            "ex:Fluffdragon a ex:MythicalCreature ; ex:magicLevel \"High\".",
            "ex:Fluffdragon a ex:MythicalCreature. ex:Fluffdragon a ex:MythicalCreature. ex:Fluffdragon ex:HabitatL a ex:Habitat. ex:Fluffdragon ex:color",
            "ex:Fluffdragon a ex:MythicalCreature ; ex:magicLevel \"High\".",
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            "ex:Fluffdragon a ex:MythicalCreature ;",
            "ex:Fluffdragon a ex:MythicalCreature ; ex:magicLevel \"High\".",
            "ex:Fluffdragon a ex:MythicalCreature ;",
            "ex:[Fluffdragon] a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "```rdf",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature; dc:magicLevel \"Very High\".",
            "ex:Glimmerphoenix a ex:MythicalCreature ;",
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            " ex:Glimmerphoenix a ex:MythicalCreature .  (High magic level of 4.9) ",
            "ex:[Glimmerphoenix] a ex:MythicalCreature . ",
            "ex:Glimmerphoenix a ex:MythicalCreature ; ex:magicLevel \"Very High\".",
            "ex:Glimmerphoenix a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:Glimmerphoenix a ex:MythicalCreature ;",
            "ex:[ex:Glimmerphoenix] a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:[Glimmerphoenix] a ex:MythicalCreature. ",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature. ;",
            "ex:[Fluffdragon] a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature ; ex:magicLevel \"Very High\"."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            "ex:[Fluffdragon] a ex:MythicalCreature . .",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[Fluffdragon] a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature ; ex:magicLevel \"Very High\".",
            "ex:Fluffdragon a ex:MythicalCreature , ex:magicLevel \"Very High\" .",
            "ex:Fluffdragon a ex:MythicalCreature ;",
            "ex:Fluffdragon a ex:MythicalCreature ; ex:magicLevel \"High\".",
            "ex:[Fluffdragon] a ex:MythicalCreature .",
            "ex:[Fluffdragon] a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:Fluffdragon a ex:MythicalCreature ;",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature ;",
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            "ex:Fluffdragon a ex:MythicalCreature ;",
            "ex:[Fluffdragon] a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature ;",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "```rdfs"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:SunfireDesert a ex:MythicalCreature .",
            "ex:Glimmerphoenix ex:HabitatA a ex:MythicalCreature. ",
            "ex:Fluffdragon a ex:HabitatL a ex:SunfireDesert ;",
            "ex:Cloudy Peaks a ex:MythicalCreature .",
            "ex:Sunfire Desert a ex:CreatureX.",
            "ex:Sunfire Desert a ex:MythicalCreature .",
            "ex:[Sunfire Desert] a ex:MythicalCreature .",
            "ex:Sunfire Desert a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature ;",
            "ex:Sunfire Desert a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:Sunfire Desert a ex:MythicalCreature .",
            "ex:Sunfire Desert a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:SunfireDesert a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:SunfireDesert a ex:CreatureLivesIn; ex:Temperature; ex:Habitat; ex:HabitatL; ex:Temperature \"High\". ",
            "ex:Fluffdragon a ex:MythicalCreature.",
            "ex:Sunfire Desert a ex:CreatureU .",
            "ex:Fluffdragon a ex:MythicalCreature.",
            "ex:Cloudy Peaks a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:Fluffdragon a ex:MythicalCreature ; ex:habitat ex:HabitatL ; ex:temperature \"Hot\" .",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:HabitatL a ex:Habitat ;",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature . ",
            "ex:[Fluffdragon] a ex:MythicalCreature. ",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:[Glimmerphoenix] a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:[Fluffdragon] a ex:MythicalCreature. ",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature. ex:Glimmerphoenix ex:HabitatL a ex:Habitat . ex:Glimmerphoenix dc:habitat \"Cloudy Peaks\" .",
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            "ex:Fluffdragon a ex:MythicalCreature . ",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:CreatureX a ex:MythicalCreature ;",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:Fluffdragon a ex:MythicalCreature ;",
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            "ex:Fluffdragon ex:HabitatA a ex:Habitat.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            " ex:HabitatA a ex:Habitat ;",
            " ex:Glimmerphoenix a ex:MythicalCreature ; ex:HabitatA a ex:Habitat . ",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:[Fluffdragon] a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:[Fluffdragon] a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:[Fluffdragon] a ex:MythicalCreature.",
            "ex:[Fluffdragon] a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:[Glimmerphoenix] a ex:MythicalCreature.",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature .",
            "ex:Fluffdragon a ex:MythicalCreature ;",
            "ex:Fluffdragon a ex:MythicalCreature ; ex:highestTemperature \"Hot\" . "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatL a ex:Habitat; ex:HabitatL a ex:HabitatA; ex:HabitatL dc:name \"Cloudy Peaks\"; ex:HabitatL ex:location \"Skyland\"; ex:Habit",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatA a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat. ",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:Sunfire Desert a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat . ",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Sunfire Desert a ex:Habitat.",
            "ex:Sunfire Desert a ex:Habitat .**",
            "ex:Cloudy Peaks a ex:Habitat . ",
            "ex:[habitat] a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:[habitat] a ex:Habitat .",
            " ex:HabitatL a ex:Habitat .",
            "ex:Sunfire Desert a ex:Habitat .",
            "ex:habitat ex:HabitatL a ex:Habitat.",
            "ex:Sunfire Desert a ex:Habitat .",
            " ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:[habitat concept] a ex:Habitat .",
            "ex:Skyland a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:[habitat] a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat . "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:[habitat concept] a ex:Habitat .",
            "ex:HabitatL a ex:Habitat dc:name \"Cloudy Peaks\" .",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:HabitatL a ex:Habitat ; ex:dc:subject \"Cloudy Peaks\" .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat dc:name \"Cloudy Peaks\" .",
            "ex:[habitat] a ex:Habitat .",
            "ex:[habitat] a ex:Habitat ; ex:location \"Skyland\" ; ex:temperature \"Cold\" .",
            "ex:Cloudy Peaks a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat ;",
            "ex:[habitat concept] a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ;",
            "ex:[habitat] a ex:Habitat .",
            "ex:[habitat ex:HabitatL a ex:Habitat ;dc:name \"Cloudy Peaks\"].",
            "ex:[habitat concept] a ex:Habitat .",
            "ex:[habitat : ex:HabitatL ] .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v1",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ex:HabitatL dc:name \"Cloudy Peaks\". ",
            " ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Sunfire Desert a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v2",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            " ex:[habitat concept] a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ex:HabitatL a ex:Habitat. ex:HabitatL dc:name \"Cloudy Peaks\" . ex:HabitatL ex:location \"Skyland\" .",
            "ex:Cloudy Peaks a ex:Habitat. ",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatA a ex:Habitat . ",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v3",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatL a ex:Habitat , dc:name \"Cloudy Peaks\". ",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:SunfireDesert a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v4",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat . ",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:[habitat concept] a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v5",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:[habitat concept] a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat. ",
            "ex:Cloudy Peaks a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . . . ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat . ",
            "ex:Cloudy Peaks a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v6",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:[habitat concept] a ex:Habitat. ex:[habitat concept] ex:HabitatL a ex:Habitat.",
            "ex:[habitat concept] a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v7",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat .",
            " ex:Cloudy Peaks a ex:Habitat.",
            "ex:Cloudy Peaks a ex:Habitat.",
            "ex:HabitatL a ex:Habitat",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v8",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:[habitat concept] a ex:Habitat .",
            "ex:HabitatA a ex:Habitat . ex:HabitatL a ex:Habitat . ex:HabitatA a ex:HabitatL . ex:HabitatA a ex:HabitatL . ex:Habitat",
            "ex:HabitatL a ex:Habitat ; ex:HabitatL :name \"Cloudy Peaks\" ;.",
            "ex:habitat Cloudy Peaks a ex:Habitat.",
            "ex:HabitatL a ex:Habitat ; ex:HabitatL name \"Cloudy Peaks\";.",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatL a ex:Habitat . :Cloudy Peaks a ex:Habitat .",
            "ex:Cloudy Peaks a ex:Habitat .",
            "ex:HabitatA a ex:Habitat ;",
            "ex:Cloudy Peaks a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "No.",
            "No",
            "No.",
            "No.",
            "Yes.",
            "No.",
            "No. ",
            "No.",
            "No.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "No.",
            "No",
            "No.",
            "No",
            "No.",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.",
            "No.",
            "No.",
            "No.",
            "No",
            "No.",
            "No.",
            "No.",
            "Yes",
            "No"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Fictional Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "No.",
            "No.",
            "No",
            "Yes.",
            "No",
            "No.",
            "No.",
            "Yes",
            "No.",
            "No"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Fictional Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "No.",
            "No",
            "No.",
            "No.",
            "Yes.",
            "Yes.",
            "Yes.",
            "No.",
            "Yes.",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Fictional Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "No.",
            "No.",
            "No.",
            "No",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No.",
            "No"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "No.",
            "No.",
            "No",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "No.",
            "No.",
            "No.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes",
            "No.",
            "No",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "No",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No.",
            "Yes. ",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No. ",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No.",
            "No",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "No.",
            "Yes.",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No.",
            "No.",
            "Yes.",
            "No.",
            "No",
            "No.",
            "Yes",
            "No.",
            "Yes",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "No.",
            "No.",
            "Yes.",
            "No.",
            "No.",
            "No",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes",
            "No.",
            "Yes. ",
            "Yes",
            "No.",
            "Yes",
            "No.",
            "Yes.",
            "No.",
            "No. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes",
            "Yes",
            "No.",
            "No",
            "Yes",
            "No.",
            "Yes.",
            "No.",
            "Yes.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No.",
            "No.",
            "Yes.",
            "No. ",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "No.",
            "No.",
            "Yes",
            "No.",
            "Yes. ",
            "No.",
            "No.",
            "Yes",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "No.",
            "No",
            "No. ",
            "No.",
            "No.",
            "Yes",
            "Yes.",
            "Yes",
            "No",
            "No"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative chain Inference Prompt v1",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No.",
            "No",
            "No",
            "No.",
            "No.",
            "No.",
            "No",
            "No.",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative chain Inference Prompt v2",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No. ",
            "No",
            "No.",
            "No",
            "Yes.",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative chain Inference Prompt v3",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No. ",
            "No.",
            "No",
            "No.",
            "No",
            "No.",
            "No.",
            "No.",
            "No"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v1",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No",
            "Yes.",
            "No.",
            "No. ",
            "Yes",
            "No.",
            "No.",
            "No.",
            "No.",
            "No"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v2",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "Yes",
            "No.",
            "No",
            "No",
            "No.",
            "Yes.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v3",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "Yes.",
            "No.",
            "No.",
            "Yes.",
            "No. ",
            "No.",
            "No. ",
            "Yes",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v1",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No.",
            "No.",
            "No",
            "No",
            "No.",
            "Yes.",
            "No. ",
            "No.  (The answer is No.)",
            "No. (RDF is not a database query language, it does not support queries like \"Can it be inferred\" or \"What is the result of the query\")",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v2",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes",
            "No.",
            "No.",
            "No.",
            "No",
            "No.",
            "No.",
            "No",
            "No.",
            "No"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v3",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No.",
            "No",
            "No.",
            "No. ",
            "No.",
            "No.",
            "No",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v1",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v2",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes.",
            "No.",
            "Yes",
            "Yes.",
            "No.",
            "No.",
            "No",
            "Yes",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v3",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes",
            "No",
            "No.",
            "Yes.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v1",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Canis rdfs:[subProperty] ex:Tiger.",
            "ex:Canis rdfs:[subClassOf] ex:Mammal.",
            "```",
            "ex:Canis rdfs:[property] ex:Mammal.",
            "```",
            "ex:[Canis] rdfs:[superClassOf] ex:[Mammal].",
            "ex:Cat rdfs:[property] ex:Mammal.",
            "ex:[Canis] rdfs:[superclassOf] ex:[Mammal]. ",
            "ex:Cat rdfs:[property] ex:Tiger rdfs:[property] ex:Canis rdfs:[property]",
            "ex:Cat rdfs:[property] ex:Canis rdfs:[property] ex:Tiger rdfs:[property] ex:Tigris rdfs:[property] ex:Canis rdfs:[property] ex:Tigris rdfs:["
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v2",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Canis rdfs:[property] ex:Mammal.",
            "ex:Cat rdfs:label \"Cat\".",
            "ex:[Canis] rdfs:[superClassOf] ex:[Mammal].",
            "ex:Canis rdfs:[property] ex:Cat.",
            "ex:Cat rdfs:[property] ex:Tiger rdfs:[property] ex:Mammal rdfs:[property] ex:Canis rdfs:[property] ex:DomesticatedAnimal.",
            "ex:[Tiger] rdfs:[superClassOf] ex:[Cat].",
            "ex:Canis rdfs:[subClassOf] ex:Mammal.",
            "ex:[Mammal] rdfs:[superClassOf] ex:[Tiger].",
            "ex:Canis rdfs:[property] ex:Mammal.",
            "ex:[error] rdfs:[property] ex:[Tigris]."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v3",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "None",
            "ex:Cat ex:superClassOf ex:Tiger.",
            "ex:[Canis] rdfs:[subClassOf] ex:[Tiger] ex:[superClassOf] ex:[Tigris].",
            "ex:Cat rdfs:[property] ex:Canis rdfs:[property] ex:Tiger rdfs:[property] ex:Tigris rdfs:[property] ex:Mammal rdfs:[property] ex:Canis rdfs:[",
            "ex:Canis rdfs:label \"Canis\" .",
            "ex:Cat rdfs:superClassOf ex:Tigris. # No Error",
            "ex:Cat rdfs:subClassOf ex:Canis.",
            "ex:Cat rdfs:subClassOf ex:Mammal. ",
            "ex:[ex:Canis] rdfs:[ex:subClassOf] ex:[Tigris].",
            "ex:Cat rdfs:[superClassOf] ex:Tiger."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumY a ex:MusicAlbum ;",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:AlbumF a ex:MusicAlbum ;",
            "ex:AlbumX a ex:MusicAlbum ;",
            "ex:[ArtistZ dc:birthYear \"1958\"] ex:[AlbumM dc:title \"AlivePhy\"]",
            "ex:AlbumF a ex:MusicAlbum ;",
            "ex:[ArtistZ dc:nationality]",
            "ex:[artist] ex:birthYear ex:1960.",
            "ex:[AlbumM] ex:[artist] ex:[Physik] .",
            "ex:AlbumF ex:releaseYear ex:rating ."
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumX ex:releaseYear ex:4.5.",
            "ex:[AlbumM] ex:[releaseYear] ex:[1980].",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:AlbumX a ex:MusicAlbum ;",
            "ex:MusicAlbum ex:releaseYear ex:birthYear ex:rating",
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:ArtistY dc:birthYear \"1941\" .",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:MusicAlbum ex:genre \"Rock\" ex:rating \"4.5\".",
            "ex:AlbumX a ex:MusicAlbum ; ex:rating \"4.5\" ."
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "[http://www.w3.org/1999/02/22-rdf-syntax-ns#]",
            "[dc]",
            "[dc:] ",
            "[dc]",
            "ex:MusicAlbum .",
            "```",
            "[rdf:].",
            "ex:MusicAlbum .",
            "[rdf:] (missing namespace) ",
            "```rdf"
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt - less data 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumF dc:subject \"Album\" ex:ArtistA dc:subject \"Artist\" .",
            "ex:AlbumF dc:title \"Sun Newtown\" ;",
            "ex:[dc:title]",
            "ex:[dc:title] ex:[artist] ex:[birthYear].",
            "ex:[ex:genre] ex:Rock ex:4.9.",
            "ex:Sun Newtown dc:title ex:artist ;",
            "ex:[dc:title] ex:Sun Newtown ex:4.9",
            "ex:[ex:ArtistA dc:name \"Dane\" ; ex:birthYear \"1960\" ; ex:genre \"Rock\" ; ex:rating 4.9 ; ex:releaseYear \"1982\" ] . ",
            "ex:[dc:title] ex:Sun Newtown .",
            "ex:[dc:title] ex:[artist] ex:[releaseYear]."
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt - less data 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:Physik dc:name \"Physik\" .",
            "ex:ArtistO dc:birthYear \"1971\" .",
            "ex:ArtistO dc:name \"Physik\" ; ex:genre \"Rock\" .",
            "ex:[dc:title] ex:[dc:title] ex:[dc:title] .",
            "ex:ArtistO a ex:Artist ;",
            "ex:ArtistO dc:birthYear ex:ArtistO ex:nationality .",
            "ex:[dc:title]",
            "ex:[dc:title] ex:[dc:title] ex:[dc:title] .",
            "ex:ArtistO dc:title \"Physik\" .",
            "ex:ArtistO dc:subject \"Physik\" ;"
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt - less data 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "```",
            "[http://www.w3.org/2000/01/rdf-schema#]",
            "[rdf:XML] ",
            "[dc:] ",
            "[http://purl.org/dc/elements/1.1/]",
            "[dc] .",
            "[dc:] ",
            "[ rdfs: ]",
            "```",
            "[http://example.org] ."
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 1",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:[Wasa Dog] a ex:Artist.",
            "ex:[rating] a dc:Rating ;",
            "```rdf",
            "ex:artistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ; ex:rating \"5.0\" .",
            "ex:ArtistZ a ex:Artist .",
            "```",
            " ex:[ex:ArtistZ] a ex:Artist .",
            "ex:[ex:ArtistZ] a ex:Artist.",
            "ex:WasaDog a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 2",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:Wasa Dog a ex:Artist .",
            "```rdfs",
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ;",
            "ex:WasaDog a ex:Artist .",
            "ex:ArtistA a ex:Artist ; ex:rating \"4.9\" .",
            "ex:WasaDog a ex:Artist.",
            "ex:[ArtistZ] a ex:Artist .",
            "(ex:ArtistA a ex:Artist) a ex:MusicAlbum ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 4",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:Seamus Finn a ex:Artist .",
            "ex:ArtistD a ex:Artist ;",
            "ex:[Artist] a ex:Artist .",
            " ex: [dane] a ex:Artist .",
            "ex:[ArtistY] a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistO a ex:Artist; ex:Rating:4.7; ex:AlbumX a ex:MusicAlbum; ex:Rating:4.5; ex:Rating:4.7; ex:AlbumM a ex:",
            "ex:ArtistO a ex:Artist ; ex:rating \"5.0\" .",
            "ex:ArtistY a ex:Artist.",
            "ex:[ArtistZ] a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 8",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:[ArtistO] a ex:Artist.",
            "ex:[Artist] a ex:Artist .",
            "ex:[Artist rating] a ex:MusicAlbum .",
            "ex:Sun Newtown a ex:Artist.  # <ex:Sun Newtown a ex:Artist.>",
            "ex:ArtistY a ex:Artist .",
            "ex:[Artist] a ex:Artist ;",
            "(ex:ArtistE a ex:Artist)",
            "ex:[artist concept] a ex:Artist .",
            "ex:[ArtistZ] a ex:Artist. ",
            "ex:ArtistM a ex:Artist. ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 16",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistD a ex:Artist.",
            "ex:[ArtistH] a ex:Artist.",
            "ex:ArtistG a ex:Artist .",
            "ex:ArtistD a ex:Artist . ; ",
            "ex:[ex:ArtistO] a ex:Artist.",
            "ex:[Artist] a ex:Artist .",
            "ex:ArtistM a ex:Artist.",
            "(ex:ArtistO a ex:Artist; dc:title \"Physik\" dc:rating \"5.0\")",
            "ex:ArtistC a ex:Artist.",
            "ex:[ArtistY] a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF/llama-3.2-1b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 32",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:Technician a ex:ArtistTechnician.",
            "ex:[ArtistUA] a ex:Artist.",
            "ex:[ArtistUH a ex:Artist]. ",
            "ex:Technician a ex:Artist.",
            "ex:Technician a ex:ArtistTechnician .",
            "ex:Technician a ex:ArtistTechnician.  3.0",
            "ex:Technician a ex:Artist. ",
            "ex:Folksinger a ex:Artist .",
            "ex:ArtistT a ex:Artist .",
            "ex:Technician a ex:ArtistTechnician."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "```",
            "```  ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "``` ",
            "```xml",
            "```",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "```",
            "```xml",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "```  ",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "``` "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistY a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "``` ",
            "ex:ArtistZ a ex:Artist. ",
            "```",
            "ex:ArtistO a ex:Artist. ",
            "```rdf",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums - Concept Prompt v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "```  ",
            "ex:ArtistY a ex:Artist.",
            "```php",
            "```",
            "```",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistY a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums - Concept Prompt v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "```",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums - Concept Prompt v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "```xml",
            "ex:ArtistO a ex:Artist. ",
            "```turtle",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Real Albumn v1",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "```turtle",
            "```rdfs:label \"AC/DC\"@en . ``` This response is in the required format, but I must point out that it is not a single RDF triple but rather a statement that is equivalent to one. The statement is: AC/",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "``` ",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Real Albumn v2",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "``` "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Real Albumn v3",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "``` ",
            "```rdfxml"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:Dane a ex:Artist.",
            "```",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist. ",
            "```  ",
            "```rdfs:label \"Dane\"@eng \".\";"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "```rdf",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "```",
            "``` ",
            "ex:Dane a ex:Artist.",
            "```",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:Dane a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:Dane a ex:Artist. ",
            "```",
            "ex:Dane a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "```",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "```rdf",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist.",
            "```sparql",
            "ex:Dane a ex:Artist. ",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "```",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "```rdfxml"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "```",
            "```",
            "ex:ArtistO a ex:Artist.",
            "```rdfxml",
            "```",
            "```turtle",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "```"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:Physik a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:Physik a ex:Artist. ",
            "ex:Physik a ex:Artist. ",
            "ex:Physik a ex:Artist. ",
            "ex:Physik a ex:Artist. ",
            "```sparql",
            "ex:Physik a ex:Artist. ",
            "ex:Physik a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "```",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "``` "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "```",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "```",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "```xml",
            "```turtle",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "ex:ArtistZ",
            "ex:ArtistZ",
            "ex:ArtistZ",
            "ex:ArtistZ.",
            "ex:ArtistZ",
            "ArtistZ.",
            "wasa Dog",
            "ex:ArtistZ. ",
            "ex:ArtistZ",
            "ex:ArtistZ"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "To answer the question, we need to identify which artist is associated with the album that has genre \"Pop\". According to the provided RDF data, the albums \"Sun Newtown\", \"Beans\", and \"AlivePhy\" have the \"Pop\" genre",
            "ex:ArtistZ . ",
            "To answer this question, we need to identify the album with genre \"Pop\" and then determine the artist associated with that album. Looking at the provided RDF data, the album \"Beans\" has a genre of \"Pop\". According to the data,",
            "ex:ArtistZ.",
            "Wasa Dog.",
            "`wasa dog`",
            "ex:ArtistZ.",
            "To answer this question, we need to find the artist that is associated with an album that has the genre \"Pop\". Looking at the data provided, we find that ex:AlbumB has the genre \"Pop\" and is associated with ex:Artist",
            "Wasa Dog.",
            "ex:ArtistZ . "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "ex:ArtistZ. ",
            "ex:ArtistZ.",
            "Wasa Dog. ",
            "ex:ArtistZ. ",
            "ex:ArtistZ. ",
            "wasa Dog. ",
            "The artist who made an album that was genre \"Pop\" is ArtistZ.",
            "ex:ArtistZ. ",
            "ex:ArtistZ. ",
            "ex:ArtistZ. "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog. ",
            "wasa dog",
            "Wasa Dog. ",
            "```",
            "Wasa Dog",
            "```plain",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog. ",
            "Wasa Dog.",
            "`Wasa Dog`",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "\"Wasa Dog\"",
            "Wasa Dog.",
            "Wasa Dog. "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog.",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\". ",
            "Wasa Dog.",
            "Wasa Dog",
            "To answer the question, we need to find out the artist who is associated with an ex:MusicAlbum that has the ex:genre \"Pop\". Then, we need to find out the dc:name of that artist. The artist ex:ArtistZ",
            "Wasa Dog.",
            "To solve this task, we need to find the ex:Artist who made an ex:MusicAlbum with the ex:genre \"Pop\". We can do this by using the given RDF data.",
            "To answer this question, we must first locate the ex:MusicAlbum with the ex:genre \"Pop\". The ex:AlbumB has \"Pop\" as its genre. Then, we must find the artist associated with ex:AlbumB. The",
            "ex:ArtistZ dc:name \"Wasa Dog\" . "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "```",
            "ex:Glimmerphoenix a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "``` ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "``` ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "```sparql",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "```sparql",
            "```rdfxml",
            "``` ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "```php",
            "```rdf",
            "```",
            "```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "```rdfxml",
            "ex:CreatureU a ex:MythicalCreature.  Note: The creature \"Glimmerphoenix\" has the highest magic level \"Very High\". ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "``` ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "```",
            "``` ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "```",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "```turtle",
            "ex:CreatureX a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "```xml",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "``` ",
            "```turtle",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "```"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "``` ",
            "ex:Glimmerphoenix a ex:MythicalCreature. ",
            "ex:Glimmerphoenix a ex:MythicalCreature. ",
            "```rdf",
            "``` ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:Mythat .",
            "ex:CreatureU a ex:Mythat ; ",
            "```",
            "```",
            "ex:CreatureU a ex:MythatialCreature. ",
            "ex:CreatureU a ex:Mythat.",
            "ex:CreatureU a ex:Mythat; ",
            "ex:CreatureU a ex:Mythat.",
            "ex:CreatureU a ex:Mythat 1",
            "ex:CreatureU a ex:MythatheticalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature. ",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "``` ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature . ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureX a ex:MythicalCreature. ",
            "``` ",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "``` "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureX a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "``` ",
            "To complete this task, we need to find the ex:MythicalCreature that lives in the ex:Habitat with the highest ex:temperature and create a statement that shows which ex:MythicalCreature lives in the ex:Habitat",
            "```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "``` ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureX a ex:MythicalCreature. ",
            "ex:CreatureX a ex:MythicalCreature. ",
            "ex:CreatureX a ex:MythicalCreature. ",
            "ex:CreatureX a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "```turtle",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "```",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "``` ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "``` RDF",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v1",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "```",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v2",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "```",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v3",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v4",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v5",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v6",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v7",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v8",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat ;. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "No. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Fictional Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Fictional Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "No. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Fictional Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "No. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes.",
            "No. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes. ",
            "No. ",
            "No.",
            "Yes. ",
            "No. ",
            "No. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes.",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "No.",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes.",
            "Yes. ",
            "No. ",
            "Yes.",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "No. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "No.",
            "Yes. ",
            "Yes.",
            "No. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "No. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "No. ",
            "No. ",
            "No. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes.",
            "Yes. ",
            "No. ",
            "Yes.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "No.",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "No. ",
            "No. ",
            "No. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative chain Inference Prompt v1",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes.",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative chain Inference Prompt v2",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "Yes.",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "No.",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No.",
            "Yes. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative chain Inference Prompt v3",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No. ",
            "Yes. ",
            "Yes.",
            "No. ",
            "No.",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v1",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v2",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "Yes. ",
            "Yes.",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v3",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "No. ",
            "Yes. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v1",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No. ",
            "No.",
            "No. ",
            "Yes.",
            "No.",
            "Yes. ",
            "No.",
            "No.",
            "Yes.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v2",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes. ",
            "Yes. ",
            "No.",
            "No. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes.",
            "No. ",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v3",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v1",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v2",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No. ",
            "Yes. ",
            "No. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "No. ",
            "No. ",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v3",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v1",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tigris rdfs:superClassOf ex:Tiger.",
            "ex:Tiger rdfs:subClassOf ex:Mammal.",
            "ex:Mammal rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. (Error) - A class cannot be a subclass of another class, only instances of a class can be subclasses of another class. ",
            "ex:Canis rdfs:subClass: ex:Mammal.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. "
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v2",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tigris rdfs:superClassOf ex:Tiger. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:[Tigris] rdfs:[subClassOf] ex:[Tiger].",
            "ex:Tigris rdfs:superClassOf ex:Tiger .",
            "ex:Tiger rdfs:subClassOf ex:Tigris.",
            "ex:Tigris rdfs:superClassOf ex:Tiger.",
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Cat rdfs:subClassOf ex:Mammal.",
            "ex:Tigris rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. "
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v3",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tigris rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tigris rdfs:superClassOf ex:Tiger. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Cat.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tigris rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:subClassOf ex:Cat."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 5
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumB ex:rating \"5.0\".",
            "ex:AlbumF ex:rating 4.9.",
            "ex:AlbumB ex:genre \"Pop\". ",
            "ex:AlbumM ex:rating \"4.7\" .",
            "ex:AlbumF ex:rating \"4.9\". ",
            "ex:AlbumB ex:rating \"5.0\". ",
            "ex:AlbumX ex:rating \"4.5\" .",
            "ex:AlbumF ex:rating \"4.9\" .",
            "ex:AlbumF ex:rating 4.9 . ",
            "ex:AlbumM ex:genre \"Rock\" ex:rating \"4.7\" ."
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 2
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumM ex:rating \"4.7\" .",
            "ex:AlbumM ex:releaseYear \"1980\". ",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:rating \"4.7\". ",
            "ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:releaseYear \"1980\" . ",
            "ex:AlbumM ex:rating \"4.7\" . ",
            "ex:releaseYear \"1980\" ;",
            "ex:AlbumM ex:releaseYear \"1980\" . "
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "[ns] ",
            "[dc] ",
            "[dc] ",
            "[http://www.w3.org/1999/02/22-rdf-syntax-ns#] .",
            "```",
            "```",
            "[dc] ",
            "```plain",
            "[ dc ]  # Note the position of 'dc' at the beginning, which is the root namespace. The 'dc' namespace is in the 4th position of the list.",
            "```xml"
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt - less data 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumF ex:title \"Sun Newtown\". ",
            "ex:ArtistA ex:birthYear \"1960\". ",
            "ex:AlbumF dc:title \"Sun Newtown\".",
            "ex:[concept] ex:[property] ex:[value].",
            "ex:ArtistA ex:birthYear \"1960\". ",
            "ex:ArtistA ex:birthYear \"1960\". ",
            "ex:[concept] ex:[property] ex:[value].",
            "ex:ArtistA ex:birthYear \"1960\". ",
            "ex:AlbumF ex:releaseYear \"1982\".",
            "ex:[concept] ex:[property] ex:[value]. "
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt - less data 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:ArtistO ex:birthYear \"1971\" . ",
            "ex:AlbumM ex:rating \"4.7\" . ",
            "ex:AlbumM ex:rating \"4.7\" .",
            "ex:AlbumM ex:rating \"4.7\" .",
            "ex:AlbumM dc:title \"AlivePhy\" .",
            "ex:AlbumM ex:rating \"4.7\" . ",
            "ex:[concept] ex:[property] ex:[value].",
            "ex:[concept] ex:[property] ex:[value].",
            "ex:AlbumM ex:rating \"4.7\". ",
            "ex:AlbumM ex:artist ex:ArtistO . "
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Error Identification Prompt - less data 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "[dc] ",
            "[ex] ",
            "[http://example.org/label/ ] ",
            "[dc] ",
            "[ dc ] . ",
            "[dc] ",
            "[dc] ",
            "[ dc ] ",
            "[dc] ",
            "[ex] . "
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 1",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "```qubes",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "``` ",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 2",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistA a ex:Artist. ",
            "```rdf",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "```"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 4",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistF a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "To answer this question, I will identify the artist with the highest album rating by comparing the rating values of each artist. The artist with the highest rating value is the one that will be used as the subject in the RDF triple response.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 8",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "```turtle",
            "```",
            "```xml",
            "```rdf",
            "ex:ArtistZ a ex:Artist.",
            "To find which artist has the highest album rating, we need to compare the ratings of the albums associated with each artist. The artist with the highest rating among their albums will be the one we are looking for.",
            "ex:ArtistZ a ex:Artist. ",
            "```turtle",
            "ex:ArtistC a ex:Artist . "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 16",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "```rdf",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistB a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "```sparql",
            "```turtle",
            "```",
            "```",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 4
    },
    {
        "model": "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF/llama-3.2-3b-instruct-q8_0.gguf",
        "prompt_name": "Albums size 32",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistD a ex:Artist .",
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistD a ex:Artist.",
            "```xml",
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistUB a ex:Artist.",
            "ex:ArtistM a ex:Artist.",
            "ex:ArtistUD a ex:Artist .",
            "ex:ArtistD a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist.OOO",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.NN",
            "ex:ArtistZ a ex:Artist.OOO",
            "ex:ArtistZ a ex:Artist .NN",
            "ex:ArtistZ a ex:Artist.AAAAAAAA",
            "ex:ArtistZ a ex:Artist.OOO"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.AAAAAAAAAAAAAA",
            "ex:AlbumF a ex:MusicAlbum.",
            "ex:ArtistZ a ex:Artist.OOO",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.ooo",
            "ex:ArtistA a ex:Artist.NN",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.OOptimal answer:ex:ArtistZ a ex:Artist.AAAAAA",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 2
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .ooo",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OOB",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist. NN",
            "ex:ArtistA a ex:Artist.NN",
            "ex:ArtistY a ex:Artist.",
            "ex:AlbumX a ex:MusicAlbum.NN",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:AlbumX a ex:MusicAlbum.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 2
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OOB",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.oooo",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistA a ex:Artist.OOx",
            "ex:AlbumF a ex:MusicAlbum .",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Real Albumn v1",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistA a ex:Artist.AAAAAAAAAAAAAA",
            "ex:AlbumX a ex:MusicAlbum.NNex:AlbumX a ex:MusicAlbum. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist .  ",
            "ex:ArtistY a ex:Artist . ",
            "ex:AlbumF a ex:MusicAlbum ;",
            "ex:AlbumX a ex:MusicAlbum.",
            "ex:ArtistY a ex:Artist.NN",
            "ex:ArtistY a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Real Albumn v2",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.NNP",
            "ex:ArtistZ a ex:Artist.AAAAAAA",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.NN"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Real Albumn v3",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.AAAA",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistO a ex:Artist.NNN"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.oooo",
            "ex:ArtistA a ex:Artist.NNP:ex:ArtistA. 2017-11-29 22:00:00.0",
            "ex:ArtistA a ex:Artist.OOptext",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.OOmega",
            "ex:ArtistA a ex:Artist.AAAA",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. OOex:ArtistA.NNex:dc:name \"Dane\" . \t>OOex:ArtistA. \t>ex:birthYear \"196"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.ooo",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.NN",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.OOB",
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistA a ex:Artist.OOO"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.AAAAAAAA",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist .OO",
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistA a ex:Artist.",
            "ex:AlbumF a ex:MusicAlbum .  ",
            "ex:ArtistA a ex:Artist.AAAAA",
            "ex:ArtistA a ex:Artist.NNN",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.NN",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.AAAAAAA",
            "ex:ArtistA a ex:Artist.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "ex:ArtistA a ex:Artist.OO"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.OOl",
            "ex:ArtistA a ex:Artist.aaaa",
            "ex:ArtistA a ex:Artist.NN",
            "ex:ArtistA a ex:Artist.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "ex:ArtistA a ex:Artist.NN",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.OOO",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.AAAAAAAA",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.AAAAAAAA",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.OO"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.AAAAAAAA",
            "ex:ArtistO a ex:Artist.AAAAA",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.AAAAAAAAAAAAAAA",
            "ex:Physik a ex:Artist.AAAAAAA",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.OO",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.OOX"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.OO",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist .AAAAAAAA",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.AAAA",
            "ex:ArtistO a ex:Artist.OOI",
            "ex:ArtistO a ex:Artist.OO",
            "ex:ArtistO a ex:Artist.OO",
            "ex:ArtistO a ex:Artist.OOB"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:Physik a ex:Artist.OO",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.OO",
            "ex:ArtistO a ex:Artist.NN",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.OOB",
            "ex:ArtistO a ex:Artist.NN"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.OO",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. OOboxxex:ArtistO a ex:Artist.  (The ex:Artist with the ex:nationality \"Australia\" is ex:ArtistO)",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.NN",
            "ex:Physik a ex:Artist.AAAAAAAAA",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.OO",
            "ex:Physik a ex:Artist.AAAAAAAAAANNN",
            "ex:ArtistO a ex:Artist.OO",
            "ex:PhysikO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.NNN",
            "ex:ArtistO a ex:Artist.AAAAAAAA",
            "ex:ArtistO a ex:Artist.AAAAAAAAAAA"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.OO",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.AAAA",
            "ex:Physik a ex:Artist.",
            "ex:ArtistO a ex:Artist.AAAAAAAAAA",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.OO"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.NNNN",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAAAA",
            "ex:AlbumB a ex:MusicAlbum.=\"ex:AlbumB\" >OOex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.NN",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAAAA",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAA",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.oooo"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.NN",
            "ex:AlbumB a ex:MusicAlbum.aaaa",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.NNex:AlbumB has the genre \"Pop\". ",
            "ex:AlbumB a ex:MusicAlbum.OO",
            "ex:AlbumB a ex:MusicAlbum.OO"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.OOptimally, this response is the correct answer. However, the triple ex:AlbumB a ex:MusicAlbum does not have the genre \"Pop\" as indicated in the data",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.OOO",
            "ex:AlbumB a ex:MusicAlbum.NNN",
            "ex:AlbumB a ex:MusicAlbum.ooo",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.OO",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAAAAA",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.OOAK",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAAAAAAAAAA",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.OOpting for this response means we're looking for the album with the title \"Beans\" that has the genre \"Pop\". The graph confirms this is the case. The other albums listed"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.AAAAA",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAAAA",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAAAAAAAAA",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAAAAAA",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAAAA"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.AAAA",
            "ex:AlbumB a ex:MusicAlbum.AAAAAAAAA",
            "ex:AlbumB a ex:MusicAlbum.NNN",
            "ex:AlbumB a ex:MusicAlbum.AAAAAA",
            "ex:AlbumB a ex:MusicAlbum.OOO",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.AAAAAAAA",
            "ex:ArtistZ a ex:Artist.",
            "ex:AlbumB a ex:MusicAlbum .  ",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .NNN",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.AAAAAAAA"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.OOB",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OOB"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist. OO",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.NNNN"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.NN",
            "ex:ArtistZ a ex:Artist.OOO",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.OOIex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.NN",
            "ex:ArtistZ a ex:Artist.OOmega",
            "ex:ArtistZ a ex:Artist.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.AAAAAAAAA",
            "ex:ArtistZ a ex:Artist.NN",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.NNNNN"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.oooo",
            "ex:ArtistZ a ex:Artist.NN",
            "ex:ArtistZ a ex:Artist.NNNN",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa DogNN",
            "Wasa Dog",
            "Wasa DogNN.AAAA.AAAAAAAA.AAAAAAAA.1981",
            "Wasa DogNNN",
            "\"Wasa Dog\"AAAAAAAAAAA",
            "Wasa Dog",
            "Wasa DogAAAAAAAA",
            "Wasa Dog",
            "Wasa DogNN"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa DogNNP>aaaaaaa",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa DogAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".NN",
            "Wasa DogOO",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa DogNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN",
            "Wasa Dog",
            "Wasa Dog.NN",
            "Wasa Dog.NN",
            "Wasa DogAAAAAAAAAA",
            "Wasa DogNNNNNN",
            "Wasa Dog",
            "Wasa DogNN",
            "Wasa DogAAAAAAAAAAAAAAA"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa DogAAAAAAAAA",
            "Wasa Dog",
            "Wasa Dogoooo",
            "Wasa Dog",
            "Wasa DogOO",
            "\"Wasa Dog\"OO1OO2>AAAAAAAAA>OO3>OO4>Wasa Dog.NN1>WASAA>Wasa Dog. 2018-04",
            "Wasa Dog",
            "\"Wasa Dog\"NNP",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa DogOO",
            "Wasa DogOO",
            "\"Wasa Dog\"NNP",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa DogOO"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa DogNNNNN",
            "Wasa DogAAAAAAAAAAAAAAAAAA_1",
            "Wasa Dog",
            "Wasa DogOOlO 1",
            "Wasa DogNNOO"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.AAAAAA",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.NNNN",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.AAAAA",
            "ex:CreatureU a ex:MythicalCreature.NN",
            "ex:CreatureU a ex:MythicalCreature.OObox",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:Fluffdragon a ex:MythicalCreature.NNNNex:Fluffdragon a ex:MythicalCreature.NNNNNNNN",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.NNeed a help with a task. I am ready to listen to your request and help you. What is your request?111111111111111111111111111",
            "ex:CreatureX a ex:MythicalCreature .NN",
            "ex:CreatureX a ex:MythicalCreature. NNN",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.oooo"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 2
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.AAAA",
            "ex:CreatureU a ex:MythicalCreature.AAAAAAA",
            "ex:CreatureU a ex:MythicalCreature.NN",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. NNL",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.=\"addition\" 0.5"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.NNN",
            "ex:CreatureU a ex:MythicalCreature.NNex:CreatureU a ex:MythicalCreature.NNex:CreatureU a ex:MythicalCreature.NNex:CreatureU a",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.OO1"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature. ",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature",
            "ex:CreatureX a ex:MythicalCreature. ",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:HabitatL a ex:Habitat ;",
            "ex:CreatureX a ex:MythicalCreature.NNN",
            "ex:CreatureX a ex:MythicalCreature.OOB"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.=\"iframelink\">This response indicates that the creature with the highest magic level is the Glimmerphoenix. (Note: The Glimmerphoenix has the",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.OOmputerspagn=\"1\">NNeed notiagn=\"1\"> 2000/01/rdf-schema#> .ondon> (ex:My",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. NNP",
            "ex:CreatureU a ex:MythicalCreature.NNeed to use the RDF data provided to find the creature with the highest magic level. In the given RDF data, the magicLevel values are \"Very High\" for ex:",
            "ex:CreatureU a ex:MythicalCreature.NN",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.=\"nbs\"> \u8be5\u4efb\u52a1\u7684\u7b54\u6848\u662f:ex:CreatureU a ex:MythicalCreature\u3002\u6839\u636e\u539f\u59cb\u6570\u636e,ex:CreatureU\u4ee3\u8868\u5177\u6709 \"\u975e\u5e38\u9ad8",
            "ex:CreatureU a ex:MythicalCreature"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.AAAAAAAA",
            "ex:CreatureX a ex:MythicalCreature.NN",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureX a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.NN",
            "ex:CreatureX a ex:MythicalCreature.OOex:CreatureU a ex:MythicalCreature.NNex:CreatureX a ex:MythicalCreature.1984ex:CreatureU",
            "ex:CreatureX a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 4
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.OOptimally, this response would indicate the creature with the highest magicLevel, but the code does not specify how to differentiate between the two creatures. The example below should be",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.NNeeded.NNeeded.2018/07/17 23:07:44.198.174.143.10",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.NN",
            "ex:CreatureU a ex:MythicalCreature. AAAAAAAAANNNNNNNNNNNNNNNN",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.OOO",
            "ex:CreatureU a ex:MythicalCreature.AAAAAAAAAAAAAA",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.NNNN",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.AAAAAAAA",
            "ex:CreatureU a ex:MythicalCreature.  ",
            "ex:CreatureU a ex:MythicalCreature.NN"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.aaaaaaa",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature .AAAAAA",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature .NN",
            "ex:CreatureX a ex:MythicalCreature",
            "ex:CreatureX a ex:MythicalCreature.NNN",
            "ex:CreatureX a ex:MythicalCreature.NNNNZ"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 1
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.  ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.NN",
            "ex:CreatureU a ex:MythicalCreature.AAAAAAAAAAAAA",
            "ex:CreatureU a ex:MythicalCreature.NN",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.EDH",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.OOO1",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.OOH",
            "ex:CreatureU a ex:MythicalCreature.NN",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.NN"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:Fluffdragon a ex:MythicalCreature .OOx",
            "ex:Fluffdragon a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureX a ex:MythicalCreature.NNNNNN",
            "ex:Fluffdragon a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.AAAAAAAAA",
            "ex:CreatureX a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.OOB",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 5
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.NNP",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureX a ex:MythicalCreature.=\"enlarge\">The Fluffdragon is a mythical creature. This can be determined based on the RDF data provided. The Fluffdragon (ex:CreatureX) lives in",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.OOHazardous Chemicals",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.AAAA",
            "ex:CreatureU a ex:MythicalCreature.aaaa",
            "ex:CreatureX a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 6
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:Fluffdragon a ex:MythicalCreature.NN",
            "ex:CreatureX a ex:MythicalCreature .NNNNNNNNNNNNNNNNNNNNNNNN",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:Fluffdragon a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:Fluffdragon a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.=\"none\" /",
            "ex:Fluffdragon a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.NN",
            "ex:Fluffdragon a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.OOE",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:CloudyPeaks a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat .OOO",
            "ex:HabitatL a ex:Habitat.",
            "ex:CreatureX a ex:MythicalCreature",
            "ex:CloudyPeaks a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:CreatureX a ex:MythicalCreature .",
            "ex:CloudyPeaks a ex:Habitat.NN",
            "ex:CloudyPeaks a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NNNNZ"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 5
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NNNN",
            "ex:HabitatL a ex:Habitat.NNN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .NNNNNNNNNNNNNNNNNNNNNNNN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat..S.NNative.NNeedle.NNeedle.NNeedle.NNeedle.php?>ex:H",
            "ex:HabitatL a ex:Habitat .NN",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.OO",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.OO",
            "ex:CreatureX a ex:MythicalCreature .NN",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.OOBC",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NNN",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.AAAAAAAA",
            "ex:CloudyPeaks a ex:Habitat.NN",
            "ex:CloudyPeaks a ex:Habitat.NNN",
            "ex:CloudyPeaks a ex:Habitat. NN",
            "ex:CloudyPeaks a ex:Habitat. ",
            "ex:CloudyPeaks a ex:Habitat.aaaa",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.aaaaaa",
            "ex:HabitatL a ex:Habitat.",
            "ex:CloudyPeaks a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 4
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NNN",
            "ex:HabitatL a ex:Habitat.=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#> (This is a single RDF triple in the form of ex:HabitatL",
            "ex:HabitatL a ex:Habitat.oooo",
            "ex:HabitatL a ex:Habitat.NNN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NNNNHS",
            "ex:HabitatL a ex:Habitat.OO"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v1",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NNex:CreatureX a ex:MythicalCreature; dc:name \"Fluffdragon\"; ex:habitat ex:HabitatL, ex:color \"Blue\"; ex",
            "ex:HabitatL a ex:Habitat. =\"t\">Ex",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.AAAAAA",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v2",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .oooo",
            "ex:HabitatL a ex:Habitat .NNN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NNP",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.AAAAAAAAA",
            "ex:HabitatL a ex:Habitat.OOEx",
            "ex:HabitatL a ex:Habitat.NNN"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v3",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat .NNN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NNeed to find out the type of a specific habitat. Which of the following is the type of \"Cloudy Peaks\"? (a) ex:habitat (b) ex:H",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.NNN",
            "ex:CreatureX a ex:MythicalCreature .AAAAAAAA",
            "ex:HabitatL a ex:Habitat .NNN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .NN"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v4",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NNNN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .=\"ex:HabitatL\"aaaaaaa",
            "ex:HabitatL a ex:Habitat .=\"en\">The RDF triple that identifies the habitat with the name \"Cloudy Peaks\" is: ex:HabitatL a ex:Habitat. ",
            "ex:CreatureX a ex:MythicalCreature .NN",
            "ex:HabitatL a ex:Habitat.NN"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v5",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.NN",
            "ex:CloudyPeaks a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat.NNN",
            "ex:HabitatL a ex:Habitat.ate the fact that the name of the habitat \"Cloudy Peaks\" is associated with the resource identifier ex:HabitatL. To represent this in RDF, the RDF triple is:",
            "ex:HabitatL a ex:Habitat.aaaa",
            "ex:HabitatL a ex:Habitat .=\"0\">NNearby",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v6",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.NNNN",
            "ex:CreatureX a ex:MythicalCreature .NN",
            "ex:HabitatL a ex:Habitat. ",
            "ex:CloudyPeaks a ex:Habitat.OOE",
            "ex:HabitatL a ex:Habitat.=\"iframely_content\">NNex:CreatureX a ex:MythicalCreature ; dc:name \"Fluffdragon\" ; ex:habitat ex:Habitat",
            "ex:CloudyPeaks a ex:Habitat.OOptimally, your response will have the correct predicate and object to complete the triple. ",
            "ex:CloudyPeaks a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. NNP",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 6
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v7",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat..Signed.Signed",
            "ex:HabitatL a ex:Habitat.EDisplay:0",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.=\"ex:HabitatL\" />NNP",
            "ex:CloudyPeaks a ex:Habitat. NNN",
            "ex:HabitatL a ex:Habitat.",
            "ex:CreatureX a ex:MythicalCreature .NNNex:CreatureX a ex:Habitat ; . (Code: 200, Source: ex:HabitatL)",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NN"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 8
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v8",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NN",
            "ex:HabitatL a ex:Habitat.NNNN",
            "ex:HabitatL a ex:Habitat.AAAAAAAA",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.OO"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.1994",
            "Yes.",
            "Yes.\u10db\u10e1\u10d5\u10d0",
            "Yes.1982\u5e7409\u670816\u65e5 2015\u5e7411\u670807\u65e5 2004\u5e7410\u670830\u65e5 2015\u5e7411\u670807\u65e5 2004\u5e7410\u670830\u65e5 2015\u5e7411\u670807",
            "Yes.\u10ea",
            "Yes.php /?>php /?://expand:ex:Cat rdfs:subClassOf ex:Mammal.  The data states that ex:Cat is a subclass of ex:Mammal, and the",
            "Yes.1989.\u10db\u10d4\u10da\u10d0.\tYes.",
            "Yes.100%nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;nbsp;",
            "Yes. 2019\u5e744\u670826\u65e5 21:09:24.0",
            "Yes.2019-10-07T07:31:42+00:00. 0.008639. Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.://",
            "Yes",
            "Yes.",
            "Yes..Forms",
            "Yes.",
            "Yes.",
            "Yes.={Tigris} is a subclass of {Tiger} as indicated by the statement <tspans> ex:Tigris rdfs:subClassOf ex:Tiger</tspans>.",
            "Yes._REF3)Tiger is a subclass of Mammal, which is a superclass of Cat. Since Tigris is a subclass of Tiger, it can be inferred that Tigris is also a subclass of Cat. Consequently",
            "Yes.ounces.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "No.2008\u5e744\u67088\u65e5 12:22:56.0",
            "Yes.\u10db\u10d4\u10dc\u10e3",
            "Yes.1] [1] The RDF triple `ex:Tigris rdfs:subClassOf ex:Tiger` can be inferred from the given RDF data. Here's how:",
            "No.\u10db",
            "Yes.1990.4.2",
            "Yes.={()ex:Canis rdf:subClassOf ex:Mammal. ex:Tigris rdf:subClassOf ex:Tiger. ex:Cat rdf:subClassOf ex:Mammal. ex:Tiger rdf:",
            "Yes.2009/08/24 15:29:23.0",
            "Yes.  <!-- 0.080 seconds -->\u10db\u10d4 \u10d3\u10d0\u10d2\u10e0\u10d0\u10e8\u10d8 \u10d3\u10d0\u10db\u10e1\u10d0\u10ee\u10e3\u10e0\u10d4",
            "No.2009",
            "Yes.php /?> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.=\"iframely_iframely_1\">Yes.198.2%2C + 16.0%2C + 8.3%2C + 5.4%2C + ",
            "Yes.1>",
            "Yes.",
            "Yes.2008-08-26 16:05:46.0",
            "Yes.",
            "Yes.",
            "Yes.196nbsp/://",
            "Yes.php /end>://://response: Yes.://\u830d",
            "Yes.ating the RDF data below:",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.php //? 1.1.1.1 //? 1.1.1.1",
            "Yes.",
            "Yes.NNNN",
            "Yes.={() 2023-05-19 07:40:13.0, 9.0.0.0, 0.0.0.0, 0.0.0.0, 0",
            "Yes.",
            "Yes.{\\$2",
            "Yes.2009\u5e745\u67089\u65e5, 09:48:40.0",
            "Yes.://",
            "Yes.2009\u5e7410\u67087\u65e5 09:50:49",
            "Yes.://"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.1999.4.1 07:50.2.5",
            "Yes.1951)ex:SomeK.\t(2)ex:SomeM.\t(3)ex:SomeA.\t(4)ex:SomeC.\t(5)ex:SomeL.\t(",
            "Yes.1988.15.7.4.4.7.4.8.5.8.6.8.5.5.7.3.6.5.5.1.5.7.3",
            "Yes.",
            "Yes.://",
            "Yes.2009",
            "Yes._REF>php $rdfs->subClassOf->asRDF->toHTML)?>://Reflexit",
            "No.2.0>://The reason that we cannot infer that \"ex:SomeL rdfs:subClassOf ex:SomeC\" is that the RDF data provided says that ex:SomeL is a subclass of",
            "Yes._REF>://The RDF triples indicate that ex:SomeL is a subclass of ex:SomeC, since the code states that ex:SomeL is a subclass of ex:SomeC. Although it also shows that",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes. 2023-10-30 07:44:49.0",
            "Yes.1974/08/08 16:39:55.0",
            "Yes.",
            "Yes.1985",
            "Yes.2020-01-23 10:57:05",
            "Yes.note that if there is an RDF data with a triple ex:Tigris rdfs:subClassOf ex:Cat, then the answer would be Yes. In this case, the given RDF data has the triple ex:Tiger",
            "Yes.1999/02/22-rdf-syntax-ns#> 1999/02/22-rdf-syntax-ns#> 2000/01/rdf-schema#> 2000/01/rdf-schema#",
            "Yes.198.1.1",
            "Yes.asmith 2019-09-02T18:03:27.000Z",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.://",
            "Yes.asmith@illinois.edu",
            "Yes.",
            "Yes.ysics 1.0; font-family: Arial, Helvetica, sans-serif; font-size: 12pt; font-style: italic;\">The RDF data provided shows the following class hierarchy:ex:Cat > ex:Mammal",
            "Yes.://ex:Canis, which is a subClassOf ex:Mammal, is also a subClassOf ex:Cat, which is a subClassOf ex:Mammal.  Thus, by transitivity, it",
            "No.1983",
            "No.={()\"ex:Tigris rdfs:subClassOf ex:Tiger\"} and (){rdfs:subClassOf relations are different. The first is an instance of the second.://relationship. The second one",
            "Yes._REF(1.2)",
            "Yes. java",
            "Yes.://"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.1997.1.1.1",
            "Yes.2009\u5e746\u67083\u65e5 09:56:33",
            "Yes.100%nbsp; \u8bf7\u6559\u4e00\u4e0b\uff1a\u662f\u5426\u80fd\u63a8\u65ad\u51fatiger\u662f\u732b\u7684\u5b50\u7c7b\uff1f \u4ee5\u4e0b\u662fRDF\u6570\u636e\uff1a",
            "Yes.1988",
            "Yes.1>",
            "Yes.100%nbsp;nbsp;",
            "No.irtual",
            "Yes.",
            "No.{\\x05",
            "Yes.1994) "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes.NNNNN",
            "Yes.2019\u5e7405\u670819\u65e5 09:59:52",
            "Yes.",
            "Yes.1999-09-02 11:29:35 1999-09-02 11:29:35 1999-09-02 11:29:35 1999-09-02 ",
            "No.1956>1",
            "Yes.2005\u5e7412\u670828\u65e5 13:21:40",
            "Yes.",
            "Yes.",
            "Yes.2004-04-21 13:48:45.0",
            "Yes._REF>://.://Responding to a query is not the only task. You can use RDF to store and retrieve data, define and use classes and their instances, and make inferences. If you want"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes.1989-08-22 1996-12-10 2015-04-01 2017-10-24 2020-06-08 2020-11-03 2021-03",
            "No._REF1) The given RDF data shows that ex:SomeL is a subclass of ex:SomeC, which in turn is a subclass of ex:SomeM. There is no direct rdfs:subClassOf relationship between",
            "No.1001",
            "Yes.=\"add\" id=\"1\">Yes",
            "No..Forms a chain: ex:SomeL rdfs:subClassOf ex:SomeC, ex:SomeC rdfs:subClassOf ex:SomeM, but \"ex:SomeM rdfs:subClassOf",
            "Yes.{\\itex:SomeL is a subClassOf of \\itex:SomeC, which is a subClassOf of \\itex:SomeM. Therefore, it can be inferred that \\itex:SomeL",
            "Yes.1988",
            "Yes.NNN",
            "Yes.={mathjax:0}Yes. (It can be inferred that \"ex:SomeL rdfs:subClassOf ex:SomeM\", since \"ex:SomeL\" is a subclass of \"ex:SomeC",
            "Yes._REF_0> \"ex:SomeL rdfs:subClassOf ex:SomeC\" and \"ex:SomeC rdfs:subClassOf ex:SomeM\" and \"ex:SomeM rdfs:"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes.",
            "Yes.={ex:SomeL,ex:SomeM} (This response is one of the correct answer. Another possible response is \"Yes\".)://",
            "Yes.",
            "Yes.ouncescript>://.://",
            "No.",
            "No.://",
            "Yes.1989-12-31T13:58:23-05:00",
            "No.://",
            "Yes. NNNO",
            "No.NN"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes.",
            "Yes._REF>://_REF>",
            "Yes.111",
            "Yes.",
            "Yes. _REF:ex:Cat_1_3_3_1_4_2_2_3_1_1_2_1_2_1_3_3_1_1_2_2",
            "Yes.php}_REF>ex:Cat and ex:Canis are both subClassOf of ex:Mammal, and ex:Tiger is a subClassOf of ex:Cat. Since ex:Tigris is a",
            "Yes._REF>://://\tResponds",
            "Yes.",
            "Yes.1994-12-29T00:00:00.0",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes.",
            "Yes.2019\u5e7412\u670813\u65e5 06:53:17.0",
            "Yes.  # 2/5",
            "Yes._REF1_0_0",
            "Yes.2008-08-01 06:20:19.0+00:00 2023-02-02 08:28:00.0+00:00",
            "Yes.",
            "Yes.2006\u5e7410\u670810\u65e5 (\u4e8c) 19:23:59.0",
            "Yes.://",
            "Yes.",
            "Yes._REFLEXIVE (Yes|No) (Yes) "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "No.2009",
            "No.2009\u5e7412\u67088\u65e5 15:49:00 0.016",
            "Yes._REF>://Type the content of the example response above. You should only use the Yes or No response.://Answer: Yes.://Question: Can it be inferred that \"ex:Canis",
            "Yes.111",
            "No.note1: 1) The given RDF triples do not explicitly declare a relationship between the class ex:Tigris and the class Mammal. 2) ex:Tigris is a subclass of ex:Tiger, and",
            "Yes._REF>php) / >`1'`1",
            "No.{\\$)end",
            "Yes._REF>://The reason is that if ex:Canis is a subclass of ex:Mammal, and ex:Tiger is a subclass of ex:Canis, then ex:Tiger is also a subclass of ex",
            "No.2",
            "Yes.=\"notranslate\" class=\"nosep\">The inferred statement is \"ex:Tigris rdfs:subClassOf ex:Mammal\"."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.2009\u5e7410\u670821\u65e5 10:55:17",
            "Yes.1981-08-19 08:40:53.0",
            "Yes.NNormaly, this would require an OWL/RLD reasoner to process the RDF data and determine if it can infer that ex:SomeL rdfs:subClassOf ex:SomeA. However, since the",
            "Yes.198.01",
            "Yes.",
            "Yes. 1998.11.21 15:55:42 (UTC+0)  # [email\u00a0protected]  1998.11.21 15:55:42 (UTC+0)",
            "Yes._REF>://://.",
            "Yes.1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984",
            "Yes. or>ex:SomeL is a subClassOf ex:SomeM which is a subClassOf ex:SomeA, so ex:SomeL is also a subClassOf ex:SomeA. ",
            "Yes. 2004"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.2009",
            "Yes.={()ex:SomeL ex:SomeA}2019-11-19T12:10:24Z",
            "Yes.",
            "Yes.1999-11-19 1999-11-19 1999-11-19 1999-11-19 1999-11-19 1999-11-19 1999-11",
            "Yes. 2019-05-13T11:32:59Z>\tNo. \tYes. \tYes. \tNo. \tYes. \tYes. \tYes. \tYes.",
            "Yes._REF>\u10ea",
            "Yes._REF>://://Referring to the given RDF data, we can infer that \"ex:SomeL rdfs:subClassOf ex:SomeA\" is true since ex:SomeL is a sub",
            "Yes.",
            "Yes.\u10db\u10d7\u10d0\u10dc",
            "Yes._REF(1)://The RDF data specifies that ex:SomeL is a subclass of ex:SomeC, ex:SomeC is a subclass of ex:SomeM, and ex:SomeM is a subclass"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.1994-11-19 1997-01-09",
            "Yes.asmid>ex:SomeL rdfs:subClassOf ex:SomeA. is a transitive relationship.  ex:SomeL is a subclass of ex:SomeC, which is a subclass of ex:Some",
            "Yes.://",
            "Yes.",
            "Yes.={(ex:SomeK, ex:SomeA)} \u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a\u033a",
            "No.2019\u5e741\u670811\u65e5, 10:51:35",
            "No.2019\u5e744\u670826\u65e5 11:22:02.0",
            "No.",
            "Yes.1999/02/22-rdf-syntax-ns#> . @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . ex:SomeL rdfs:subClass",
            "Yes.2005\u5e7410\u670826\u65e5 06:00:00"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v1",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "Yes.://",
            "Yes.2019-05-17 03:32:02.0",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.://",
            "Yes.2.0>1999.0>1.0>1.0>1.0>1.0>1.0>1.0>1.0>1.0>1.0",
            "No.",
            "Yes._REF>://The data shows that ex:Tiger is a subClassOf ex:Cat and ex:Cat is a subClassOf ex:Mammal. Since ex:Tiger is also a subClassOf ex:",
            "No.://"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v2",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No._REF>_REF>://Referring to the data, it can be inferred that \"ex:Tigris is a subClassOf ex:Tiger\", and \"ex:Tiger is a subClassOf ex:",
            "No.",
            "No._REF>://The given RDF data only asserts that ex:Tigris is a sublcass of ex:Tiger, and that ex:Tiger is a sublcass of ex:Cat, that ex:Cat is",
            "No.",
            "Yes. ://://",
            "No._REF> The information given above only establishes that both ex:Tigris and ex:Canis are subClassOf ex:Mammal. However, it does not specify a relationship between ex:Tigris and ex:Canis",
            "No.\\\\\\\\n",
            "No.1994\u5e744\u67083\u65e5",
            "Yes.",
            "No.://://Tiger is not a subclass of Canis. Tigris is a subclass of Tiger and Cat, but not of Canis."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v3",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.1994-08-09 05:15:57",
            "Yes.2022\u5e7412\u670808\u65e5 19:52:00",
            "Yes.",
            "No.",
            "No.://",
            "Yes.1988>://Protein protein1:Protein protein2:Protein protein3:Protein protein4:Protein protein5:Protein protein6:Protein protein7:Protein protein8:",
            "No.://",
            "Yes.2>1. ex:Canis is a subclass of ex:Mammal, and ex:Tiger is a subclass of ex:Cat, which is also a subclass of ex:Mammal. 2. ex:Tiger",
            "Yes.NNNN://",
            "Yes.2019-09-27 23:30:00 +0000 +00:00"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v1",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "No.php /span>php /p>://respond:// respond://\u00a0?respond> Angelesr> :// \u00c3 0",
            "No.://",
            "No.://",
            "Yes._REF>://",
            "No.://",
            "No._REF> The RDF data indicates that ex:Cat is a subclass of ex:Mammal and ex:Tiger is a subclass of ex:Cat. There is no direct statement that ex:Cat is a subclass of ex:Tigr",
            "No.1999/02/22-rdf-syntax-ns#> . @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . ex:Cat rdfs:subClassOf",
            "No.ator",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v2",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.note: In the given RDF data, the relationship is that ex:Tigris is a subclass of ex:Tiger, and ex:Tiger is a subclass of ex:Cat. There is no direct relationship between ex:Cat and",
            "No.",
            "No.={(Tigris, Cat)} 1 1",
            "No.",
            "No.",
            "No. Kongsi",
            "No.://",
            "No._REF).Forms of reasoning: SubClassOf",
            "No.\u10db\u10ec\u10d4 No.://\u10db\u10ec\u10d4 No.://://\u10dbepend:// (http://www.w3corg/2000/01/rdf-schema",
            "No. Angeles.://"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v3",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.2004-08-30 10:59:07.0",
            "No.1994)2.5",
            "No.1998.6.2 19:56:53",
            "No._REF> The provided RDF statements say that ex:Canis is a subclass of ex:Mammal, ex:Tigris is a subclass of ex:Tiger, and ex:Cat is a subclass of ex:Mammal,",
            "No._REF",
            "No.://",
            "No.note: The given RDF data tells us that the class ex:Cat is a subclass of ex:Mammal and ex:Tiger is a subclass of ex:Cat. The class ex:Tigris is not mentioned in the data",
            "No.://",
            "Yes.1994)php3_1:://0.1",
            "No.php echo $nextpage;?2.0.0>php echo $post_title;?.Forms of reasoning in RDF.  The transitive relation can be derived from the given RDF statements,"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v1",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes.://",
            "Yes.1989) in the United States. This book, published by the American Geophysical Union, is a comprehensive reference work that covers various aspects of the Earth's lithosphere. It includes information on the Earth's structure, composition,",
            "Yes.",
            "Yes.",
            "Yes.",
            "No.",
            "Yes._REF>://://Referring to the data provided, the RDF triple <tigon>ex:Dog</tigon> ex:Dog rdfs:subClassOf ex:Mammal</tigon>",
            "Yes. 1988",
            "Yes. 2>://The reason is that the ex:Cat and ex:Canis are both subClassOf ex:Mammal, so all ex:Dog subClassOf ex:Mammal, as ex:Dog",
            "Yes. _REF_0"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v2",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No.\\\\\\\\begin{tabularx}{|c|p{5cm}|p{5cm}|} \\hline  (ex:Dog rdfs:subClassOf ex:Mammal)  \\\\hline  In",
            "Yes.2009\u5e744\u670816\u65e5 (\u6728\u66dc\u65e5) 07:51:20",
            "Yes. 2009\u5e741\u67081\u65e509:58:51.0",
            "Yes.2004",
            "Yes.1988",
            "Yes.195>://the>ex:Canis>195>is a synonym for>1>ex:Mammal>1>and so all members of the>1>ex:Tigris>1>class are",
            "Yes.ator",
            "Yes.",
            "Yes.\u10db",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v3",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes._REF>://Referring to the RDF data, we can infer that \"ex:Dog\" is a subclass of \"ex:Mammal\" because \"ex:Canis\" (which is a superclass of \"ex",
            "Yes.",
            "Yes.1999/02/22-rdf-syntax-ns#> .",
            "Yes.1988->1516",
            "Yes.1989",
            "Yes.1>://_REF>2>3>4>5>6>7>8>9>10>11>12>13>14>15>16>17>18>19>20",
            "Yes.",
            "Yes.orit",
            "Yes.2019-10-23T15:45:42+00:00\" class=\"wiki\">Yes. ",
            "Yes.://://Yes.://://://://:// the RDF data, the schema, and the RDF syntax used by the knowledge graph, the query and the inferred statement \"ex"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v1",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes.{\\x3e",
            "Yes.1994->11->18",
            "Yes.{\\$4",
            "Yes._REFLEX 2.0.1.2",
            "Yes.2009/12/08 08:42:47.",
            "Yes._REF>ex:Tiger and ex:Tigris are related by the RDF triple ex:Tiger rdfs:subClassOf ex:Tigris. This means that ex:Tiger is a subclass of ex:Tigris, which",
            "Yes.1972)php /tiger/ is a subcategory of the category /tigris/ . In the RDF data, it is indicated that /tiger/ is a subClassOf /tigris/",
            "Yes.1979",
            "No._REF2",
            "Yes._REF>_REF>://Reflexively, if ex:Tiger is a subclass of ex:Cat and ex:Cat is a subclass of ex:Mammal, then it follows that ex:Tiger is a"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v2",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No.://",
            "Yes.1994-10-1T07:07:19-08:00",
            "No.",
            "No.://",
            "Yes.://",
            "Yes.ysics.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.ow.",
            "Yes.",
            "No.",
            "Yes.noteq.3",
            "No.://://The superClassOf property is the inverse of subClassOf. So, it is not correct to infer that ex:Tiger is a superClassOf ex:Tigris. The data shows that ex:Tigris is"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v3",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No.",
            "Yes.",
            "No.://",
            "No._REF1_0",
            "No.asmultiline response: No. It is stated that ex:Tiger rdfs:subClassOf ex:Cat, but there is no indication that ex:Tigris is a subclass of ex:Tiger. Therefore, the statement",
            "Yes.1979",
            "Yes.://://The RDF triple ex:Tiger rdfs:subClassOf ex:Cat. and ex:Cat rdfs:subClassOf ex:Mammal. Therefore, we can infer that ex:Tiger is a",
            "Yes.2018\u5e747\u670813\u65e5 (\u91d1) 09:52:57",
            "No.2019-11-12T16:50:03Z",
            "No.2019-08-07T01:57:47Z"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v1",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:subClassOf ex:Tigris.1951;-> ",
            "ex:Tiger rdfs:subClassOf ex:Tigris.\\\\\\\\n",
            "ex:Tiger rdfs:subClassOf ex:Tigris.1989",
            "ex:Tiger rdfs:subClassOf ex:Tigris.1988.2>2014-09-27>2014-09-27T14:39:02.000+02:00",
            "ex:Tiger rdfs:superClassOf ex:Tigris.NNN1989.2.1.1",
            "ex:Canis rdfs:subClassOf ex:Mammal.2023-10-20",
            "ex:Tiger rdfs:subClassOf ex:Tigris. ",
            "ex:Tiger rdfs:subClassOf ex:Tigris.1986",
            "ex:Tiger rdfs:subClassOf ex:Tigris.198",
            "ex:Tiger rdfs:subClassOf ex:Tigris.://"
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 1
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v2",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:subClassOf ex:Cat.1987>1.0",
            "ex:Tigris rdfs:superClassOf ex:Tiger.{\\itex:This triple contains an error as ex:Tigris is a subClassOf ex:Tiger, not a superClassOf ex:Tiger.}",
            "ex:Canis rdfs:subClassOf ex:Mammal.198590.5.4.3.2.1.1.1.1.1.1.1.1.1.1.1.",
            "ex:Tiger rdfs:subClassOf ex:Mammal.",
            "ex:Tigris rdfs:subClassOf ex:Mammal.{\\itex:Canis (RDFS:subClassOf ex:Mammal) is incorrect because the appropriate superClass for ex:Canis should be ex",
            "ex:Tiger rdfs:subClassOf ex:Cat._REF>ex:Cat rdfs:subClassOf ex:Mammal.={ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:subClassOf ex:Cat.2009-11-04 23:22:23.0",
            "ex:Cat rdfs:subClassOf ex:Mammal.2009-03-17 10:50:52.0",
            "ex:Tiger rdfs:subClassOf ex:Canis._REF>1984/03/28",
            "ex:Tigris rdfs:superClassOf ex:Tigris.1996-04-23 11:52:59 0"
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v3",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Mammal.ator",
            "ex:Tiger rdfs:subClassOf ex:Tigris.",
            "ex:Tiger rdfs:subClassOf ex:Cat.\u10db\u10d8\u10db\u10d0\u10e1 \u10db\u10dd\u10db\u10e1 \u10e8\u10d4\u10dc\u10d0\u10ee\u10d0\u10e0\u10d3",
            "ex:Tiger rdfs:superClassOf ex:Tigris.2004",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Mammal.1911/12/05 10:45:50",
            "ex:Tiger rdfs:subClassOf ex:Cat.1989",
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.\u10e6"
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 2
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumB ex:artist ex:ArtistZ.",
            "ex:AlbumX ex:genre \"Rock\" .",
            "ex:AlbumB ex:artist ex:ArtistZ",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumX ex:artist ex:ArtistA.",
            "ex:AlbumB ex:artist ex:ArtistY.OOI",
            "ex:AlbumF ex:rating 4.9 .NN",
            "ex:AlbumX ex:artist ex:ArtistY.ooo",
            "ex:AlbumX ex:genre \"Rock\".",
            "ex:AlbumB ex:rating \"5.0\" ."
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 2
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumX ex:rating \"4.5\" .",
            "ex:AlbumM ex:genre \"Rock\".",
            "ex:AlbumM ex:genre \"Rock\" .",
            "ex:AlbumF ex:[property] ex:rating \"4.9\" .",
            "ex:ArtistA ex:birthYear \"1960\" .",
            "ex:AlbumX ex:genre ex:Rock .OO",
            "ex:AlbumM ex:artist ex:ArtistO .",
            "ex:AlbumM ex:genre ex:Rock.NNP",
            "ex:ArtistO ex:birthYear \"1971\".OO",
            "ex:AlbumF ex:artist ex:AlbumX."
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "rdfs: .NN",
            "rdfs:",
            "rdfs: .AAAAAAAAAAA",
            "rdfs:",
            "dc",
            "ex:NNamespace .  ",
            "rdfs:",
            "dc: .",
            "rdfs:",
            "[ex:MusicAlbum]NN"
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumF ex:[property] \"Sun Newtown\".   ## This is incorrect",
            "ex:AlbumF ex:artist ex:ArtistA . ",
            "ex:AlbumF ex:genre \"Rock\".",
            "ex:AlbumF ex:genre \"Rock\".",
            "ex:ArtistA ex:birthYear \"1960\".1982",
            "ex:ArtistA ex:birthYear \"1960\".<br>",
            "ex:AlbumF ex:rating 4.9 .1958",
            "ex:AlbumF ex:genre \"Rock\".",
            "ex:AlbumF ex:artist ex:ArtistA .",
            "ex:AlbumF ex:genre \"Rock\"."
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 1
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumM ex:genre \"Rock\".1980.",
            "ex:AlbumM ex:genre \"Rock\" .",
            "ex:AlbumM ex:genre \"Rock\". NN",
            "ex:AlbumM ex:artist ex:ArtistO.NNNN",
            "ex:AlbumM ex:genre \"Rock\" .NN",
            "ex:AlbumM ex:genre \"Rock\".usher.",
            "ex:AlbumM ex:genre \"Rock\".",
            "ex:AlbumM ex:genre \"Rock\" .NNNNNN",
            "ex:AlbumM ex:genre \"Rock\" . ",
            "ex:AlbumM ex:releaseYear \"1980\" ."
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "dc .NNP .2004-03-19T10:56:32-08:00 ._REF xmlns.://Nuclear.://NNP .://.://",
            "rdfs: ._REF>1.0",
            "ex: ._REF3 .",
            "rdfs:",
            "dc: ._REF>{\\it{#}php the missing namespace is:dc: .}:// the missing namespace is:dc: .</p>:// the missing namespace is:dc:",
            "dc ._REF .://xmlns . ={() 1982 2 22 rdf-syntax-ns . 1985 2000 1 rdf-schema . 1.1 .:// . 1.",
            "dc .asmilms.com.usher.com.://",
            "dc: ._REF_1_1>://",
            "ex: .=\"add\" ._REF>ex",
            "dcAAAAAAAAAA .={() . [namespace] rdfs: . [namespace] rdf: . [namespace] ex: . [namespace]://.://) "
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums size 1",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.2008",
            "ex:ArtistZ a ex:Artist.aaaaaaa",
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:ArtistZ a ex:Artist.AAAAAAAAAAA",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN",
            "ex:ArtistZ a ex:Artist. NN",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums size 2",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.=\"ex:ArtistZ\" > AAAAA",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.NN",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.NN",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.NNNex:AlbumB a ex:MusicAlbum;\t dc:title \"Beans\" ;\tex:artist ex:ArtistZ;\tex:releaseYear \"1991\" ;\tex:genre",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums size 4",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistZ a ex:Artist.NN",
            "ex:ArtistY a ex:Artist.NN",
            "ex:Dane a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.AAAAAAAAA",
            "ex:ArtistA a ex:Artist.",
            "ex:Dane a ex:Artist.NNNN"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums size 8",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistA a ex:Artist.NNNNNNNN",
            "ex:ArtistZ a ex:Artist.OO",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.OOx",
            "ex:ArtistZ a ex:Artist.NN",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 4
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums size 16",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistB a ex:Artist.aaaa",
            "ex:ArtistA a ex:Artist .AAAAAAAAAAANNNNDN",
            "ex:ArtistA a ex:Artist.NN",
            "ex:ArtistA a ex:Artist.NNNN",
            "ex:ArtistY a ex:Artist.OO",
            "ex:ArtistZ a ex:Artist.oooo",
            "ex:ArtistA a ex:Artist. OOx",
            "ex:ArtistA a ex:Artist.NN"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "theseus-research/llama-3.1-8b-prime-kg-exp-1-gguf/llama-3-1-8B-graph-128k.Q4_K_M.gguf",
        "prompt_name": "Albums size 32",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistA a ex:Artist.OO",
            "ex:ArtistA a ex:Artist.AAAAAAAAAAAOOOOOOOOOOOOOOOOOOOOO",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.NN",
            "ex:ArtistA a ex:Artist.NNex:ArtistA a ex:Artist.NNex:ArtistA a ex:Artist.AAAAAAAAex:ArtistA a ex:Artist.OOex:",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistB a ex:Artist.AAAAAAAAAA",
            "ex:ArtistA a ex:Artist.oooo"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "The artist with the highest album rating is ex:ArtistZ, with an album rating of 5.0. The RDF triple containing the artist concept is: ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The highest rating is 5.0 which belongs to AlbumB that belongs to ArtistZ.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "The artist with the highest album rating is ex:ArtistZ, with a rating of \"5.0\". The RDF triple is:",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "The artist with the highest album rating is the one for the album \"Beans\" which has a rating of \"5.0\".  Therefore, the artist with the highest album rating is \"Wasa Dog\". To find this artist in the RDF data",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 4
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistY a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.  This is the response because ex:AlbumF has the highest ex:rating at 4.9 out of the albums provided.  ex:AlbumF's artist is ex:ArtistA. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistY a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Real Albumn v1",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Real Albumn v2",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Real Albumn v3",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.  This is the RDF triple that describes the artist born in 1960.  This triple contains the artist concept as requested.  The concept is identified by the URI ex:ArtistA, which is",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "The artist who was born in the year 1960 is ex:ArtistA. Here is the response in the required format:",
            "The correct answer is ex:ArtistA a ex:Artist. The artist concept ex:ArtistA was born in 1960. Therefore, the correct answer is ex:ArtistA a ex:Artist.  The final answer is: ex:"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "The artist born in the year 1960 was Dane.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.  # Correct answer",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.  The best answer is: ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.  The final answer is ex:ArtistA.  The best answer is ex:ArtistA.  ex:ArtistA a ex:Artist.  ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "The ex:Artist that has ex:birthYear \"1960\" is ex:ArtistA. This can be represented with a single RDF triple as follows:",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.  The response includes the artist concept that has a birth year of 1960. The response structure is an RDF triple containing the artist concept.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.  This response provides the appropriate RDF triple for the ex:Artist with the ex:birthYear \"1960\".  The triple specifies ex:ArtistA as the artist with the birth year of 196",
            "ex:ArtistA a ex:Artist.",
            "The solution to the task is:",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "The artist with the nationality \"Australia\" is:",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.  This response is correct because ex:ArtistO has the nationality \"Australia\".  ex:ArtistO is the subject of the RDF triple, and ex:Artist is the predicate.  The response should",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "The artist concept with the nationality \"Australia\" is Physik. The RDF triple that describes this artist concept is as follows:",
            "The artist with the nationality \"Australia\" is Physik.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ## Step 1: Identify the relevant information in the given RDF data",
            "The following is the RDF triple representing the artist with the nationality \"Australia\":",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.  This is the ex:Artist with nationality \"Australia\".  The triple indicates the class membership of this concept. The solution can be found by using the SPARQL query to find the ex:Artist",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.  # ex:ArtistO has the ex:nationality \"Australia\".",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.  This is because the ex:nationality of ex:ArtistO is \"Australia.\" ",
            "The RDF triple that represents the ex:Artist with the ex:nationality of \"Australia\" is:",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ## Step 1: Identify the condition that needs to be satisfied.",
            "ex:ArtistO a ex:Artist.",
            "The correct response is the following RDF triple:",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.  This RDF triple states that ex:ArtistO is an instance of ex:Artist. The ex:ArtistO concept has the ex:nationality \"Australia\".  This matches the query requirements. ",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.  The final answer is ex:AlbumB.  We will look at the given RDF data and identify the album that has the genre \"Pop\". Looking at each album, we see that ex:",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. \\\\",
            "ex:AlbumB a ex:MusicAlbum.  This triple states that ex:AlbumB is an instance of the class ex:MusicAlbum. The property rdfs:label is used to label the resource ex:AlbumB with the string \"",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "The album with the genre \"Pop\" is ex:AlbumB. The correct response is:"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.  This response identifies the album \"Beans\" as a music album with the genre \"Pop\".  This is an RDF triple that adheres to the structure specified in the task, where the subject is",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.  This triple indicates that ex:AlbumB has the genre \"Pop\".  Note that ex:AlbumB is the only album in the data with the genre \"Pop\".  The triple would be",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.  The final answer is ex:AlbumB.  ### Step 1: Identify the RDF triple for the ex:MusicAlbum with the ex:genre \"Pop\".",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. \\\\",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "The album that has the ex:genre \"Pop\" is ex:AlbumB. The answer is:",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "The RDF triple is:",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.  To answer the question, the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" has to be identified. To do this, we look for an ex:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.  This response is correct because ArtistZ is the only artist associated with an album of genre \"Pop\". The response structure follows the expected structure by providing a single RDF triple containing the artist concept. The triple",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. This triple indicates that the artist concept, ex:ArtistZ, is an instance of the ex:Artist class. This is the correct response since ex:ArtistZ has a corresponding property value of \"Pop",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "The artist that made an album with a genre \"Pop\" is ex:ArtistZ.",
            "The answer is Wasa Dog. To see why this is true, look at the first piece of RDF data:",
            "Using SPARQL to query the RDF data, we can write the following query to find the artist name that corresponds to the album genre \"Pop\":",
            "## Step 1: Identify the relevant data for the task",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "ex:ArtistZ",
            "The name of the artist who made an album that was genre \"Pop\" is Wasa Dog. The album title is \"Beans.\" The artist's name is listed in the RDF data under the triple:",
            "ex:ArtistZ ### Step 1: The task is to find the name of the artist who made an album that is classified as \"Pop\".",
            "The name of the Artist who made an album that was genre \"Pop\" is Wasa Dog. ",
            "Wasa Dog",
            "Based on the provided RDF data, the artist who made an album that was genre \"Pop\" is ex:ArtistZ.",
            "The artist's name is Wasa Dog.",
            "ex:ArtistZ",
            "To find the artist of the album with genre \"Pop\", first look for an album with the genre \"Pop\" and then find its artist.",
            "The name of the artist who made an album that was genre \"Pop\" is Wasa Dog. The artist who made the album \"Beans\" is Wasa Dog, and \"Beans\" has a genre of \"Pop.\" Therefore, the name of"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The name of the Artist who made an album that was genre \"Pop\" is Wasa Dog.",
            "The name of the Artist who made an album that was genre \"Pop\" is: Wasa Dog. This can be determined by looking at the RDF data and finding the artist associated with the album \"Beans\", which has a genre of \"Pop.\"",
            "Seamus Finn",
            "The artist's name is Wasa Dog.  The artist's name is Wasa Dog.  Wasa Dog made an album that was genre \"Pop\".  The name of the artist who made an album that was genre \"Pop\" is Was",
            "Wasa Dog.  The reason is that the artist who created an album that was a pop was ArtistZ who was also known as Wasa Dog. This was determined by looking at the statement:  ex:AlbumB a ex:MusicAlbum",
            "To find the name of the Artist who made an album that was genre \"Pop\", we need to look for the Artist who is the author of an album whose genre is \"Pop\". In the given RDF data, we can find this by looking at",
            "Wasa Dog",
            "The artist's name is Wasa Dog.",
            "The name of the Artist who made an album that was genre \"Pop\" is Wasa Dog. The reason is that the RDF data specifies the following triples:",
            "The artist's name is Wasa Dog. This is because the \"album\" Beans had the genre of \"Pop\" and Wasa Dog was the artist who made Beans. This information is stored in the following two triples:"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "The artist that made an ex:MusicAlbum with the ex:genre \"Pop\" is ex:ArtistZ. The dc:name of this artist is \"Wasa Dog\". ",
            "To find the dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\", we can follow the steps below:",
            "Using SPARQL, we can query the data for the artist's dc:name who made an ex:MusicAlbum with the ex:genre \"Pop\". The query is as follows:",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is: Wasa Dog. To find this, first find the ex:MusicAlbum with the ex:genre \"Pop\". Then",
            "Since ex:AlbumB has the genre \"Pop\" and its artist is ex:ArtistZ, the dc:name of ex:ArtistZ is the answer.",
            "To find the name of the artist who made a music album with the genre \"Pop\", we need to identify which music album has \"Pop\" as its genre and then find the name of the artist who created that album. Looking at the provided RDF",
            "Given the RDF data, the dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog.\" Wasa Dog is the ex:artist of the ex:AlbumB that",
            "To find the artist who made an ex:MusicAlbum with the genre \"Pop,\" we need to look for the album with the ex:genre \"Pop\" and then find the dc:name of the artist who made that album. The album with the",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is Wasa Dog."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "## Step 1: Identify the RDF data provided",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "```sparql",
            "## Step 1: Identify the condition to be met in the query",
            "To find the artist's name who made an ex:MusicAlbum that has the ex:genre \"Pop\", we must first identify the ex:MusicAlbum that has the ex:genre \"Pop\". Since we know there is only one such ex:",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\". The ex:MusicAlbum is \"Beans\" and the artist is ex:ArtistZ. This can",
            "## Step 1: Identify the conditions for finding the dc:name of the ex:Artist",
            "According to the RDF data, the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is ex:ArtistZ.",
            "The ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is ex:ArtistZ, who has dc:name \"Wasa Dog\". Wasa Dog is the name of the ex:Artist who made an ex",
            "The artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is ex:ArtistZ. Therefore, the dc:name of that ex:Artist is \"Wasa Dog\". "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is ex:ArtistZ. The dc:name of ex:ArtistZ is Wasa Dog. Wasa Dog is the correct response.",
            "To find the dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\", we can look for the ex:Album with ex:genre \"Pop\" and then look for the ex:Artist associated",
            "To find the dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\", you must look for the ex:MusicAlbum that has the ex:genre \"Pop\" and then check its ex:",
            "The ex:dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is Wasa Dog.",
            "The artist's name is \"Wasa Dog\". This is because the triple ex:AlbumB ex:artist ex:ArtistZ and ex:AlbumB ex:genre \"Pop\" both exist in the given data, making Wasa Dog the artist",
            "## Step 1: Identify the task",
            "The artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is ex:ArtistZ .  Therefore, the dc:name of that artist is Wasa Dog . The final answer is Wasa Dog.  ### Step ",
            "## Step 1: Identify the relevant data",
            "ex:ArtistZ",
            "Seamus Finn"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "The RDF triple with the creature with the highest rating is ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.  This response can be understood as follows: The concept of the creature with the highest rating is identified by the URI ex:CreatureU, which has the type ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "The ex:MythicalCreature with the highest ex:rating is ex:CreatureU.",
            "The ex:MythicalCreature with the highest ex:rating is ex:CreatureU.  The triple that indicates this is:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "The creature with the highest magic level is ex:CreatureU. Thus, the correct answer is:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.  # correct response, as CreatureU has a magic level of \"Very High\".",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.  ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. \\\\"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "The creature living in the habitat with the highest temperature is ex:CreatureU. Therefore, the response is:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.  The final answer is ex:CreatureU.  I hope it is correct.  Let me know if you have any feedback.  I'll be happy to help you with any other",
            "The creature concept that lives in the habitat with the highest temperature is ex:CreatureX. The relevant triple is:",
            "The creature that lives in the habitat with the highest temperature is the Glimmerphoenix. The highest temperature is found in the Sunfire Desert. To find the answer, we can use the SPARQL query below:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.  The best answer is ex:CreatureU a ex:MythicalCreature.  The final answer is ex:CreatureU a ex:MythicalCreature.  This response is",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.  This response is based on the understanding that the ex:Habitat with the highest ex:temperature is ex:HabitatA, which has an ex:temperature of \"Hot\". Since",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. \\\\",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.  This response states that the creature concept is ex:CreatureU. This is the only creature whose habitat has the highest temperature. Therefore, we can conclude that ex:CreatureU lives in",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. This is the case because ex:HabitatL has the highest temperature (\"Cold\") of all the habitats, so the creature that lives in ex:HabitatL (ex:CreatureX",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.",
            "The answer is ex:CreatureX. The explanation is as follows:",
            "The ex:MythicalCreature that lives in the ex:Habitat that has the highest ex:temperature is ex:CreatureX.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 4
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.  (Note: ex:HabitatL is the RDF term that refers to the concept \"Cloudy Peaks\")  The final answer is ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "The correct answer is ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "The final answer is: ex:HabitatL a ex:Habitat.  The final answer is ex:HabitatL a ex:Habitat.  This response follows the instruction by providing a single RDF triple containing the habitat concept that has",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.  The triple represents the habitat concept, ex:HabitatL, and it is a habitat (ex:Habitat) as stated in the RDF data above. The name of the habitat is",
            "The RDF triple that represents the habitat with the name \"Cloudy Peaks\" is: ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "The following RDF triple is the correct response:",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v1",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "The response to this request is the following:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "The RDF triple that identifies the habitat with the name \"Cloudy Peaks\" is:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ## Step 1: The task requires us to find the habitat with the name \"Cloudy Peaks\" from the given RDF data."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v2",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "The solution is ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v3",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "The habitat with the name \"Cloudy Peaks\" is ex:HabitatL. The RDF triple that contains this concept is ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v4",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v5",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v6",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "The RDF triple that represents the habitat with the name \"Cloudy Peaks\" is:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v7",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "The response should be: ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v8",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.  This is because the statements ex:Tiger rdfs:subClassOf ex:Cat and ex:Cat rdfs:subClassOf ex:Mammal imply that ex:Tiger rdfs:subClassOf ex:Mammal.",
            "No.",
            "Yes. ",
            "Yes.  The statement that \"ex:Tigris rdfs:subClassOf ex:Tiger\" can be inferred by a reasoner is a fundamental concept in RDFS. This concept is known as \"transitive reasoning.\"  The statement \"",
            "No. ",
            "Yes.  The property \"rdfs:subClassOf\" is transitive.  Therefore, if ex:Tiger is a subclass of ex:Cat, and ex:Cat is a subclass of ex:Mammal, then ex:Tiger is",
            "Yes. The reasoning is as follows:",
            "Yes. ",
            "Yes. ### Step-by-step reasoning process: The statement \"ex:Tigris rdfs:subClassOf ex:Tiger\" is asserted in the RDF data. The given instruction does not ask to infer this statement. The instruction asks to infer \"",
            "No.  (This response is correct because rdfs:subClassOf is a property, and we're told that \"ex:Tigris rdfs:subClassOf ex:Tiger\" is a statement. The statement \"ex:Tigris"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes. ",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.  This can be inferred due to the transitive property of the rdfs:subClassOf relation.",
            "Yes. ",
            "No.  The correct answer is No because it can be inferred that ex:Tiger rdfs:subClassOf ex:Cat.  But there is no way to infer that ex:Tigris rdfs:subClassOf ex:Tiger.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "No.  A more accurate response might be \"Cannot infer\". However, the provided response choices are Yes or No, so the response will be No. The task of subClassOf is to define a relationship between two classes. It is not trans",
            "No.  This is an example of the \"Least Common Subsumer\" problem. The ex:Tiger class is not a sub class of ex:Mammal (it is a sub class of ex:Cat), so it cannot be inferred that ex",
            "No. ",
            "Yes. ",
            "Yes.",
            "No. ",
            "No. ",
            "No. (Not all of ex:Tiger's superclasses are ex:Mammal, so it does not inherit the relationship between ex:Canis and ex:Mammal.) ",
            "Yes.  This is an example of the \"Subproperty\" rule, which states that if we know that A is a subproperty of B, and we also know that B is a subproperty of C, then we can infer that A is",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.",
            "Yes. ",
            "Yes.",
            "No.  This is an example of a subproperty chain (subClassOf), where ex:SomeL is a subClassOf ex:SomeC and ex:SomeC is a subClassOf ex:SomeM and ex:SomeM",
            "Yes.",
            "Yes.",
            "Yes. ",
            "No. ",
            "Yes.  This inference is possible because there is a path from ex:SomeL to ex:SomeA via ex:SomeC, and there is another path from ex:SomeK to ex:SomeA via ex:SomeK, and",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes. ",
            "Yes.",
            "Yes.  The subClassOf hierarchy is: SomeA, SomeM, SomeC, SomeL.  Therefore, it can be inferred that SomeL is a subclass of SomeC.  The inference can be made because all of SomeL",
            "Yes. ",
            "Yes.",
            "No. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "No. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.  This is an example of a transitive property.  For any property P, we say that P is transitive if (x P y and y P z) implies x P z.  The rdfs:subClassOf relation",
            "Yes.  This can be inferred because there is no intermediate rdfs:subClassOf relation between ex:SomeC and ex:SomeL.  If there were, then the inference would not hold.  For example, if there were another",
            "No.  This is an example of the \"subClassOf\" property and it shows that some individuals are instances of particular classes. The subClassOf property is transitive, so from \"ex:SomeA rdf:type ex:SomeM\"",
            "Yes.",
            "Yes. ",
            "No. ",
            "Yes.",
            "No. ",
            "Yes. ",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.",
            "Yes. ",
            "No.",
            "No.  (Note that this problem is about the inferential capabilities of RDF and does not require the actual use of any particular software. It is purely theoretical.)  The solution strategy is to read the RDF data and to use the inference rules to",
            "No. ",
            "Yes.  The triple \"ex:Tigris rdfs:subClassOf ex:Cat\" can be inferred by transitivity from the given triples \"ex:Tiger rdfs:subClassOf ex:Cat\" and \"ex:Tigris",
            "No. ",
            "Yes.",
            "No. ",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes. ",
            "Yes. The transitivity of rdfs:subClassOf can be used to infer this statement from the given data. ",
            "No.",
            "No.  The rdfs:subClassOf property is transitive. If it can be inferred that ex:Tigris is a subclass of ex:Tiger and ex:Tiger is a subclass of ex:Cat, then it can be inferred that",
            "No. ",
            "No.  .  In order to be able to infer that \"ex:Tigris rdfs:subClassOf ex:Cat,\" the statement \"ex:Tiger rdfs:subClassOf ex:Cat\" should also be inferred, and",
            "No.  The original RDF data states that ex:Tigris is a subclass of ex:Tiger, which in turn is a subclass of ex:Cat, but it does not directly state that ex:Tigris is a subclass of ex:Cat",
            "No. ",
            "Yes.",
            "Yes. The transitive property of subclass relations allows the inference that \"ex:Tigris rdfs:subClassOf ex:Cat.\" The property of being a subclass is transitive in that if A is a subclass of B and B is a"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "Yes.",
            "Yes. ",
            "No.",
            "Yes.",
            "No. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No.  This is because in an RDFS ontology, the semantics of the rdfs:subClassOf predicate are not transitive.  We cannot conclude ex:SomeL is a subClassOf ex:SomeM just because ex:Some",
            "No.",
            "No",
            "Yes.  The subClassOf relationships are transitive.  ex:SomeC is a subClassOf ex:SomeM, and ex:SomeL is a subClassOf ex:SomeC.  So it can be inferred that ex",
            "Yes. ",
            "Yes.",
            "No.",
            "No.",
            "No. ",
            "No. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No. ",
            "Yes. ",
            "Yes. The information could be inferred from the data, as ex:SomeK rdfs:subClassOf ex:SomeA, and ex:SomeL rdfs:subClassOf ex:SomeC, and ex:SomeC rdfs",
            "Yes.  This is because the RDFS semantics state that a subclass is also a sub-subclass.  Therefore, we can infer that ex:SomeL is a subclass of ex:SomeA, and then it can also be inferred that ex",
            "Yes. ",
            "Yes.",
            "No. ",
            "Yes. ",
            "No. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No",
            "No. ",
            "Yes.",
            "Yes.  This follows the transitive property of RDF.  If A is a subclass of B and B is a subclass of C, then A is a subclass of C.  ex:SomeA is a subclass of ex:SomeM.",
            "No.",
            "No. ",
            "Yes.  This is an example of the subproperty principle. The subproperty principle states that if P is a subproperty of Q, and Q is a subproperty of R, then P is a subproperty of R. This principle is stated",
            "No. ",
            "Yes. Step-by-step reasoning process: The answer is yes. We can infer this because ex:SomeL is a subclass of ex:SomeC and ex:SomeC is a subclass of ex:SomeM. Therefore, we can infer that",
            "No.  This is an example of a \"cycle\" in the class hierarchy. If there is a cycle, we cannot infer the subClassOf relationship between the two classes in the cycle. In this example, ex:SomeL is a subclass"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes.",
            "Yes.  This is because ex:Tiger is a subclass of ex:Mammal, and ex:Tigris is a subclass of ex:Tiger.  In RDF, if A is a subclass of B, and B is a subclass of C",
            "No. ",
            "No.",
            "No. ",
            "Yes.",
            "Yes.  This is an example of transitive property. A class that is a subclass of another class, which is also a subclass of a third class, is a subclass of that third class.  Therefore, ex:Tigris, which is",
            "No.",
            "Yes. ",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes.",
            "No.  This is an example of the problem of the subproperty chain axiom. The inference engine cannot determine if Tigris is a subclass of Mammal. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "No.  This is a subsumption problem and can be solved by constructing an RDF graph. For each predicate in the data, create an arrow, and draw a directed arc from the subject to the object. The subsumption relation is trans",
            "Yes. ",
            "No.",
            "No.  The RDF data shows that \"ex:Tigris\" is a subclass of \"ex:Tiger,\" and \"ex:Tiger\" is a subclass of \"ex:Cat,\" and \"ex:Cat\" is a subclass of \"ex"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "No. ",
            "Yes.",
            "No.",
            "No.  It cannot be inferred that \"ex:Tigris rdfs:subClassOf ex:Mammal\", because ex:Tigris is not a direct subclass of ex:Mammal. ex:Tiger is a subclass of ex:Cat",
            "Yes.",
            "No.  This is because ex:Tigris rdfs:subClassOf ex:Tiger, ex:Tiger rdfs:subClassOf ex:Cat, and ex:Cat rdfs:subClassOf ex:Mammal, but ex",
            "Yes.  This can be inferred using transitive property in the RDF.",
            "Yes. ",
            "Yes.  This can be inferred as follows: ex:Tigris rdfs:subClassOf ex:Tiger and ex:Tiger rdfs:subClassOf ex:Cat and ex:Cat rdfs:subClassOf ex:Mammal",
            "No.  This is an example of an inconsistent dataset.  We can infer from the data that ex:Tigris is a subClass of ex:Tiger, which in turn is a subClass of ex:Cat, which is a subClass"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes. ",
            "No.  The answer is no because ex:SomeL is not directly related to ex:SomeA.  ex:SomeL is related to ex:SomeC, ex:SomeC is related to ex:SomeM, and ex:",
            "Yes. ",
            "Yes.",
            "Yes.",
            "No. ",
            "No.  This is an example of a problem where the RDFS reasoner does not infer the relation between two classes because it is too long (i.e., the path is longer than one step). The reasoner only looks one step ahead in",
            "Yes. ",
            "No. I can infer the following:",
            "Yes. This is because ex:SomeC and ex:SomeM both subclass of ex:SomeA; ex:SomeC is a subclass of ex:SomeM; and ex:SomeL is a subclass of ex:SomeC. Therefore"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.  A reasoner, such as Pellet, can deduce this, but this can also be done manually by hand.",
            "No. ",
            "No.",
            "Yes.  To infer that ex:SomeL rdfs:subClassOf ex:SomeA, you must follow the rdfs:subClassOf path. The path can be described as follows:",
            "No. ",
            "Yes. ",
            "Yes. ",
            "No.",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes.  ",
            "No.",
            "No. ",
            "Yes. ",
            "Yes.  The subClassOf relationship between ex:SomeL and ex:SomeC, and the subClassOf relationship between ex:SomeC and ex:SomeM, and the subClassOf relationship between ex:SomeM and ex:",
            "Yes.",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v1",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No.  The data given states that ex:Tigris is a subclass of ex:Tiger, but it does not state that ex:Tiger is a subclass of ex:Canis.  ex:Tiger is a subclass of ex:Cat,",
            "No.",
            "No.",
            "No.",
            "No.",
            "No. ",
            "Yes.",
            "No. The fact that ex:Tigris is a subclass of ex:Tiger and that ex:Tiger is a subclass of ex:Cat does not imply that ex:Tiger is a subclass of ex:Canis. It is only known that ex",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v2",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No. The given data does not indicate any relationship between ex:Tigris and ex:Canis, so it cannot be inferred that they are related in this way. However, it can be inferred that ex:Tigris and ex:Canis",
            "No.",
            "No.  I hope it is correct.",
            "No.",
            "Yes. ",
            "No. ",
            "No.",
            "No.  This is an example of a task that requires inductive reasoning.  The question requires the test-taker to infer a conclusion from the information given.  The conclusion can only be reached by understanding the meaning of the terms used and making",
            "Yes.",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v3",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No. ",
            "No.  This can be explained by the fact that \"Tigris\" is a subclass of \"Tiger,\" which in turn is a subclass of \"Cat,\" which is a subclass of \"Mammal,\" but \"Tigris\"",
            "No.",
            "No.",
            "No. ",
            "No.",
            "No.  ### Step 1: Understanding the given RDF data",
            "No.  This is because ex:Tiger is a subClass of ex:Cat, which in turn is a subClass of ex:Mammal, and ex:Canis is also a subClass of ex:Mammal, but there is",
            "No. ",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v1",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "No. ",
            "No. ",
            "No.",
            "Yes.",
            "No. ",
            "No.",
            "No.  Explanation: The given data does not state that \"ex:Cat\" is a subclass of \"ex:Tigris\". Only that \"ex:Tiger\" is a subclass of \"ex:Cat\" and \"ex:Tigris\"",
            "No. The reason that this can not be inferred is that \"ex:Tigris\" is not a subclass of \"ex:Cat\" or its parent class \"ex:Mammal\". Therefore, it is not a subclass of \"ex:Cat",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v2",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No. ",
            "No.",
            "No.  The statements provided establish a chain of subclass relationships that ex:Tigris is a subclass of ex:Cat, ex:Cat is a subclass of ex:Mammal, and ex:Canis is also a subclass of ex:Mamm",
            "No.",
            "No.",
            "No. ",
            "No.  A subClassOf relationship is symmetric, but it is also transitive. This means that if A is a subclass of B and B is a subclass of C then A is a subclass of C. But if A is a subclass of",
            "No. ",
            "No.  This is because the transitive property is not applied when the order of the statements is not preserved. In this case, ex:Cat rdfs:subClassOf ex:Mammal  is a statement that is not preserved. Therefore",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v3",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.  The reason for this is that it can be inferred that \"ex:Cat rdfs:subClassOf ex:Mammal\" and \"ex:Mammal rdfs:subClassOf ex:Canis\" and \"ex:",
            "Yes.  The reasoning is as follows:",
            "No.  I am able to determine this because ex:Cat rdfs:subClassOf ex:Mammal and ex:Tiger rdfs:subClassOf ex:Cat; however, I am not able to find a path from ex:T",
            "No. ",
            "Yes.  This is a transitive inference, meaning that if a is a sublcass of b, and b is a sublcass of c, then a is a sublcass of c. So, ex:Cat is a sub",
            "No.  This is because \"ex:Cat rdfs:subClassOf ex:Tigris\" is not entailed by the given data.  The only valid path from ex:Cat to ex:Tigris is through ex:Mammal",
            "No.",
            "No.  This is because the only statements that can be inferred are:",
            "Yes.",
            "No.  The class ex:Cat is not a subclass of ex:Tigris. While ex:Tiger is a subclass of ex:Cat, it is not a subclass of ex:Tigris; ex:Tigris is a subclass of ex"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v1",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No.  A direct inference would be that ex:Dog is a subclass of ex:Canis.  Then a transitive inference would be that ex:Dog is a subclass of ex:Mammal.  But we cannot infer anything about ex",
            "Yes.",
            "No.",
            "Yes",
            "Yes",
            "Yes.",
            "Yes.",
            "No. (Note: The example response \"Yes\" was incorrect.)  The original data shows ex:Cat and ex:Canis as being related to ex:Mammal, but ex:Canis is actually a synonym for dog, so it",
            "Yes.",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v2",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes. The task was to find if there was an inference to the relationship between ex:Dog and ex:Mammal. The only information we are given about ex:Dog is that it is not in the same namespace as any of the other predicates",
            "No. ",
            "No. ",
            "No. ",
            "Yes.",
            "No.  A query can be used to retrieve the data to test the inference, using a SPARQL query similar to the one below. The results of the query should be the same as the original data to confirm the inference, or different to",
            "Yes. ",
            "Yes",
            "No. ",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v3",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No.  There is no evidence of a subclass relationship between Dog and Mammal.  The given data establishes that a tiger is a tiger, a cat is a mammal, and a tigris is a tiger.  It does not",
            "No.",
            "No. ",
            "No.  The inference rules state that a class is a subclass of another if it has a property rdfs:subClassOf that references the other class. Therefore, ex:Dog cannot be inferred to be a subclass of ex:Mammal.",
            "No. ",
            "No. ",
            "No.",
            "No.",
            "No.  A direct inference cannot be made from the given data that ex:Dog is a subclass of ex:Mammal. The RDF data only includes the following classes and their relationships:",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v1",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No.  This is because the subClassOf property is a transitive property, but the superClassOf property is not.  The transitivity property of subClassOf means that if A is a subclass of B, and B is a subclass",
            "No. ",
            "No. ",
            "Yes. ",
            "No. ",
            "No.",
            "No.  If a resource rdfs:subClassOf s, then s is not rdfs:superClassOf r. ",
            "No. ",
            "Yes.  The transitivity of rdfs:subClassOf implies that the superclass is also the super class of the subclass.  Hence, ex:Tiger is a subclass of ex:Tigir, ex:Tiger is a subclass of ex:",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v2",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes. The RDFS inference rules can be used to infer the RDF statement \"ex:Tiger rdfs:superClassOf ex:Tigris\" since ex:Tigris is a subclass of ex:Tiger. This is inferred because of the R",
            "No.  This is an example of the \"superclass/subclass\" problem. There is no direct inference that \"ex:Tiger rdfs:superClassOf ex:Tigris\" from the given data. The data does indicate that ex:T",
            "Yes.",
            "Yes.  The RDF data shows that \"ex:Tigris\" is a subclass of \"ex:Tiger\", which indicates that \"ex:Tiger\" is a superclass of \"ex:Tigris\".  In the RDF Schema, the property r",
            "No.",
            "No.  The RDFS super property is the inverse of the sub property.  The RDFS sub property is used in the triple ex:Tigris rdfs:subClassOf ex:Tiger.  Therefore, the RDFS super property would",
            "Yes.",
            "Yes",
            "Yes.  The \"ex:Tiger rdfs:subClassOf ex:Tigris.\" statement is an RDF statement that defines the subclass relation between the ex:Tiger and ex:Tigris classes. The statement ex:Tigris rdfs:",
            "Yes. This can be inferred from the RDF data. Since ex:Tigris rdfs:subClassOf ex:Tiger, then it can be concluded that ex:Tiger rdfs:superClassOf ex:Tigris."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v3",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes",
            "No.",
            "No. ",
            "Yes. ",
            "Yes.",
            "No. ",
            "No. ",
            "No.  The information indicates that Tigris is a subclass of Tiger, but it does not indicate that Tiger is a superclass of Tigris.  In fact, based on the information, it can be inferred that Tiger is a subclass of",
            "Yes.  To see why, we need to work through the relationships described in the data.  We can start with ex:Tiger which is a subclass of ex:Cat.  Now, ex:Cat is a subclass of ex:Mammal",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v1",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tiger. ",
            "ex:Tiger rdfs:superClassOf ex:Tiger. ",
            "ex:Tiger rdfs:superClassOf ex:Tiger.",
            "ex:Tiger rdfs:superClassOf ex:Tiger. ",
            "ex:Tiger rdfs:subClassOf ex:Tiger.",
            "ex:Cat rdfs:subClassOf ex:Mammal.  The statement is incorrect because it states that \"Cat\" is a subclass of \"Mammal\", which is already true, but also states that \"Cat\" is a subclass",
            "ex:Tiger rdfs:superClassOf ex:Tiger.",
            "ex:Cat rdfs:superClassOf ex:Tiger.",
            "ex:Tiger rdfs:superClassOf ex:Tiger.",
            "ex:Tiger rdfs:superClassOf ex:Tiger."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v2",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:subClassOf ex:Cat. ",
            "ex:Canis rdfs:subClassOf ex:Mammal. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. This triple contains an error because ex:Tiger is the super-class of ex:Tigris and a sub-class of ex:Cat, and ex:Cat is a sub-class of",
            "ex:Tigris rdfs:superClassOf ex:Tiger."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v3",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris.  ex:Tiger is the parent of ex:Tigris and ex:Tigris is the child of ex:Tiger. Thus, ex:Tiger cannot be the super class of",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tiger.  This triple has an error because the property is rdfs:superClassOf and the subject is the same as the object. The triple ex:Tiger rdfs:superClassOf",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:superClassOf ex:Canis.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tigris rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Cat."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 4
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating \"4.9\" . ",
            "ex:AlbumF ex:rating 4.9 .  This triple contains the syntax error because a property value of type literal must be enclosed in quotes. The corrected triple is ex:AlbumF ex:rating \"4.9\" . ",
            "ex:AlbumF ex:rating 4.9 . ",
            "ex:AlbumF ex:rating 4.9 . ",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:releaseYear \"4.9\". The syntax error is the use of quotes around the value for the property ex:releaseYear. In the provided RDF data, the values for the property ex:releaseYear are either strings"
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:releaseYear 1980.",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:releaseYear \"1980\" . ",
            "ex:AlbumM ex:releaseYear \"1980\" .  (Note: The value \"1980\" should be enclosed in quotes, like all other values, to make it a valid literal.)  The final answer is: ex:Album",
            "ex:AlbumM ex:releaseYear \"1980\" .  This triple is in an incorrect format. The property releaseYear is not a string property. In the original RDF data, the property releaseYear is used with string values in triples:",
            "ex:AlbumM ex:releaseYear 1980 . "
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 2
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "rdfs: .  This is the missing namespace definition. It defines the prefix \"rdfs\" to refer to the namespace http://www.w3.org/2000/01/rdf-schema# . ",
            "ex: . ",
            "ex: .  # Added the missing namespace definition.  I'll remove the dot. [ex]  .  # Added the missing namespace definition.  I'll remove the dot. [ex]  .  # Added the missing namespace definition",
            "rdfs. ",
            "dc . ",
            "rdfs: .  The missing namespace definition is the prefix for the RDFS schema. The prefix is used to abbreviate the full URI.  The RDFS namespace is defined as:  http://www.w3.org/2000/01",
            "rdfs.  ### Step 1:  We need to find the missing namespace definition in the given RDF data.",
            "dc: <http://purl.org/dc/elements/1.1/> .  # This is the missing namespace definition.",
            "rdfs: ",
            "dc .  The prefix dc was used in the given RDF data but its namespace definition was not provided. The missing namespace definition is dc .  The prefix dc was used in the given RDF data but its namespace definition was not provided. The missing namespace"
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:releaseYear ex:[property] ex:[value].ex:releaseYear should be a literal property, however, it is used with an integer value \"1982\", which is an RDF literal. To correct the syntax error, the property ex",
            "ex:releaseYear ex:rating 4.9 .@",
            "ex:AlbumF ex:releaseYear \"1982\" .",
            "ex:AlbumF ex:releaseYear \"1982\" .  This triple is in error because it contains a string value for the property ex:releaseYear which is of type xsd:integer. In the data, the property ex:release",
            "ex:ArtistA ex:nationality \"UK\"@en . ",
            "ex:ArtistA ex:releaseYear \"1960\". ",
            "ex:AlbumF ex:genre \"Rock\" .",
            "ex:ArtistA ex:birthYear \"1960\" .",
            "ex:AlbumF ex:rating \"4.9\".",
            "ex:AlbumF ex:releaseYear \"1982\""
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:rating ex:rating \"4.7\" . (The error is the repetition of \"ex:rating\".)  This response is a single RDF triple that contains the syntax error in the given RDF data. The error is the repetition of",
            "ex:ArtistO ex:birthYear \"1971\" .",
            "ex:ArtistO ex:nationality \"Australia\"",
            "ex:AlbumM ex:artist ex:ArtistO . ",
            "ex:AlbumM ex:releaseYear \"1980\" . ",
            "ex:ArtistO ex:birthYear \"1971\" .",
            "ex:AlbumM ex:genre \"Rock\".",
            "ex:AlbumM ex:releaseYear \"1980\" . ",
            "ex:ArtistO ex:nationality \"Australia\" .",
            "ex:ArtistO ex:genre \"Rock\" .  Explanation: The error in the given RDF data is that the property ex:genre is used for the ex:ArtistO resource. However, ex:genre is defined as a property of the"
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "rdfs. ",
            "ex:. ",
            "ex . ",
            "ex:  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .",
            "ex:. ",
            "ex: . ",
            "ex: . ",
            "ex:",
            "rdfs: . ",
            "ex:. .  .  . .  . .  .  .  .  .  . .  .  .  . .  .  .  .  .  . . . . . .  .  .  ."
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums size 1",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "The artist with the highest rating is ex:ArtistZ, so we write:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "The artist with the highest album rating is ex:ArtistZ. The RDF triple is:",
            "To determine which artist has the highest album rating, we need to find the artist associated with the album with the highest rating. In this case, the album \"Beans\" has a rating of \"5.0,\" which is the highest among the albums",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums size 2",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "The artist with the highest album rating is ArtistZ (Wasa Dog), who has a rating of 5.0. The RDF triple is:"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums size 4",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "To find the artist with the highest album rating, we need to first identify the album with the highest rating and then determine the artist associated with it. Here is the step-by-step process:",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums size 8",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "The artist concept with the highest album rating is ex:ArtistZ. The artist has an album rating of 5.0. The artist's name is Wasa Dog. The artist's nationality is USA. The artist's birth year is 195",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums size 16",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistB a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF/Meta-Llama-3.1-8B-Instruct-Q4_K_M.gguf",
        "prompt_name": "Albums size 32",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistB a ex:Artist.",
            "ex:ArtistB a ex:Artist.",
            "ex:ArtistB a ex:Artist.",
            "ex:ArtistB a ex:Artist.",
            "ex:ArtistB a ex:Artist.",
            "ex:ArtistB a ex:Artist.",
            "ex:ArtistD a ex:Artist . ",
            "ex:ArtistZ a ex:Artist.  This response states that ArtistZ has the highest album rating, as evidenced by the fact that ArtistZ has an album with the rating \"5.0\", which is higher than the ratings of any other",
            "ex:ArtistB a ex:Artist. ",
            "ex:ArtistB a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ; ",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Real Albumn v1",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Real Albumn v2",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Real Albumn v3",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "```turtle"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist",
            "```rdf",
            "ex:ArtistA a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist ;",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist ;",
            "ex:ArtistO a ex:Artist ;",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist ;",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist ;",
            "```turtle",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist",
            "ex:ArtistO a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:AlbumB a ex:MusicAlbum"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 8
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ;"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 8
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ;",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum .",
            "ex:AlbumB a ex:MusicAlbum ;"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 8
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "```turtle",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The name of the artist who made an album that was genre \"Pop\" is Wasa Dog.",
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the Artist who made an album that was genre \"Pop\" is Wasa Dog.",
            "The name of the artist who made an album in the genre \"Pop\" is Wasa Dog.",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "Wasa Dog",
            "Wasa Dog",
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the artist who made an album in the \"Pop\" genre is \"Wasa Dog\".",
            "The name of the artist who made a \"Pop\" genre album is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "The name of the Artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the Artist who made an album in the genre \"Pop\" is \"Wasa Dog\".",
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "Wasa Dog",
            "The name of the artist who made an album with the genre \"Pop\" is \"Wasa Dog\".",
            "The name of the artist who made an album that was genre \"Pop\" is Wasa Dog.",
            "The name of the Artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the Artist who made an album that was genre \"Pop\" is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the artist who made an album with the genre \"Pop\" is Wasa Dog.",
            "The name of the Artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the artist who made an album that was genre \"Pop\" is Wasa Dog.",
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the Artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the artist who made an album in the \"Pop\" genre is \"Wasa Dog\".",
            "The name of the artist who made an album in the \"Pop\" genre is Wasa Dog.",
            "The artist who made an album in the \"Pop\" genre is \"Wasa Dog\".",
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The artist's name is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum with the ex:genre \"Pop\" is \"Wasa Dog\".",
            "Wasa Dog",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "Wasa Dog",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "Wasa Dog",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The artist's name is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "Wasa Dog",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "Wasa Dog",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The artist's name is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 2
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum with the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The artist's name is Wasa Dog.",
            "The artist's name is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum with the ex:genre \"Pop\" is \"Wasa Dog\".",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 6
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 7
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ;",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature ."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "```xml",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat ;",
            "ex:HabitatL a ex:Habitat ;",
            "```rdf",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ;",
            "ex:HabitatL a ex:Habitat"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 5
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat ;",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v1",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat",
            "```turtle",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v2",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "```plaintext",
            "ex:HabitatL a ex:Habitat ;",
            "ex:HabitatL a ex:Habitat ;",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 7
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v3",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ;",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v4",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v5",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ;",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v6",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v7",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "```turtle",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v8",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "```turtle",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat",
            "ex:HabitatL a ex:Habitat ; ",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat ;",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 7
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "No.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "No.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v1",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v2",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v3",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No.",
            "No",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v1",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v2",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v3",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v1",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes.",
            "No.",
            "Yes",
            "No",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v2",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v3",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v1",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "No.",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v2",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v3",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No",
            "Yes",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "Yes.",
            "Yes.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v1",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "The triple containing an error is: ex:Tiger rdfs:superClassOf ex:Tigris.",
            "The triple that contains an error is `ex:Tiger rdfs:superClassOf ex:Tigris`. In RDF Schema, the property `rdfs:subClassOf` is used to denote that one class is a subclass of another. The",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "The triple that contains an error is: ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "The triple that contains an error is: ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 6
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v2",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "The triple that contains an error is: ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "The error is in the triple \"ex:Tiger rdfs:superClassOf ex:Tigris.\" The correct property should be \"rdfs:subClassOf\" instead of \"rdfs:superClassOf\".",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "The triple with an error is `ex:Tiger rdfs:superClassOf ex:Tigris`."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 7
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v3",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "The triple that contains an error is: ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "The triple containing an error is:",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris",
            "ex:Tiger rdfs:superClassOf ex:Tigris."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 8
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumX ex:rating \"4.5\".",
            "ex:AlbumX ex:rating \"4.5\" . (The error is in using quotes around the numeric rating, which should not be quoted in RDF literals if they are numeric.)",
            "ex:AlbumX dc:title \"Jake Odner\" ; (The title should be enclosed in quotes as it's a string literal.)",
            "ex:AlbumX ex:rating \"4.5\" .",
            "ex:AlbumX ex:rating \"4.5\" .",
            "ex:AlbumX dc:title \"Jake Odner\"",
            "ex:AlbumX ex:rating \"4.5\" .",
            "ex:AlbumX ex:rating \"4.5\" .",
            "ex:AlbumX ex:rating \"4.5\" .",
            "ex:AlbumX ex:artist ex:ArtistY ."
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumM ex:releaseYear 1980 .",
            "ex:AlbumM ex:releaseYear 1980 .",
            "ex:AlbumM ex:releaseYear 1980 .",
            "ex:AlbumM ex:releaseYear 1980",
            "ex:AlbumM ex:releaseYear 1980",
            "ex:AlbumM ex:releaseYear 1980 .",
            "ex:AlbumM ex:releaseYear 1980",
            "ex:AlbumM ex:releaseYear 1980 .",
            "ex:AlbumM ex:releaseYear 1980 .",
            "ex:AlbumM ex:releaseYear 1980 ."
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex: [http://example.org/]",
            "ex: <http://example.org/> .",
            "ex: [http://example.org/ontology#] .",
            "[ex] .",
            "@prefix ex: <http://example.org/ns#> .",
            "[ex: <http://example.com/namespace/> ]",
            "[ex] .",
            "@prefix ex: <http://example.org/> .",
            "[ex: http://example.org/ex/]",
            "@prefix ex: <http://example.org/ontology#> ."
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "The RDF data provided does not contain any syntax errors. All triples are correctly formatted.",
            "ex:AlbumF ex:rating \"4.9\" .  (The value should be a literal with datatype specification for numeric values, e.g., 4.9^^xsd:decimal)",
            "The provided RDF data does not contain any syntax errors. All triples are correctly formatted according to RDF standards.",
            "ex:AlbumF ex:rating 4.9 .",
            "The provided RDF data does not contain any syntax errors. All triples are correctly formatted according to RDF syntax rules.",
            "The RDF triple that contains the syntax error is: `ex:AlbumF ex:artist ex:ArtistA ;`. The property `ex:artist` should be `ex:artistName` to match the expected structure of the RDF vocabulary defined in",
            "The instruction does not specify an RDF triple that contains a syntax error based on the given RDF data. All triples appear to be correctly formed according to RDF syntax standards. Therefore, there is no triple to return as containing a syntax error.",
            "The instruction provided does not contain any RDF triples that are syntactically incorrect. Each triple follows the proper RDF syntax with a subject, predicate, and object. Therefore, there is no RDF triple with a syntax error to return based on the given data",
            "ex:AlbumF ex:genre \"Rock\".",
            "The instruction does not provide explicit RDF triples but a set of RDF data. The data seems to be correct according to the RDF syntax. However, without a specific context or additional information, it's difficult to determine a syntax error. "
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 1
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:ArtistO a ex:Artist ;",
            "There is no syntax error in the provided RDF data. All triples are correctly formatted according to RDF syntax rules.",
            "The RDF data provided does not contain any syntax errors. All triples are correctly formatted according to RDF syntax rules.",
            "No syntax error is present in the provided RDF data.",
            "ex:AlbumM a ex:MusicAlbum ;",
            "The provided RDF data does not contain any syntax errors. All triples are correctly formatted according to RDF syntax rules.",
            "No triple contains a syntax error.",
            "The instruction does not provide an RDF triple with a syntax error. All triples are correctly formed according to the RDF syntax. If an error were present, it would typically involve a missing predicate or object, a syntactical mistake in the URI, or incorrect",
            "The RDF data provided does not contain any syntax errors. Each triple follows the correct RDF syntax format of subject-predicate-object.",
            "The RDF data provided does not appear to contain any syntax errors. Each triple is correctly formed with a subject, predicate, and object. "
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex: [http://example.org/]",
            "[ex: <http://example.org/ex>]",
            "ex: [http://example.org/schema#] .",
            "[ex] .",
            "ex: [http://example.org/ontology#] .",
            "[ex: <http://example.org/> ]",
            "ex: [http://example.org/ex#] .",
            "[ex: <http://example.org/>]",
            "ex: [http://example.org/ex/]",
            "ex: [http://example.org/] ."
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums size 1",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums size 2",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums size 4",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums size 8",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums size 16",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/phi-4-GGUF/phi-4-Q4_K_M.gguf",
        "prompt_name": "Albums size 32",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.  ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.  ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Real Albumn v1",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Real Albumn v2",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.  ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Real Albumn v3",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist . "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist . ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist . ",
            "ex:ArtistO a ex:Artist . ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.  ",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist . ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.  ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist . ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum . "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum . ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum . ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum. ",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum . "
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog ",
            "Wasa Dog",
            "Wasa Dog ",
            "Wasa Dog "
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature . ",
            "ex:CreatureU a ex:MythicalCreature . ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.  ",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.  ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature . ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:Glimmerphoenix a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature . ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.  ",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.  ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature .",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.  ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature .  ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v1",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v2",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v3",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v4",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.  ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v5",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v6",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v7",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat . "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v8",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes. ",
            "Yes ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes.",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes. ",
            "Yes",
            "Yes",
            "Yes",
            "Yes ",
            "Yes ",
            "Yes.",
            "Yes. ",
            "Yes.",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes ",
            "Yes",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes. ",
            "Yes",
            "Yes.",
            "Yes",
            "Yes",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes ",
            "Yes. ",
            "Yes. ",
            "Yes",
            "Yes. ",
            "Yes. ",
            "Yes "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.",
            "Yes. ",
            "Yes ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes. ",
            "Yes.",
            "Yes",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes. ",
            "Yes. ",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "No. ",
            "Yes ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes.",
            "Yes. ",
            "Yes",
            "Yes. ",
            "Yes.",
            "Yes.",
            "Yes ",
            "Yes ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No ",
            "No. ",
            "No. ",
            "No.",
            "No.",
            "No. ",
            "No. ",
            "No. ",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes ",
            "Yes. ",
            "Yes. ",
            "Yes",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes ",
            "Yes. ",
            "Yes. ",
            "Yes ",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes. ",
            "Yes ",
            "Yes.",
            "Yes. ",
            "Yes ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes. ",
            "Yes. ",
            "Yes",
            "Yes. ",
            "Yes.",
            "Yes. ",
            "Yes. ",
            "Yes ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "No. ",
            "No.",
            "No.",
            "No. ",
            "No. ",
            "No. ",
            "No.",
            "No. ",
            "No. ",
            "No. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v1",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No. ",
            "No.",
            "No. ",
            "No. ",
            "No",
            "No. ",
            "No. ",
            "No. ",
            "No.",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v2",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No. ",
            "No.",
            "No. ",
            "No.",
            "No. ",
            "No.",
            "No. ",
            "No.",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v3",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No. ",
            "No.",
            "No.",
            "No. ",
            "No.",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v1",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No. ",
            "No. ",
            "No. ",
            "No.",
            "No. ",
            "No. ",
            "No. ",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v2",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No. ",
            "No.",
            "No. ",
            "No. ",
            "No.",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v3",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No. ",
            "No.",
            "No.",
            "No.",
            "No. ",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v1",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No. ",
            "No.",
            "No. ",
            "No ",
            "No",
            "No. ",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v2",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No.",
            "No. ",
            "No.",
            "No. ",
            "No.",
            "No. ",
            "No.",
            "No ",
            "No. ",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v3",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes. ",
            "Yes",
            "Yes. ",
            "No.",
            "No. ",
            "Yes. ",
            "Yes ",
            "No. ",
            "Yes. ",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 4
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v1",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No.",
            "No. ",
            "No. ",
            "No.",
            "No. ",
            "No. ",
            "No.",
            "No. ",
            "No. ",
            "No. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v2",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes.",
            "Yes.",
            "Yes",
            "Yes. ",
            "Yes. ",
            "Yes. ",
            "Yes ",
            "Yes",
            "Yes. ",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v3",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes",
            "No. ",
            "No. ",
            "Yes. ",
            "Yes ",
            "No.",
            "No.",
            "No. ",
            "Yes. ",
            "Yes. "
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v1",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. "
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v2",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. "
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v3",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:subClassOf ex:Tigris. ",
            "ex:Tiger rdfs:subClassOf ex:Tigris . ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris .",
            "ex:Tiger rdfs:subClassOf ex:Tigris. "
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 7
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:ArtistA ex:nationality \"UK\" .",
            "ex:AlbumM ex:artist ex:ArtistO ",
            "ex:AlbumM ex:rating \"4.7\".  ",
            "ex:AlbumM ex:artist ex:ArtistO. ",
            "ex:AlbumM ex:genre \"Rock\" . ",
            "ex:AlbumM ex:artist ex:ArtistO . ",
            "ex:AlbumM ex:artist ex:ArtistO . ",
            "ex:ArtistO ex:birthYear \"1971\" ",
            "ex:AlbumM ex:artist ex:ArtistO. ",
            ""
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumM ex:releaseYear 1980 . ",
            "ex:AlbumM ex:releaseYear 1980 .",
            "ex:AlbumM ex:releaseYear 1980 ",
            "ex:AlbumM ex:releaseYear 1980 .",
            "ex:ArtistO ex:birthYear \"1971\" .",
            "ex:AlbumM ex:releaseYear 1980 .",
            "ex:AlbumM ex:releaseYear 1980 .  ",
            "ex:AlbumM ex:releaseYear 1980 .  ",
            "ex:ArtistO ex:birthYear \"1971\" . ",
            "ex:AlbumM ex:releaseYear 1980 ."
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 8
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex: .",
            "ex: <http://example.org/> .",
            "ex: .",
            "ex: <http://example.org/> .",
            "[ex:] .",
            "[ex:] .",
            "ex: <http://example.org/> .",
            "[ex:] .",
            "ex: <http://example.com/> . ",
            " ex: <http://example.org/> . "
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:ArtistA ex:nationality \"UK\" . ",
            "ex:ArtistA ex:nationality \"UK\". ",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:ArtistA ex:nationality \"UK\". ",
            "ex:ArtistA ex:nationality \"UK\".",
            "ex:ArtistA ex:birthYear \"1960\" .",
            "ex:AlbumF ex:releaseYear \"1982\".",
            "ex:ArtistA ex:nationality \"UK\". ",
            "ex:ArtistA ex:birthYear \"1960\". ",
            "ex:AlbumF ex:rating 4.9 .  "
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 2
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumM ex:rating \"4.7\" . ",
            "ex:ArtistO ex:birthYear \"1971\" . ",
            "ex:ArtistO ex:birthYear \"1971\" . ",
            "ex:ArtistO ex:nationality \"Australia\" . ",
            "ex:ArtistO ex:birthYear \"1971\" . ",
            "ex:ArtistO ex:birthYear \"1971\". ",
            "ex:ArtistO ex:birthYear \"1971\" .",
            "ex:ArtistO ex:birthYear \"1971\" . ",
            "ex:ArtistO ex:birthYear \"1971\" . ",
            "ex:ArtistO ex:nationality \"Australia\" ."
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "[ex] . ",
            "ex: <http://example.org/> .",
            "[ex: <http://example.org/>] .",
            "ex: . ",
            "ex: <http://example.org/> . ",
            "ex: <http://example.org/> .",
            "ex: . ",
            "ex: <http://example.org/> .",
            "[ex: <http://example.org/>] .",
            "ex: ."
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums size 1",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.  ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist . "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums size 2",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums size 4",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums size 8",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist . ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums size 16",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "bartowski/gemma-2-9b-it-GGUF/gemma-2-9b-it-Q4_K_M.gguf",
        "prompt_name": "Albums size 32",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistUD a ex:Artist. ",
            "ex:ArtistUD a ex:Artist. ",
            "ex:ArtistUD a ex:Artist.",
            "ex:ArtistUD a ex:Artist .",
            "ex:ArtistUD a ex:Artist. ",
            "ex:ArtistUD a ex:Artist.",
            "ex:ArtistUD a ex:Artist .",
            "ex:ArtistUD a ex:Artist .",
            "ex:ArtistUD a ex:Artist. ",
            "ex:ArtistUD a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist. Response for the highest album rating:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. To clarify, the artist with the highest album rating is \"Wasa Dog\" (ex:ArtistZ) with a rating of \"5.0\". The query result provided is in the correct format.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating of 5.0. To express this as a single RDF triple, we use the artist concept from the data. Response: ex:Artist",
            "ex:ArtistZ a ex:Artist. To clarify, the artist \"Wasa Dog\" has the highest album rating with a rating of \"5.0\". The RDF triple correctly identifies the artist concept. The other artist ratings are: \"D",
            "ex:ArtistZ a ex:Artist. Based on the provided RDF data, the artist with the highest album rating is \"Wasa Dog\" (ex:ArtistZ), whose album \"Beans\" has a rating of \"5.0\". The",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Based on the provided RDF data, the artist with the highest album rating is \"Wasa Dog\" (ex:ArtistZ) with a rating of \"5.0\" for their album \"Beans\".",
            "ex:ArtistZ a ex:Artist. Based on the provided RDF data, the artist with the highest album rating is \"Wasa Dog\" (ex:ArtistZ), whose album \"Beans\" has a rating of \"5.0\". The"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating of 5.0. ### Response (Corrected):",
            "ex:ArtistZ a ex:Artist. Response:",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating of 5.0. To match the requested format, we use the artist concept from the data provided. ### Response:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating with \"5.0\".",
            "ex:ArtistZ a ex:Artist. Response based on the fact that ex:AlbumB has the highest rating of 5.0, and it is associated with ex:ArtistZ. The query is to identify the artist with the highest album",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating of \"5.0\". To match the example response structure, we specify the artist concept.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. To determine the artist with the highest album rating, the relevant data from the given RDF triples is:",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating of 5.0.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating of 5.0.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums - Concept Prompt v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums - Concept Prompt v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. To clarify, ArtistA had the highest rating of 4.9 for the MusicAlbum \"Sun Newtown\". However, based on the instruction to return a single RDF triple with the artist concept, the response",
            "ex:ArtistA a ex:Artist. The artist Dane had the highest rating for his music album \"Sun Newtown\" with a rating of 4.9. However, there is another artist with a higher rating. Upon reviewing the data, the",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response:"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums - Concept Prompt v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" had the highest rating \"5.0\" for the album \"Beans\". Response is structured as requested. ",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest rating \"5.0\" for the album \"Beans\". The query specifically looks for the artist with the highest rating, which is associated with the album \"",
            "ex:ArtistZ a ex:Artist. Response with a single RDF triple containing the artist concept that had the highest rating for music album. In this case, the artist with the highest rating is \"Wasa Dog\" with a rating of \"5",
            "ex:ArtistZ a ex:Artist. RDF data analysis and comparison of ratings show that \"Beans\" by ex:ArtistZ has the highest rating of \"5.0\". Thus, the answer is ex:ArtistZ. ### Response:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response based on the provided data, the artist with the highest rating is Wasa Dog, linked to ex:AlbumB which has a rating of \"5.0\". Hence, the correct response is ex",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. To determine which artist had the highest rating, we need to compare the ratings of all the music albums. The ratings given are:"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Real Albumn v1",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. ```json",
            "ex:ArtistZ a ex:Artist. Response Explanation: Based on the provided RDF data, the album with the highest rating is \"Thriller\" with a rating of \"5.0\". The artist associated with this album is \"Michael Jackson\",",
            "ex:ArtistZ a ex:Artist. RDF data analysis:",
            "ex:ArtistZ a ex:Artist. ``` ```sql",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Real Albumn v2",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist. The artist \"Michael Jackson\" has the highest album rating of 5.0.",
            "ex:ArtistZ a ex:Artist. Below is the RDF triple that identifies the artist with the highest album rating:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response based on the fact that \"Thriller\" has the highest rating of 5.0 among the albums.",
            "ex:ArtistZ a ex:Artist. The RDF data shows that \"Thriller\" by Michael Jackson has the highest rating of 5.0. Therefore, the artist with the highest album rating is Michael Jackson. The response is structured as the",
            "ex:ArtistZ a ex:Artist. Response:",
            "ex:ArtistZ a ex:Artist. Based on the given RDF data, \"Thriller\" has the highest album rating of 5.0, and it is associated with the artist \"Michael Jackson\" (ex:ArtistZ). Therefore,",
            "ex:ArtistZ a ex:Artist. Response based on the highest rating of 5.0 for the album \"Thriller\". ``` ``` The artist with the highest album rating is ex:ArtistZ, which corresponds to Michael Jackson. Thus,"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Real Albumn v3",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist. The artist Michael Jackson has the highest album rating with 5.0. However, following the instruction to use the artist concept, the correct response is \"ex:ArtistZ\". ### Response:",
            "ex:ArtistZ a ex:Artist. Response Explanation:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Based on the provided RDF data, \"Thriller\" by Michael Jackson has the highest album rating of 5.0, and Michael Jackson is associated with the artist concept \"ex:ArtistZ\". Therefore",
            "ex:ArtistZ a ex:Artist. Response | Explanation",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. The artist with the highest album rating is Michael Jackson, and he is represented by the concept ex:ArtistZ in the given RDF data. The rating of his album \"Thriller\" is \"5.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Born Year v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist. The artist was born in the year 1960, and their concept is represented by the IRI ex:ArtistA.",
            "ex:ArtistA a ex:Artist. The artist concept is matched based on the birthYear being \"1960\" in the provided RDF data. ",
            "ex:ArtistA a ex:Artist. Response with the artist concept who was born in the year 1960.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. Response Explanation: The provided RDF data includes information about various music albums and their respective artists. According to the data, the artist who was born in the year 1960 is \"Dane,\"",
            "ex:ArtistA a ex:Artist. The provided RDF data states that the artist with the name \"Dane\" (dc:name \"Dane\") was born in the year 1960 (ex:birthYear \"196",
            "ex:ArtistA a ex:Artist. Based on the provided RDF data, the artist born in the year 1960 is \"Dane,\" who is represented by the concept ex:ArtistA. Thus, the correct response is `"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Born Year v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response: ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist. This triple indicates that the artist born in 1960 is represented by the concept ex:ArtistA.",
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response Explanation: The RDF data provided includes an artist, ex:ArtistA, who has the birthYear property set to \"1960\". The question asks which artist was born in the year ",
            "ex:ArtistA a ex:Artist. Response with the artist concept that was born in 1960."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Born Year v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist. ```xml",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. ```json"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist. To ensure the response is aligned with the format and context provided, the query specifically asks for the artist with a birth year of 1960. The correct RDF triple that matches the query is `",
            "ex:ArtistA a ex:Artist. ```json",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist. This triple indicates that the artist with the birth year 1960 is represented by the concept \"ex:ArtistA\". ",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. The response identifies the artist concept that has the birth year 1960 according to the provided RDF data. "
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. The artist concept ex:ArtistA has the birth year \"1960\". ",
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist. The artist concept \"ex:ArtistA\" is the one with the birth year \"1960\". The triple is constructed as per the example provided. ",
            "ex:ArtistA a ex:Artist. To find the artist with the birth year 1960, I looked for the ex:birthYear property with the value \"1960\". The relevant triple was:",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist. This triple indicates that the artist concept \"ex:ArtistA\" is of type \"ex:Artist\" and is the one born in the year ",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist. Response:",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. To derive the correct answer, the RDF data was scanned to find an artist with the birth year \"1960\". The triple `ex:ArtistA ex:birthYear \"1960"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Nationality v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ```yaml",
            "ex:ArtistO a ex:Artist. Based on the provided RDF data, the artist concept with the nationality \"Australia\" is ex:ArtistO. ",
            "ex:ArtistO a ex:Artist. The artist concept with the nationality \"Australia\" is identified and stated as per the instruction. To match the example format provided, we use the artist concept directly without additional properties. ",
            "ex:ArtistO a ex:Artist. To respond correctly, the triple must be structured in the format that matches the instruction, and it should use the concept of the artist who has the nationality \"Australia\". From the given data, the artist \"",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. The artist concept for the artist with the nationality \"Australia\" is ArtistO. To match the example format requested, the response is as follows: ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Nationality v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. The artist concept with the nationality \"Australia\" is identified by the given RDF data. The artist's name is \"Physik\" and the birth year is \"1971\", but the nationality is",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. ### Instruction:",
            "ex:ArtistO a ex:Artist. Response:",
            "ex:ArtistO a ex:Artist. The artist concept \"Physik\" has the nationality \"Australia\". According to the data, the artist with the nationality \"Australia\" is \"Physik\", and the provided example shows how to correctly format the",
            "ex:ArtistO a ex:Artist. ### Instruction:"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Nationality v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. Response to the instruction: The artist with the nationality \"Australia\" is found in the provided RDF data. The corresponding RDF triple is:",
            "ex:ArtistO a ex:Artist. ### Instruction:",
            "ex:ArtistO a ex:Artist. ",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. Response Explanation: The query asks for the artist with the nationality \"Australia.\" According to the provided RDF data, the artist \"Physik\" (ex:ArtistO) has the nationality \"Australia.\" Hence",
            "ex:ArtistO a ex:Artist. To clearly answer the question, the provided triple identifies the artist whose nationality is \"Australia\".",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. To solve the given instruction, we need to identify the artist whose nationality is \"Australia.\" From the provided RDF data, we see that:",
            "ex:ArtistO a ex:Artist. To provide the correct answer, the query should be:"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. The ArtistO has the ex:nationality \"Australia\". The response is provided in the required format as a single RDF triple.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. Based on the provided RDF data, the artist with the nationality \"Australia\" is linked to the concept ex:ArtistO. Therefore, the correct response is the RDF triple stating that ex:ArtistO is",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. To directly answer the question, the RDF triple that indicates the artist with the nationality \"Australia\" is:",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. Response to the instruction:",
            "ex:ArtistO a ex:Artist. To find the artist with nationality \"Australia\", I identified the relevant information in the provided RDF data, which states that ex:ArtistO has ex:nationality \"Australia\". Therefore, the response is the",
            "ex:ArtistO a ex:Artist. To verify, the relevant information is:",
            "ex:ArtistO a ex:Artist. Response with the artist concept that has the nationality \"Australia\".",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. To clarify, the artist concept `ex:ArtistO` is the one with the nationality \"Australia\" as stated in the provided RDF data. The example response structure you requested is directly matching the data provided",
            "ex:ArtistO a ex:Artist. The artist concept with the nationality \"Australia\" is matched to ex:ArtistO based on the given RDF data. ",
            "ex:ArtistO a ex:Artist. To clarify, the artist concept with the nationality \"Australia\" is \"Physik\", and the response is formatted as an RDF triple as requested. "
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist. The artist concept is associated with the nationality \"Australia\" based on the provided RDF data.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. The artist concept \"Physik\" is associated with the nationality \"Australia\" as per the provided RDF data. To match the requested format, we use the artist concept \"Physik\" (which is the",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. Response:",
            "ex:ArtistO a ex:Artist. To find the artist with the nationality \"Australia\", I located the artist concept with the attribute ex:nationality set to \"Australia\". The corresponding artist concept is ex:ArtistO. I then constructed an",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist. To directly answer the query about which artist has the nationality \"Australia\", the response is a single RDF triple that identifies the artist with the given nationality. The artist in question is identified by `ex:Artist"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Genre v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. To clearly indicate that the album \"AlbumB\" has the genre \"Pop\", the RDF triple should be:",
            "ex:AlbumB a ex:MusicAlbum. To be precise, the album that has the genre \"Pop\" is indicated by the RDF triple:",
            "ex:AlbumB a ex:MusicAlbum. Response:",
            "ex:AlbumB a ex:MusicAlbum. Response: ex:AlbumB a ex:MusicAlbum. \\nThis triple states that the album \"AlbumB\" is a music album and matches the given genre \"Pop\". \\nIt directly",
            "ex:AlbumB a ex:MusicAlbum. To be precise, the triple that represents the album with the genre \"Pop\" is:",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. To be precise, the query is asking for the album with the genre \"Pop\". The RDF triple provided indicates that the album \"AlbumB\" has the genre \"Pop\". Therefore, the correct response",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. To directly address the question, the album that has the genre \"Pop\" is identified in the provided RDF data. The correct response is given in the requested format. The subject `ex:AlbumB"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Genre v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. To be precise, the album that has the genre \"Pop\" is \"Beans\" by the artist \"Wasa Dog\". The correct RDF triple representing this information is:",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ### Instruction:",
            "ex:AlbumB a ex:MusicAlbum. The RDF triple indicates that the album \"Beans\" has the genre \"Pop\". The response is structured to match the example provided. The term \"ex:AlbumB\" refers to the specific album concept",
            "ex:AlbumB a ex:MusicAlbum. The response identifies AlbumB as the one with the genre \"Pop\". Here is the single RDF triple as requested:",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Genre v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum. To clearly identify the album with the genre \"Pop\" in the given RDF data, the appropriate response would be to use the subject that has the `ex:genre` property set to \"Pop\".",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. To clarify, the RDF triple you requested indicates that the album \"Beans\" has the genre \"Pop\". However, based on the given data, the correct response should be:",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ### Instruction:",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. To clarify, the RDF triple `ex:AlbumB a ex:MusicAlbum.` indicates that the album concept \"AlbumB\" is of type \"MusicAlbum\" and it has the genre \"Pop"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. To directly answer the question, the music album with the genre \"Pop\" is identified by the concept `ex:AlbumB`. The given RDF data explicitly states this in the triple `ex:Album",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. To explicitly match the genre \"Pop\", we would use:",
            "ex:AlbumB a ex:MusicAlbum. To explicitly state which album has the genre \"Pop\", we use the information provided in the RDF data where the album `ex:AlbumB` has the property `ex:genre` with the value",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. To ensure the response is in the correct format, we can use the following RDF triple:",
            "ex:AlbumB a ex:MusicAlbum. To be more precise, the triple that directly matches the genre \"Pop\" is:"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. The response correctly identifies the album \"Beans\" as having the genre \"Pop\" and presents it in the requested RDF triple format. ",
            "ex:AlbumB a ex:MusicAlbum. ### Instruction:",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ### Instruction:",
            "ex:AlbumB a ex:MusicAlbum. The given RDF data shows that the album \"Beans\" has the genre \"Pop\", and its corresponding RDF concept is ex:AlbumB. Therefore, the response is the triple indicating that ex:Album",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. The album \"Beans\" falls under the \"Pop\" genre, as specified in the provided RDF data. ### Instruction:"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum. ### Instruction:",
            "ex:AlbumB a ex:MusicAlbum. ### Instruction:",
            "ex:AlbumB a ex:MusicAlbum. The response is derived from the provided RDF data where ex:AlbumB is associated with the ex:genre \"Pop\". The provided example structure is correctly followed in the response. ",
            "ex:AlbumB a ex:MusicAlbum. Response:",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" made the album \"Beans\" which has the genre \"Pop\".",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Based on the provided RDF data, the artist \"Wasa Dog\" (ex:ArtistZ) created the album \"Beans\" which has the genre \"Pop\". Therefore, the correct response is the triple",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. To break down the reasoning:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response to the instruction:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. To find the artist who made an album with the genre \"Pop\", we look for the `ex:genre` property with the value \"Pop\" and then trace back to the artist. The relevant triple"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. Response to the instruction:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. To find the artist that made an album with the genre \"Pop,\" I identified the album with the genre \"Pop\" from the given data, which is \"Beans\" by the artist \"Wasa Dog",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" made the album \"Beans\" which has the genre \"Pop\". To match the example response structure, the answer is given in the form of a single RDF triple containing the",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. The artist that made the album with the genre \"Pop\" is \"Wasa Dog,\" and the corresponding RDF triple is as follows:",
            "ex:ArtistZ a ex:Artist. Response:",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" made the album \"Beans\" which has the genre \"Pop\". The response is in the required RDF triple format. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" made the album \"Beans\" which has the genre \"Pop\". This is represented by the RDF triple given above. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. The artist concept associated with the album that has the genre \"Pop\" is ArtistZ, as indicated by the RDF data provided. The artist ArtistZ is linked to the album AlbumB, which has the",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. Based on the provided RDF data, ArtistZ created the album \"Beans\" which is of the genre \"Pop\". Therefore, the correct response is ex:ArtistZ a ex:Artist. ### End of",
            "ex:ArtistZ a ex:Artist. The artist associated with the \"Pop\" genre album \"Beans\" is ArtistZ. To provide the response in the requested format, we use the triple: ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. To be more precise and aligned with the example structure you requested, the correct response would be:"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. To be more precise in the context of the question, the artist that made a music album with the genre \"Pop\" is:",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" made an album with the genre \"Pop\". ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response | Explanation",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. "
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response to the instruction to find the artist who made a music album in the \"Pop\" genre:",
            "ex:ArtistZ a ex:Artist. To identify the correct artist, I looked for any album with the genre \"Pop\" and then matched it to the artist. The album \"Beans\" has the genre \"Pop\" and is associated with artist",
            "ex:ArtistZ a ex:Artist. Response | Explanation",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response:",
            "ex:ArtistZ a ex:Artist. Response:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist. To clearly identify the artist who made a Pop genre album, the correct RDF triple based on the provided data is: `ex:ArtistZ a ex:Artist.`",
            "ex:ArtistZ a ex:Artist. Response based on the provided RDF data, where ex:ArtistZ made an ex:MusicAlbum with the ex:genre \"Pop\". The triple states that ex:ArtistZ is an ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response Explanation:",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. To clarify, ArtistZ made an MusicAlbum that has the genre \"Pop\". The query matches the artist with the pop album based on the provided RDF data. ",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ```  ",
            "ex:ArtistZ a ex:Artist. Based on the provided RDF data, the artist who made a music album with the genre \"Pop\" is \"Wasa Dog\", whose concept is ex:ArtistZ. The response is in the requested format"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog",
            "Dane",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Dane",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog",
            "Wasa Dog"
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. Response to the instruction:",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: Based on the given RDF data, the creature with the highest rating is \"Glimmerphoenix,\" which is represented by the concept \"ex:CreatureU.\" The rating",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response",
            "ex:CreatureU a ex:MythicalCreature. Response: ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ``` \r",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: The given RDF data includes information about two mythical creatures, Fluffdragon (ex:CreatureX) and Glimmerphoenix (ex:CreatureU). The ratings for"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. Response based on the provided RDF data, where \"Glimmerphoenix\" has a rating of \"4.9\", which is the highest among the given creatures. The query asks for",
            "ex:CreatureU a ex:MythicalCreature. Response to the instruction:",
            "ex:CreatureU a ex:MythicalCreature. Response to the instruction: Given the RDF data provided, the creature with the highest rating is \"Glimmerphoenix\" with a rating of \"4.9\". The corresponding RDF triple",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: Based on the given RDF data, the creature with the highest rating is \"Glimmerphoenix\" with a rating of \"4.9\". The corresponding RDF triple for",
            "ex:CreatureU a ex:MythicalCreature. Response based on the given RDF data, where \"Glimmerphoenix\" has the highest rating of \"4.9\". The query is to return the creature concept, which is \"",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response: ex:CreatureU",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: The RDF triple \"ex:CreatureU a ex:MythicalCreature.\" indicates that the creature \"Glimmerphoenix,\" represented by the concept \"ex:Creature",
            "ex:CreatureU a ex:MythicalCreature. Response:",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ```xml",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. The Glimmerphoenix has the highest rating of 4.9. The response follows the required format to indicate the creature concept."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. Response:",
            "ex:CreatureU a ex:MythicalCreature. Response: ",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ```markdown",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Based on the provided RDF data, the creature with the highest `ex:rating` is `ex:CreatureU` with a rating of \"4.9\". Therefore, the correct response",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. To determine the ex:MythicalCreature with the highest ex:rating, we need to compare the ratings provided for each creature. Here are the ratings for the given creatures:"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ``` ",
            "ex:CreatureU a ex:MythicalCreature. The Glimmerphoenix has the highest rating of 4.9 among the given mythical creatures. The response is structured to match the example format provided. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. To determine which ex:MythicalCreature has the highest ex:rating, we compare the ratings of the given creatures. \"Glimmerphoenix\" has a rating of \"4",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: Based on the provided RDF data, the mythological creature with the highest rating is \"Glimmerphoenix\" (ex:CreatureU) with a rating of \"4",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: In the provided RDF data, the mythical creature with the highest rating is \"Glimmerphoenix\" with an \"ex:rating\" of \"4.9\". The",
            "ex:CreatureU a ex:MythicalCreature. Response: ",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: In the provided RDF data, the `ex:CreatureU` has a rating of \"4.9\", which is the highest rating among the creatures listed. Therefore, `"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: Based on the given RDF data, the creature with the highest rating is \"Glimmerphoenix\" (ex:CreatureU), with a rating of \"4.9",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: Based on the given RDF data, the mythical creature with the highest ex:rating is ex:CreatureU, which has a rating of \"4.9\". The correct response",
            "ex:CreatureU a ex:MythicalCreature. To determine which `ex:MythicalCreature` has the highest `ex:rating`, we compare the ratings provided for `ex:CreatureX` and `ex:CreatureU`.",
            "ex:CreatureU a ex:MythicalCreature. Response:",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: The given RDF data describes two mythical creatures, Fluffdragon and Glimmerphoenix, along with their habitats, colors, magic levels, and ratings. The ratings are",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: According to the provided RDF data, the creature with the highest ex:rating is \"Glimmerphoenix,\" which is identified by the concept ex:CreatureU. The",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ```ex:CreatureU a ex:MythicalCreature.``` This RDF triple indicates that `ex:CreatureU` is a `ex:MythicalCreature`, which",
            "ex:CreatureU a ex:MythicalCreature. Response to the instruction:"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ``` ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: In the provided RDF data, the creature with the highest magic level is \"Glimmerphoenix\" which has a \"Very High\" magic level. Therefore, the correct",
            "ex:CreatureU a ex:MythicalCreature. RDF data analysis indicates that Glimmerphoenix (ex:CreatureU) has the highest magic level, which is \"Very High\". Therefore, the answer is ex:CreatureU a",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` The Glimmerphoenix has the highest magic level. Therefore, the correct response is:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. To solve this problem, we need to identify which mythical creature has the highest magic level. From the provided RDF data:",
            "ex:CreatureU a ex:MythicalCreature. Response: ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ``` ```"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. To determine the creature with the highest magic level, we compare the magic levels provided in the RDF data:",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ",
            "ex:CreatureU a ex:MythicalCreature. Response: ex:CreatureU",
            "ex:CreatureU a ex:MythicalCreature. The Glimmerphoenix has the highest magic level \"Very High\". According to the provided data, Glimmerphoenix (ex:CreatureU) has a higher magic level than",
            "ex:CreatureU a ex:MythicalCreature. Response:",
            "ex:CreatureU a ex:MythicalCreature. The Glimmerphoenix has the highest magic level with \"Very High\". The RDF triple is based on the given information that CreatureU has a higher magic level than CreatureX. To",
            "ex:CreatureU a ex:MythicalCreature. The Glimmerphoenix has the highest magic level, as specified in the RDF data with the value \"Very High\". No other creature has a higher magic level than this. Therefore,",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: Based on the provided RDF data, \"Glimmerphoenix\" (ex:CreatureU) has the highest magic level, which is \"Very High\". Therefore, the",
            "ex:CreatureU a ex:MythicalCreature. The Glimmerphoenix has the highest magic level with \"Very High\". Since \"Very High\" is greater than \"High\", Glimmerphoenix is selected.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. Response to the instruction and generated using the given RDF data.",
            "ex:CreatureU a ex:MythicalCreature. Response to the instruction:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. The response is based on the information provided in the RDF data, where ex:CreatureU has an ex:magicLevel \"Very High\", which is the highest magic level among the creatures listed",
            "ex:CreatureU a ex:MythicalCreature. To determine which creature has the highest magic level, we examine the given RDF data:",
            "ex:CreatureU a ex:MythicalCreature. The response indicates that \"Glimmerphoenix\" has the highest magic level, and this is represented using the provided RDF syntax. The \"ex:CreatureU\" is the subject,"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: The task involves analyzing the provided RDF data to determine which of the mythical creatures has the highest ex:magicLevel. By examining the data, we can see that CreatureX has",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. To determine which ex:MythicalCreature has the highest ex:magicLevel, we compare the magic levels of the two creatures:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. To identify the mythical creature with the highest magic level, I compared the magic levels of both creatures:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: Based on the given RDF data, the ex:MythicalCreature with the highest ex:magicLevel is ex:CreatureU, which has a magicLevel of \"Very",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. Response to the instruction:",
            "ex:CreatureU a ex:MythicalCreature. ```json",
            "ex:CreatureU a ex:MythicalCreature. Response: ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response generated based on the fact that \"Glimmerphoenix\" has \"Very High\" magicLevel, which is higher than \"Fluffdragon's\" \"High\" magicLevel.",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: Based on the given RDF data, the mythical creature with the highest ex:magicLevel is ex:CreatureU, which has a magicLevel of \"Very High\". The instruction",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:",
            "ex:CreatureU a ex:MythicalCreature. Response based on the provided data, where \"Glimmerphoenix\" has a magicLevel of \"Very High\", which is higher than \"Fluffdragon's\" magicLevel of \""
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. Response to the instruction:",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:",
            "ex:CreatureU a ex:MythicalCreature. To identify which `ex:MythicalCreature` has the highest `ex:magicLevel`, we can examine the provided data:",
            "ex:CreatureU a ex:MythicalCreature. To clarify, the `ex:MythicalCreature` with the highest `ex:magicLevel` is `ex:CreatureU` based on the given data where `ex:Creature",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. To determine the creature with the highest `ex:magicLevel`, we analyze the provided information:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ```xml",
            "ex:CreatureU a ex:MythicalCreature. The Glimmerphoenix has the highest ex:magicLevel. To match the example format requested, we can say:",
            "ex:CreatureU a ex:MythicalCreature. To determine which creature has the highest `ex:magicLevel`, we examine the given data:"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ```markdown",
            "ex:CreatureU a ex:MythicalCreature. To determine which creature lives in the habitat with the highest temperature, we need to compare the temperatures of the habitats. The provided RDF data includes the following information about habitats and their temperatures:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response: ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` The response correctly identifies the creature that lives in the habitat with the highest temperature. Here\u2019s the appropriate RDF triple:",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: The question asks which creature lives in the habitat with the highest temperature. By comparing the two habitats, we can see that ex:HabitatA has a temperature of \"Hot",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ```",
            "ex:CreatureU a ex:MythicalCreature. ```",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ```markdown"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response based on the data provided, HabitatA has the highest temperature (\"Hot\"), and CreatureU lives in HabitatA. Therefore, CreatureU lives in the habitat with the highest temperature. ",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: In the provided RDF data, the habitat with the highest temperature is \"Sunfire Desert,\" which has a temperature of \"Hot.\" The creature that lives in this habitat is \"",
            "ex:CreatureU a ex:MythicalCreature. Response based on the temperature of habitats, HabitatA has \"Hot\" temperature and HabitatL has \"Cold\" temperature. Therefore, CreatureU lives in the habitat with the highest temperature. ",
            "ex:CreatureU a ex:MythicalCreature. The Sunfire Desert, denoted as ex:HabitatA, has the highest temperature, which is \"Hot\". Therefore, the creature living in this habitat is ex:CreatureU.",
            "ex:CreatureU a ex:MythicalCreature. ```json",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: The Sunfire Desert, which is ex:HabitatA, has a temperature described as \"Hot\". Glimmerphoenix, ex:CreatureU, resides in this"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ```markdown",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. To identify the creature that lives in the habitat with the highest temperature, we first observe the given data and note the temperature of each habitat:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. To determine which creature lives in the habitat with the highest temperature, we need to first identify the temperature values of the different habitats. From the given data, we can see that:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. Response | Explanation",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. The ex:HabitatA, which is the habitat of ex:CreatureU, has the highest temperature of \"Hot\". Thus, ex:CreatureU lives in the ex:Habitat",
            "ex:CreatureU a ex:MythicalCreature. ### Instruction:",
            "ex:CreatureU a ex:MythicalCreature. Response Explanation: Based on the provided RDF data, the ex:Habitat with the highest ex:temperature is ex:HabitatA, which has a temperature of \"Hot\". The ex",
            "ex:CreatureU a ex:MythicalCreature. To determine which mythical creature lives in the habitat with the highest temperature, we compare the temperatures of the habitats:",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. The Sunfire Desert has the highest temperature, and Glimmerphoenix lives there. To adhere to the format requested, we are focusing on the creature concept.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. To determine the answer, we analyze the provided data and find that HabitatA has the highest temperature described as \"Hot\", and CreatureU lives in this habitat. Therefore, the creature that lives",
            "ex:CreatureU a ex:MythicalCreature. The Sunfire Desert has the highest temperature, and CreatureU lives in the Sunfire Desert. Response: ex:CreatureU a ex:MythicalCreature. ### Response:",
            "ex:CreatureU a ex:MythicalCreature. Response: ex:CreatureU a ex:MythicalCreature. ",
            "ex:CreatureU a ex:MythicalCreature. ```xml",
            "ex:CreatureU a ex:MythicalCreature. To determine which mythical creature lives in the habitat with the highest temperature, we need to compare the temperatures of both habitats:",
            "ex:CreatureU a ex:MythicalCreature. The Sunfire Desert has the highest temperature among the given habitats, and CreatureU lives in the Sunfire Desert. Response structure adheres to the example provided.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. To determine the creature that lives in the habitat with the highest temperature, we compare the temperatures provided:",
            "ex:CreatureU a ex:MythicalCreature. Response based on the fact that ex:HabitatA has the highest temperature \"Hot\" compared to ex:HabitatL which has \"Cold\". Therefore, the creature living in the habitat",
            "ex:CreatureU a ex:MythicalCreature. Response: ex:CreatureU a ex:MythicalCreature. "
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature. ```markdown",
            "ex:CreatureU a ex:MythicalCreature. ```yaml",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` The `ex:HabitatA` has the highest `ex:temperature` value of \"Hot\", and the `ex:MythicalCreature` that lives in `ex",
            "ex:CreatureU a ex:MythicalCreature. ```xml",
            "ex:CreatureU a ex:MythicalCreature. The ex:Habitat with the highest temperature is ex:HabitatA, which is the habitat of ex:CreatureU. Therefore, ex:CreatureU lives in the habitat with the",
            "ex:CreatureU a ex:MythicalCreature. ``` ``` ",
            "ex:CreatureU a ex:MythicalCreature. ```markdown",
            "ex:CreatureU a ex:MythicalCreature. The ex:Habitat with the highest ex:temperature is ex:HabitatA, and ex:CreatureU lives in ex:HabitatA. Therefore, ex:CreatureU is"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. To confirm, the RDF triple that matches the name \"Cloudy Peaks\" is:",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ```json",
            "ex:HabitatL a ex:Habitat. To explicitly answer the question, we can directly provide the required RDF triple:",
            "ex:HabitatL a ex:Habitat. Response: ",
            "ex:HabitatL a ex:Habitat. To complete the request, here is the appropriate RDF triple:",
            "ex:HabitatL a ex:Habitat. To respond to the instruction accurately, the provided RDF triple should match the context of the question, which is about identifying the habitat with the name \"Cloudy Peaks.\"",
            "ex:HabitatL a ex:Habitat. To ensure the response is clear and directly answers the question, we have used the provided prefix 'ex:' to refer to the given RDF data and the specific instance 'ex:HabitatL'"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. You can verify this from the provided RDF data, where it explicitly states:",
            "ex:HabitatL a ex:Habitat. ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ``` ```",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. To ensure the answer is clear and directly addresses the query, the triple provided states that the habitat with the name \"Cloudy Peaks\" is represented by the concept \"ex:HabitatL\"."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. To directly answer the question, the habitat with the name \"Cloudy Peaks\" is linked to the resource `ex:HabitatL` in the provided RDF data, which is identified as an",
            "ex:HabitatL a ex:Habitat. To directly answer the question, the habitat with the name \"Cloudy Peaks\" is referenced by the IRI `ex:HabitatL` in the provided RDF data. The example provided in",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. Response Explanation: The task was to identify the habitat that has the name \"Cloudy Peaks\" and then provide an RDF triple that expresses this fact. From the given RDF data, the habitat with",
            "ex:HabitatL a ex:Habitat. Response"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. The response correctly identifies the habitat with the name \"Cloudy Peaks\" by providing an RDF triple that states the concept of the habitat.",
            "ex:HabitatL a ex:Habitat. To validate this response, you can check the given RDF data where `ex:HabitatL` is explicitly stated to have `dc:name \"Cloudy Peaks\"`:",
            "ex:HabitatL a ex:Habitat. To clearly match the instruction, the response should be:",
            "ex:HabitatL a ex:Habitat. ``` ``` ```{=ex:HabitatL a ex:Habitat.}``` The correct RDF triple to answer the question is:",
            "ex:HabitatL a ex:Habitat. Response: ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. To identify the habitat with the name \"Cloudy Peaks,\" we look at the provided data and find that:",
            "ex:HabitatL a ex:Habitat. To complete the request, the response identifies the specific habitat with the given name, represented in RDF as:",
            "ex:HabitatL a ex:Habitat. The Cloudy Peaks habitat is represented by the concept ex:HabitatL in the given RDF data, which has the dc:name \"Cloudy Peaks\". This can be identified by the line in",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. ``` ```",
            "ex:HabitatL a ex:Habitat. To clarify, the response identifies the RDF concept that represents the habitat with the name \"Cloudy Peaks\" based on the provided data. The concept is `ex:HabitatL`. Therefore,",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. To break this down, the query asked for the habitat with the name \"Cloudy Peaks.\" The RDF data provided specifies that ex:HabitatL has the dc:name \"Cloudy Peaks,\"",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ``` ```markdown",
            "ex:HabitatL a ex:Habitat. ``` ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat. To ensure the response is clear and meets the requirements, the exact triple is:",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. To ensure the response is precise and adheres to the structure requested, here is the correct triple:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. To clearly identify the habitat with the name \"Cloudy Peaks\", the response is structured to match the example provided, using the subject and predicate from the input data.",
            "ex:HabitatL a ex:Habitat. Response based on the dc:name \"Cloudy Peaks\" property, which is associated with ex:HabitatL in the given data.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ``` ```markdown"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v1",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. Response Explanation: The RDF data provided states that the habitat with the name \"Cloudy Peaks\" is represented by the concept ex:HabitatL. Thus, the correct response is to return the",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. You can verify this by checking that ex:HabitatL is linked to the name \"Cloudy Peaks\" in the given RDF data.",
            "ex:HabitatL a ex:Habitat. Response: ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v2",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ``` ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. Response:",
            "ex:HabitatL a ex:Habitat. Response:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. To provide a more precise and complete answer based on the instruction, the correct response should be:",
            "ex:HabitatL a ex:Habitat. Response:",
            "ex:HabitatL a ex:Habitat. Response:"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v3",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. To clearly indicate the correct answer, the structure should match the provided example, so the response is:",
            "ex:HabitatL a ex:Habitat. To be more precise and align with the instruction, the response should directly refer to the habitat with the name \"Cloudy Peaks\":",
            "ex:HabitatL a ex:Habitat. The response indicates that the habitat concept with the name \"Cloudy Peaks\" is identified as ex:HabitatL.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. The name of this habitat is \"Cloudy Peaks\". To directly answer the question with the specified format, the correct response is:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. The response directly identifies the habitat with the name \"Cloudy Peaks\" as per the given RDF data.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v4",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. To further clarify, the correct triple indicating which habitat has the name \"Cloudy Peaks\" is:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. To match the structure of the example, the response is directly stating which habitat is referred to by the name \"Cloudy Peaks.\"",
            "ex:HabitatL a ex:Habitat. You're correct in your response. The habitat that has the name \"Cloudy Peaks\" is represented by the RDF triple:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ### Instruction:"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v5",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. Response explanation: The question asks for the habitat that has the name \"Cloudy Peaks\". From the provided RDF data, we can see that the habitat with this name is linked to ex:Habit",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. Response Explanation:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. To validate this response, you can compare it with the given RDF data to confirm that the habitat with the name \"Cloudy Peaks\" is correctly identified. The correct answer is provided in the given",
            "ex:HabitatL a ex:Habitat. Response Explanation:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v6",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. To directly answer the question with the requested format:",
            "ex:HabitatL a ex:Habitat. Response based on the provided RDF data, the habitat with the name \"Cloudy Peaks\" is identified by the concept ex:HabitatL. Therefore, the correct triple is ex:Habitat",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. Response: ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. To clearly and concisely provide the answer in the required format, the correct response would be:",
            "ex:HabitatL a ex:Habitat. To clearly state the answer in the expected format, it would be:",
            "ex:HabitatL a ex:Habitat. Response with the correct information.",
            "ex:HabitatL a ex:Habitat. The provided RDF data describes the habitat \"Cloudy Peaks\" with the identifier `ex:HabitatL`. Therefore, the correct response is the triple that identifies `ex:HabitatL`",
            "ex:HabitatL a ex:Habitat. Response: ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v7",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. Response to the instruction:",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. To directly answer the question and provide the required RDF triple, the response should be:",
            "ex:HabitatL a ex:Habitat. To match the format and provide the correct answer based on the given RDF data, the response should be:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. Response completed. The habitat with the name \"Cloudy Peaks\" is identified by the concept ex:HabitatL. This triple indicates that ex:HabitatL is a habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v8",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat. ``` ",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. The response indicates that the habitat concept with the name \"Cloudy Peaks\" is identified by the URI ex:HabitatL. Note that there was a typo in the original RDF data where the",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. ### Instruction:",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat. ```markdown",
            "ex:HabitatL a ex:Habitat. ",
            "ex:HabitatL a ex:Habitat. "
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes. The given RDF data includes \"ex:Tigris rdfs:subClassOf ex:Tiger,\" which directly states the relationship. Therefore, it can be inferred that \"ex:Tigris rdfs:subClassOf ex:Tiger\"",
            "Yes.",
            "Yes. The given RDF data directly states that ex:Tigris rdfs:subClassOf ex:Tiger, so this inference can be made. ",
            "Yes. The given RDF data directly states that \"ex:Tigris rdfs:subClassOf ex:Tiger,\" so this inference is directly supported by the data. There is no need for any additional reasoning or inference beyond what is explicitly stated.",
            "Yes. The given RDF data explicitly states that \"ex:Tigris rdfs:subClassOf ex:Tiger.\" Therefore, it can be directly inferred that \"ex:Tigris rdfs:subClassOf ex:Tiger.\" ",
            "Yes. The given RDF data explicitly states that \"ex:Tigris rdfs:subClassOf ex:Tiger.\" Therefore, it can be directly inferred that \"ex:Tigris rdfs:subClassOf ex:Tiger.\" No additional reasoning",
            "Yes. Based on the given RDF data, the statement \"ex:Tigris rdfs:subClassOf ex:Tiger\" is directly provided. Therefore, it can be inferred. ",
            "Yes. The RDF data provided explicitly states that \"ex:Tigris rdfs:subClassOf ex:Tiger,\" so it can be directly inferred. However, to ensure clarity and accuracy, one should note that this is a direct inference from the",
            "Yes. Based on the given RDF data, \"ex:Tigris rdfs:subClassOf ex:Tiger\" is a direct inference from the provided information. The RDF data clearly shows that \"ex:Tigris\" is a subclass of \"",
            "Yes. The RDF data provided explicitly states that ex:Tigris rdfs:subClassOf ex:Tiger. Therefore, it can be inferred that \"ex:Tigris rdfs:subClassOf ex:Tiger\" is true. "
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes. The RDF data explicitly states that \"ex:Tigris rdfs:subClassOf ex:Tiger.\" There is no need for inference; the relationship is directly provided in the data. ",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes. The RDF data explicitly states that \"ex:Tigris rdfs:subClassOf ex:Tiger,\" so it can be inferred that this relationship holds. Example response: Yes. ",
            "Yes. The RDF data provided directly states that \"ex:Tigris rdfs:subClassOf ex:Tiger.\" Therefore, it can be inferred that this relationship holds true. ",
            "No. The correct statement based on the given RDF data is \"ex:Tigris rdfs:subClassOf ex:Tiger,\" but the question asks if it can be inferred that \"ex:Tigris rdfs:subClassOf ex:T",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes. The provided RDF data includes the statements `ex:Tigris rdfs:subClassOf ex:Tiger` and `ex:Tiger rdfs:subClassOf ex:Cat`. Therefore, it can be inferred that `ex:Tigr",
            "Yes. The given RDF data states that \"ex:Tiger rdfs:subClassOf ex:Cat\" and \"ex:Tigris rdfs:subClassOf ex:Tiger\". By transitivity, \"ex:Tigris rdfs:",
            "Yes. The RDF data given indicates that \"ex:Tigris rdfs:subClassOf ex:Tiger\" directly, as it is explicitly stated in the provided data. There is no need for inference in this case. ",
            "Yes. The provided RDF data indicates that \"ex:Tiger rdfs:subClassOf ex:Cat\" and \"ex:Tigris rdfs:subClassOf ex:Tiger\". Therefore, it can be inferred that \"ex:Tigris",
            "Yes.",
            "Yes. The RDF data provided shows that ex:Tiger is a subclass of ex:Cat, and ex:Tigris is also a subclass of ex:Tiger. Therefore, it can be inferred that \"ex:Tigris rdfs:subClass",
            "Yes. The given RDF data provides the following relationships:",
            "Yes. Based on the given RDF data, we can see that \"ex:Tiger rdfs:subClassOf ex:Cat\" and \"ex:Tigris rdfs:subClassOf ex:Tiger\". By transitivity, we can infer",
            "Yes. The RDF data provided includes the statements `ex:Tiger rdfs:subClassOf ex:Cat` and `ex:Tigris rdfs:subClassOf ex:Tiger`. According to the transitive property of subClassOf,",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Fictional Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.",
            "Yes. Based on the provided RDF data, we can see that:",
            "Yes.",
            "Yes. The given RDF data explicitly states that \"ex:SomeL rdfs:subClassOf ex:SomeC\". Therefore, it can be directly inferred that \"ex:SomeL rdfs:subClassOf ex:SomeC\". The",
            "Yes.",
            "Yes.",
            "Yes. The given information shows that ex:SomeL is a subclass of ex:SomeC directly, so this inference is correct. The other information about ex:SomeM and ex:SomeK being subclasses of ex:SomeA is not relevant",
            "Yes.",
            "Yes. The given data shows a chain of subclass relationships: ex:SomeK rdfs:subClassOf ex:SomeA, ex:SomeC rdfs:subClassOf ex:SomeM, and ex:SomeM rdfs:",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Fictional Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes. The inference directly follows from the given RDF data where \"ex:SomeL rdfs:subClassOf ex:SomeC\" is explicitly stated. The other statements do not affect this specific inference. ",
            "Yes.",
            "Yes. The inference is directly stated in the provided RDF data: `ex:SomeL rdfs:subClassOf ex:SomeC`. No additional reasoning is required as this is a direct statement in the provided data. The other statements in the",
            "Yes.",
            "Yes.",
            "Yes. The inference can be made directly from the given data because the statement \"ex:SomeL rdfs:subClassOf ex:SomeC\" is explicitly provided. The other statements (ex:SomeC rdfs:subClassOf ex",
            "Yes. The inference \"ex:SomeL rdfs:subClassOf ex:SomeC\" can be made from the given RDF data because it is directly stated in the data. The relationships provided form a chain where \"ex:SomeL\"",
            "Yes. The inference \"ex:SomeL rdfs:subClassOf ex:SomeC\" can be directly derived from the given RDF data, as it is explicitly stated. The chain of subClassOf relationships confirms this. ### Response:",
            "Yes.",
            "Yes. The given RDF data shows a chain of subClassOf relationships where ex:SomeL is a subclass of ex:SomeC through ex:SomeM and ex:SomeA. Therefore, it can be inferred that \"ex:SomeL"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Fictional Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes. The inference can be made based on the transitivity property of subClassOf. Since ex:SomeL is a subclass of ex:SomeC through ex:SomeC (ex:SomeL rdfs:subClassOf ex:Some",
            "Yes.",
            "Yes.",
            "Yes. The inference can be made based on the transitive property of subClassOf. Given:",
            "Yes.",
            "Yes.",
            "Yes. The given RDF data states that ex:SomeL is a subclass of ex:SomeC through the intermediate classes ex:SomeC and ex:SomeM. Therefore, it can be inferred that \"ex:SomeL rdfs:sub"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes. Given the provided RDF data, we can infer the following relationships:",
            "Yes.",
            "Yes. The given RDF data implies that ex:Tigris is a subclass of ex:Tiger (ex:Tigris rdfs:subClassOf ex:Tiger), and ex:Tiger is a subclass of ex:Cat (ex:Tiger r",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes. Based on the given RDF data, we can infer the following class hierarchy:",
            "Yes.",
            "Yes. Based on the given RDF data, we can infer that \"ex:Tigris rdfs:subClassOf ex:Cat\" because \"ex:Tigris rdfs:subClassOf ex:Tiger\" and \"ex:Tiger r"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "No.",
            "No.",
            "No. The given data shows that ex:Tigris is a subclass of ex:Tiger (ex:Tigris rdfs:subClassOf ex:Tiger) and ex:Tiger is a subclass of ex:Cat (ex:Tiger rdfs",
            "No.",
            "No.",
            "No. The inference \"ex:Tigris rdfs:subClassOf ex:Cat\" cannot be directly derived from the given RDF data. The data only states that ex:Tigris is a subclass of ex:Tiger and ex:Tiger is",
            "No.",
            "No.",
            "No. The given RDF data does not directly state that \"ex:Tigris rdfs:subClassOf ex:Cat\". It only states that \"ex:Tigris rdfs:subClassOf ex:Tiger\" and \"ex:Tiger",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes. Based on the provided RDF data, we can infer the following chain of subClassOf relationships:",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "No.",
            "Yes. No.",
            "No. Based on the given data, we only have \"ex:Tigris rdfs:subClassOf ex:Tiger\" and \"ex:Tiger rdfs:subClassOf ex:Cat\". The transitive property does not directly allow us",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 8
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No.",
            "No. The provided information does not directly state or logically infer that \"ex:SomeL rdfs:subClassOf ex:SomeM\". While it is true that \"ex:SomeL rdfs:subClassOf ex:SomeC\"",
            "No. The given information does not provide a direct or transitive relationship that allows us to infer \"ex:SomeL rdfs:subClassOf ex:SomeM\". While we know \"ex:SomeC rdfs:subClassOf ex",
            "No.",
            "No.",
            "No. No inference can be made directly from the given information that \"ex:SomeL rdfs:subClassOf ex:SomeM\" is true based on the transitivity of rdfs:subClassOf. The given information only establishes that",
            "No. To infer that \"ex:SomeL rdfs:subClassOf ex:SomeM\", we would need a direct or transitive relationship between ex:SomeM and ex:SomeL, which is not provided in the given data.",
            "No. The given information does not directly or transitively imply that \"ex:SomeL rdfs:subClassOf ex:SomeM\". While we know \"ex:SomeL rdfs:subClassOf ex:SomeC\" and \"",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No.",
            "No. While it is true that ex:SomeL is a subclass of ex:SomeC and ex:SomeC is a subclass of ex:SomeM, the direct relationship between ex:SomeL and ex:SomeM is not given in",
            "No.",
            "No.",
            "No.",
            "No. While \"ex:SomeL rdfs:subClassOf ex:SomeC\" and \"ex:SomeC rdfs:subClassOf ex:SomeM\" are given, there is no direct information provided that allows us to infer",
            "No.",
            "No.",
            "No. While it can be inferred that \"ex:SomeL rdfs:subClassOf ex:SomeC\" and \"ex:SomeC rdfs:subClassOf ex:SomeM\", it cannot be directly inferred that \"ex:",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No. While we can infer the following relationships:",
            "No.",
            "No. While it is true that ex:SomeL is a subclass of ex:SomeC, and ex:SomeC is a subclass of ex:SomeM, the transitivity of rdfs:subClassOf does not hold in the same",
            "No.",
            "No. The given information does not directly state that \"ex:SomeL rdfs:subClassOf ex:SomeM\". While we know that \"ex:SomeL rdfs:subClassOf ex:SomeC\" and \"ex:",
            "No.",
            "No.",
            "No.",
            "Yes.",
            "No. The given information does not directly support the inference that \"ex:SomeL rdfs:subClassOf ex:SomeM\". While ex:SomeL is a subclass of ex:SomeC, and ex:SomeC is a subclass"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes. Based on the given RDF data, we can infer the following relationships:",
            "Yes.",
            "Yes.",
            "Yes. The inference can be made using the transitive property of the \"rdfs:subClassOf\" relation. Given that ex:Tiger rdfs:subClassOf ex:Cat and ex:Cat rdfs:subClassOf ex:M",
            "Yes.",
            "Yes. The inference can be made by following the subClassOf relationships in the given RDF data. Since ex:Tigris rdfs:subClassOf ex:Tiger and ex:Tiger rdfs:subClassOf ex:Cat and ex:",
            "Yes.",
            "Yes. The inference \"ex:Tigris rdfs:subClassOf ex:Mammal\" can be made based on the given RDF data. Here's the reasoning:",
            "Yes.",
            "Yes. To infer that \"ex:Tigris rdfs:subClassOf ex:Mammal\", we follow the class hierarchy:"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "No. While it is true that \"ex:Tigris rdfs:subClassOf ex:Cat\" and \"ex:Cat rdfs:subClassOf ex:Mammal\", the direct inference to \"ex:Tigris rdfs:",
            "No.",
            "No. Based on the provided information, we can infer that ex:Tigris is a subclass of ex:Cat, and ex:Cat is a subclass of ex:Mammal, but we cannot directly infer that ex:Tigris is a subclass",
            "No.",
            "No.",
            "No. While it is true that ex:Tigris rdfs:subClassOf ex:Cat and ex:Cat rdfs:subClassOf ex:Mammal, the direct inference that ex:Tigris rdfs:subClassOf ex",
            "No.",
            "No.",
            "No. ",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes.",
            "Yes. The inference can be made using the transitivity property of subClassOf. Since ex:Tiger rdfs:subClassOf ex:Cat and ex:Tigris rdfs:subClassOf ex:Tiger, it follows that ex:T",
            "Yes.",
            "Yes. Based on the given RDF data, we have the following chain of subclass relationships:",
            "Yes. Based on the provided RDF data, we can infer the following relationships:",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes. No.",
            "Yes. No.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.",
            "Yes.",
            "Yes. The transitive property of \"rdfs:subClassOf\" allows us to infer that ex:SomeL is a subclass of ex:SomeA, since ex:SomeL is a subclass of ex:SomeC, which is a",
            "Yes.",
            "Yes. ```{python}# Given the RDF data, we can infer the following chain of subclass relationships:ex:SomeL rdfs:subClassOf ex:SomeC (directly stated)ex:SomeC rdfs:subClass",
            "Yes.",
            "Yes.",
            "Yes. To infer \"ex:SomeL rdfs:subClassOf ex:SomeA\", we can use the transitive property of subClassOf. Given:",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes. The inference can be made through the transitive property of the rdfs:subClassOf relationship. Since ex:SomeL is a subclass of ex:SomeC and ex:SomeC is a subclass of ex:SomeM, and",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes. To infer \"ex:SomeL rdfs:subClassOf ex:SomeA\", we can follow the transitive property of the subClassOf relationship. Given:",
            "Yes. To determine if \"ex:SomeL rdfs:subClassOf ex:SomeA\" can be inferred from the given RDF data, we follow these logical steps:",
            "Yes. The inference can be made by chaining the subclass relationships given in the RDF data:"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative chain Inference Prompt v1",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No. No inference can be made from the given data that would allow us to conclude that \"ex:Tigris rdfs:subClassOf ex:Canis\". The data only shows that \"ex:Tigris\" is a subclass of \"",
            "No.",
            "No.",
            "No.",
            "No.",
            "No. The given RDF data does not provide any direct or transitive relationship between ex:Tigris and ex:Canis. While ex:Tigris is a subClassOf ex:Tiger and ex:Tiger is a subClassOf ex:",
            "No.",
            "No. To infer that \"ex:Tigris rdfs:subClassOf ex:Canis\" would require a chain of subClassOf relationships that directly connects ex:Tigris to ex:Canis. However, the given data only shows",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative chain Inference Prompt v2",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No. Based on the given RDF data, Tigris is a subclass of Tiger, Tiger is a subclass of Cat, and Cat is a subclass of Mammal. Canis is also a subclass of Mammal. However, there is",
            "No.",
            "No. Based on the given RDF data, \"ex:Tigris rdfs:subClassOf ex:Mammal\" and \"ex:Canis rdfs:subClassOf ex:Mammal\" can be inferred, but there is no",
            "No.",
            "No. To infer that \"ex:Tigris rdfs:subClassOf ex:Canis\" would mean that Tigris is a subclass of Canis, which is not the case given the provided RDF data. The data only shows that",
            "No. The provided RDF data shows that ex:Tigris is a subclass of ex:Tiger, ex:Tiger is a subclass of ex:Cat, and ex:Cat is a subclass of ex:Mammal. Similarly, ex:Canis",
            "No. Based on the given RDF data, ex:Tigris is a subclass of ex:Tiger, ex:Tiger is a subclass of ex:Cat, and ex:Cat is a subclass of ex:Mammal. However, ex:Can",
            "No. The given RDF data does not provide a direct or indirect inference that \"ex:Tigris rdfs:subClassOf ex:Canis\". Tigris is a subclass of Tiger, Tiger is a subclass of Cat, and Canis",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative chain Inference Prompt v3",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No. Based on the given RDF data, we have the following relationships:",
            "No. The given RDF data does not provide a direct or indirect relationship between ex:Tigris and ex:Canis. While ex:Tigris is a subClassOf ex:Tiger and ex:Tiger is a subClassOf ex:Cat",
            "No.",
            "No.",
            "No. To infer that \"ex:Tigris rdfs:subClassOf ex:Canis\" would require a direct or transitive relationship between ex:Tigris and ex:Canis through the hierarchy, which is not present in the given",
            "No.",
            "No. The given RDF data does not provide any direct or transitive relationship that would allow inferring \"ex:Tigris rdfs:subClassOf ex:Canis\". From the data, we know:",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v1",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No. The given RDF data does not provide a direct or inferred relationship that \"ex:Cat rdfs:subClassOf ex:Tigris\". The relationships given are \"ex:Cat rdfs:subClassOf ex:Mammal\", \"",
            "No.",
            "No. The given RDF data does not provide a direct or transitive inference that \"ex:Cat rdfs:subClassOf ex:Tigris.\" The relationships given are:",
            "No. Based on the given RDF data, we can infer a hierarchy such as:",
            "No. The given RDF data does not provide a direct or transitive relationship that would allow us to infer that \"ex:Cat rdfs:subClassOf ex:Tigris\". The relationships provided are:",
            "No. The given RDF data does not support the inference that \"ex:Cat rdfs:subClassOf ex:Tigris\". The relationships provided indicate a hierarchy where ex:Tigris is a subClassOf ex:Tiger, ex:Tiger",
            "No. The given RDF data does not support the inference that \"ex:Cat rdfs:subClassOf ex:Tigris\". The relationships provided indicate that ex:Tigris is a subClassOf ex:Tiger, ex:Tiger is a",
            "No.",
            "No.",
            "No. Based on the given RDF data, the relationship is that ex:Cat is a subclass of ex:Mammal, and ex:Tigris is a subclass of ex:Tiger, which is a subclass of ex:Cat. However, there"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v2",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No. The given RDF data defines a hierarchical relationship where ex:Tiger is a subclass of ex:Cat, ex:Mammal, and ex:Canis, but it does not define any direct or indirect relationship between ex:Cat and ex:T",
            "No.",
            "No. The given data shows that ex:Tiger is a subclass of ex:Tigris, and ex:Cat is a subclass of ex:Tiger, but there is no direct or transitive relationship inferred to make \"ex:Cat rdfs:",
            "No.",
            "No.",
            "No. The given data does not allow for the inference that \"ex:Cat rdfs:subClassOf ex:Tigris\". The data only shows that \"ex:Tiger rdfs:subClassOf ex:Cat\" and \"ex:T",
            "No. The RDF data provided establishes a hierarchical relationship where ex:Tiger is a subclass of ex:Mammal, ex:Cat is a subclass of ex:Mammal, ex:Tigris is a subclass of ex:Tiger, but there is",
            "No. The given RDF data does not establish a direct or transitive relationship from \"ex:Cat\" to \"ex:Tigris\". \"ex:Tigris\" is a subclass of \"ex:Tiger\", and \"ex:Tiger\" is",
            "No. The given RDF data does not provide a direct or transitive relationship from ex:Cat to ex:Tigris. The relationships given are:",
            "No. The given RDF data shows a hierarchical relationship where ex:Tiger is a subclass of ex:Cat, ex:Tigris is a subclass of ex:Tiger, and ex:Cat is a subclass of ex:Mammal. However, there"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v3",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No. The given RDF data does not provide a direct or transitive relationship between ex:Cat and ex:Tigris. The relationships given are:",
            "No. The given RDF data does not provide a direct or transitive relationship between ex:Cat and ex:Tigris. While ex:Cat is a subclass of ex:Mammal and ex:Tiger is a subclass of ex:Cat, there",
            "No. The given RDF data does not provide a direct or indirect inference that \"ex:Cat rdfs:subClassOf ex:Tigris\". The data shows that \"ex:Cat\" is a subclass of \"ex:Mammal\" and",
            "No.",
            "No. The given RDF data does not provide a direct or transitive relationship between \"ex:Cat\" and \"ex:Tigris\" that would allow us to infer \"ex:Cat rdfs:subClassOf ex:Tigris.\" The",
            "No.",
            "No.",
            "No.",
            "No.",
            "No. The given RDF data does not provide a direct or transitive relationship between ex:Cat and ex:Tigris that would allow us to infer ex:Cat rdfs:subClassOf ex:Tigris. The data only shows that ex"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v1",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No.",
            "No. The given RDF data does not provide any information about the class \"ex:Dog\". While \"ex:Cat\" and \"ex:Canis\" (which likely represents \"ex:Canis lupus\", the genus for dogs) are",
            "No. The given RDF data does not provide any information about the class \"ex:Dog\". While it is stated that \"ex:Cat\" and \"ex:Canis\" (which could be a typo for \"ex:Canis lupus",
            "No. The given RDF data does not provide any information about \"ex:Dog\" being a subclass of \"ex:Mammal\". The data only describes the relationship between \"ex:Cat\", \"ex:Canis\" (which could be a",
            "No. The given RDF data does not provide any information about ex:Dog being a subclass of ex:Mammal. It only states relationships between ex:Cat, ex:Mammal, ex:Canis, and ex:Tiger, but does",
            "No. The RDF data does not provide any information about \"ex:Dog\" being a subclass of \"ex:Mammal\". The given data only establishes that \"ex:Cat\" and \"ex:Canis\" (which presumably refers to dogs",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v2",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No. The given RDF data does not provide any information about the class \"ex:Dog\". There is only information about the classes \"ex:Tiger\", \"ex:Cat\", \"ex:Mammal\", and \"ex:Canis\", but",
            "No.",
            "No.",
            "No. The RDF data provided does not include any direct or inferred relationship stating that \"ex:Dog rdfs:subClassOf ex:Mammal\". The data only establishes that \"ex:Canis rdfs:subClassOf ex:Mamm",
            "No.",
            "No. The RDF data provided does not contain any information about \"ex:Dog\" being a subclass of \"ex:Mammal\". It only provides the relationship for \"ex:Canis\" which is not related to \"ex:Dog\" in"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v3",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "No.",
            "No. The RDF data provided does not contain any information about the class relationship of \"ex:Dog\" to \"ex:Mammal\". The given data only describes the relationships between \"ex:Canis\", \"ex:Mammal\", \"ex",
            "No.",
            "No.",
            "No.",
            "No.",
            "No. The given RDF data does not provide any information about the relationship between ex:Dog and ex:Mammal. The provided data only describes the relationships between ex:Canis, ex:Tiger, ex:Cat, and ex:Mammal",
            "No. The given RDF data does not provide any information about \"ex:Dog\" or its relationship to \"ex:Mammal\". The data only establishes the relationship for \"ex:Canis\", \"ex:Tiger\", and \"ex:Cat",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v1",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No. The given RDF data indicates that \"ex:Tigris\" is a subclass of \"ex:Tiger\", but it does not indicate that \"ex:Tiger\" is a superclass of \"ex:Tigris\". The relationship between classes and their",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v2",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No.",
            "No.",
            "No. The given RDF data indicates that ex:Tigris is a subclass of ex:Tiger, but not the reverse. Therefore, we cannot infer that \"ex:Tiger rdfs:superClassOf ex:Tigris.\" The relationship is only",
            "No.",
            "No. The RDF data provided indicates that ex:Tigris is a subclass of ex:Tiger (ex:Tigris rdfs:subClassOf ex:Tiger), but it does not imply that ex:Tiger is a superclass of ex:Tigr",
            "No.",
            "No. The given RDF data shows that \"ex:Tigris rdfs:subClassOf ex:Tiger\", which means that every ex:Tigris is an ex:Tiger, but it does not imply that every ex:Tiger is an ex",
            "No. Based on the given data, \"ex:Tigris rdfs:subClassOf ex:Tiger\" is true, meaning that every instance of ex:Tigris is also an instance of ex:Tiger. However, this does not imply",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v3",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No. The RDF data provided states that ex:Tigris is a subclass of ex:Tiger, not the other way around. Therefore, it cannot be inferred that \"ex:Tiger rdfs:superClassOf ex:Tigris\". The relationship",
            "No. The given RDF data does not support the inference that \"ex:Tiger rdfs:superClassOf ex:Tigris\". The data only states that ex:Tigris is a subclass of ex:Tiger, which is not the same as",
            "No.",
            "No.",
            "No. Based on the given RDF data, \"ex:Tigris\" is a subclass of \"ex:Tiger\", but not the other way around. Therefore, it cannot be inferred that \"ex:Tiger rdfs:superClassOf ex:T",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v1",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Cat rdfs:superClassOf ex:Mammal. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:subClassOf ex:Tigris. ",
            "ex:Tiger rdfs:subClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 5
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v2",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tigris rdfs:subClassOf ex:Tiger. ",
            "ex:Canis rdfs:subClassOf ex:Mammal.",
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tigris rdfs:subClassOf ex:Tiger. The error is that \"Tigris\" is likely intended to be a distinct individual or instance of \"Tiger\", but the given triple states it as a subclass, which would",
            "ex:Tigris rdfs:subClassOf ex:Tiger. The error is that \"Tigris\" is a specific instance or individual, whereas \"Tiger\" is a class. Therefore, it should not be a subclass relationship. It",
            "ex:Canis rdfs:subClassOf ex:Mammal.",
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tiger rdfs:subClassOf ex:Mammal. "
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v3",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:superClassOf ex:Tigris. The triple contains an error as it incorrectly states that ex:Tiger is a superclass of ex:Tigris. Based on the given RDF data, ex:Tigris is a subclass",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. ",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris. The property \"rdfs:superClassOf\" should be used with \"rdfs:subClassOf\" and vice versa. It should be corrected to: ex:Tigris",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris.",
            "ex:Tiger rdfs:superClassOf ex:Tigris."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Error Identification Prompt 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumX ex:rating \"4.5\".",
            "ex:AlbumX ex:rating \"4.5\".",
            "ex:AlbumX a ex:MusicAlbum ; Only return the triple that contains the error.",
            "ex:AlbumX ex:rating \"4.5\" .",
            "ex:AlbumX ex:title \"Jake Odner\".",
            "ex:AlbumX dc:title \"Jake Odner\". The correct syntax should use a blank node or URI for the artist, but here it is incorrectly using a string \"Seamus Finn\" directly. The correct form would be something like ex:Album",
            "ex:AlbumX ex:rating \"4.5\". The rating should be a numerical value without quotes. It should be: ex:AlbumX ex:rating 4.5. ",
            "ex:AlbumX ex:rating \"4.5\". The rating property should be a numerical value without quotes. It should be: ex:AlbumX ex:rating 4.5. ",
            "ex:AlbumX ex:title \"Jake Odner\". ### Instruction:",
            "ex:AlbumX ex:genre \"Rock\" ."
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Error Identification Prompt 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumX ex:rating \"4.5\".",
            "ex:AlbumX ex:rating \"4.5\" .",
            "ex:AlbumX ex:rating \"4.5\".",
            "ex:AlbumX dc:title \"Jake Odner\" ",
            "ex:AlbumX ex:rating \"4.5\" . The rating should be a float or integer, but the syntax used here is a string. It should be written as ex:rating 4.5. ",
            "ex:AlbumX ex:rating \"4.5\".",
            "ex:AlbumX ex:rating \"4.5\".",
            "ex:AlbumX ex:rating \"4.5\".",
            "ex:AlbumX ex:rating \"4.5\".",
            "ex:AlbumX dc:title \"Jake Odner\""
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Error Identification Prompt 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "[ex] . ",
            "[ex] .",
            "[ex] . ",
            "[ex] .",
            "[ex] . ```[ex] . ``` This indicates the missing namespace definition for the custom prefixes used in the provided RDF data. In this case, the custom prefixes `ex:` are used without a corresponding namespace declaration. Adding the namespace definition `[",
            "[ex] .",
            "[ex] .",
            "[ex] . ",
            "[ex] .",
            "[ex] . "
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Error Identification Prompt - less data 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 .",
            "ex:AlbumF ex:rating 4.9 . The provided value \"4.9\" for the property ex:rating is not correctly specified according to RDF syntax. In RDF, numerical values should be represented using the xsd:dataType,",
            "ex:AlbumF ex:rating 4.9 . RDF literals should be enclosed in quotes, so the correct triple would be: ex:AlbumF ex:rating \"4.9\" . However, based on the instruction to return only the"
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Error Identification Prompt - less data 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumM ex:rating \"4.7\" . The 'ex:rating' value should be a literal without quotes around the number, i.e., it should be 'ex:rating 4.7'. However, based on the",
            "ex:AlbumM ex:rating \"4.7\" . The triple uses a numeric literal without a specified datatype, which is a syntax error in RDF. It should be written as `ex:AlbumM ex:rating \"4.7\"",
            "ex:AlbumM ex:rating \"4.7\" .",
            "ex:AlbumM ex:rating \"4.7\" .",
            "ex:AlbumM ex:rating \"4.7\" .",
            "ex:AlbumM ex:rating \"4.7\" . This triple contains a syntax error as the property \"rating\" is not defined in the provided vocabulary, and it should be part of the defined schema or a valid property from a recognized namespace",
            "ex:AlbumM ex:rating \"4.7\".",
            "ex:AlbumM ex:rating \"4.7\" .",
            "ex:AlbumM ex:rating \"4.7\".",
            "ex:AlbumM ex:rating \"4.7\"."
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Error Identification Prompt - less data 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "[ex] . ",
            "[ex] . ",
            "[ex] . ### Instruction:",
            "[ex] . ",
            "[ex] .",
            "[ex] . ``` [ex] . ``` ",
            "[ex] .",
            "[ex] . ```\r",
            "[ex] .",
            "[ex] ."
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums size 1",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. To determine the artist with the highest album rating, we need to look at the RDF data provided. The relevant information is:",
            "ex:ArtistZ a ex:Artist. To determine the artist with the highest album rating, we first look at the provided RDF triples. The relevant information is found in the first triple, which states that the album `ex:AlbumB` has",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating of 5.0 according to the given RDF data. The rating is the only numerical value provided, and it is associated with the artist through",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating of 5.0. Response structure matches the example given. ",
            "ex:ArtistZ a ex:Artist. Response Explanation: The given RDF data indicates that the album \"Beans\" has a rating of \"5.0\". The artist associated with this album is \"Wasa Dog\", represented by the concept \"ex",
            "ex:ArtistZ a ex:Artist. The rating of ex:AlbumB is \"5.0\", which is the highest album rating given in the RDF data, and it is associated with ex:ArtistZ. Therefore, ex:ArtistZ",
            "ex:ArtistZ a ex:Artist. ### Instruction:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums size 2",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response: ex:ArtistZ a ex:Artist. ",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating with \"5.0\". The query asks for the artist concept which is represented by ex:ArtistZ. ### Response:",
            "ex:ArtistZ a ex:Artist. Based on the provided RDF data, the artist \"Wasa Dog\" (ex:ArtistZ) has the highest album rating with a value of \"5.0\". Therefore, the correct response is the",
            "ex:ArtistZ a ex:Artist. ``` ``` ",
            "ex:ArtistZ a ex:Artist. Response to the question: ex:ArtistZ has the highest album rating with a rating of \"5.0\". The query structure is maintained as per the instruction. ### Response:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating of 5.0. ### Instruction:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. The artist \"Wasa Dog\" has the highest album rating with a rating of \"5.0\". The other artist, \"Dane\", has an album rating of \"4.9\"."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums size 4",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. To determine the artist with the highest album rating, we need to identify the highest numerical value for the `ex:rating` property among all the albums. Here's the analysis of the provided data:",
            "ex:ArtistZ a ex:Artist. The artist with the highest album rating is Wasa Dog, whose album \"Beans\" has a rating of 5.0. In the context of the given RDF data, this corresponds to the artist concept",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. Response to the instruction:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ```json"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums size 8",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist. ``` ``` The artist with the highest album rating is ex:ArtistZ. Therefore, the correct RDF triple is:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. ``` ``` The artist with the highest album rating is `ex:ArtistZ`. Therefore, the correct response in RDF triple form is:",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums size 16",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. To verify, ArtistZ's album has the highest rating of 5.0. The query could be refined to extract the artist with the highest rating directly, but based on the provided data, ArtistZ",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist. To clarify, the artist with the highest album rating is \"Wasa Dog\" (ex:ArtistZ), based on the \"Beans\" album with a rating of \"5.0\". The response is",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "Qwen/Qwen2.5-7B-Instruct-GGUF/qwen2.5-7b-instruct-q4_k_m-00001-of-00002.gguf",
        "prompt_name": "Albums size 32",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistA a ex:Artist. The artist \"Dane\" has the highest album rating of 4.9. However, the example structure should be used, so the correct answer is \"ex:ArtistA a ex:Artist.\"",
            "ex:ArtistA a ex:Artist. The artist \"Dane\" from the album \"Sun Newtown\" has the highest album rating of \"4.9\". To match the requested format, we use the artist concept from the album with the highest",
            "ex:ArtistA a ex:Artist. Response: ex:ArtistA a ex:Artist. ",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. The artist \"Dane\" has the highest album rating of 4.9 for the album \"Sun Newtown\".",
            "ex:ArtistA a ex:Artist. ``` ```markdown",
            "ex:ArtistP a ex:Artist. To clarify, the artist with the highest album rating is \"Rocky\" (ex:ArtistP), who has an album with a rating of 3.2. The response is structured as requested with",
            "ex:ArtistD a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist. Given the dataset, ArtistA has the highest album rating with a rating of \"4.9\" for the album \"Sun Newtown\". The query focuses on identifying the artist with the highest rating, and Artist"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "`ex:ArtistZ a ex:Artist .`",
            "```",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist ;",
            "```",
            "```",
            "`ex:ArtistZ a ex:Artist .`",
            "ex:ArtistZ a ex:Artist ;"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "```",
            "`ex:ArtistZ a ex:Artist.`",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "`ex:ArtistZ a ex:Artist.`",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "```"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist.",
            "```",
            "ex:ArtistA a ex:Artist .",
            "`ex:ArtistA a ex:Artist.`",
            "ex:ArtistA a ex:Artist .",
            "`ex:ArtistA a ex:Artist.`",
            "ex:ArtistA a ex:Artist ;"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "`ex:Wasa Dog a ex:Artist.`",
            "ex:Wasa Dog a ex:Artist.",
            "`ex:Wasa Dog a ex:Artist.`",
            "```",
            "```",
            "ex:Wasa Dog a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:Wasa Dog a ex:Artist.",
            "ex:ArtistZ a ex:Artist ;",
            "ex:Wasa Dog a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 1
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:Dane a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistY a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums - Concept Prompt v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "output": [
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist ;",
            "ex:ArtistA a ex:Artist ; dc:name \"Dane\" .",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "```",
            "ex:ArtistA a ex:Artist .",
            "```rdf",
            "ex:ArtistA a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Real Albumn v1",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "`ex:ArtistZ a ex:Artist .`",
            "```",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistF a ex:Artist.",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistA a ex:Artist .",
            "`ex:ArtistA a ex:Artist.`",
            "ex:ArtistA a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Real Albumn v2",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistA a ex:Artist ;",
            "```"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Real Albumn v3",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "output": [
            "`ex:ArtistZ a ex:Artist.`",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "`ex:ArtistZ a ex:Artist.`",
            "ex:ArtistZ a ex:Artist.",
            "`ex:ArtistZ a ex:Artist .`",
            "`ex:ArtistZ a ex:Artist.`"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist.",
            "ex:Dane a ex:Artist.",
            "```",
            "`ex:Dane a ex:Artist.`"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "```",
            "ex:ArtistA a ex:Artist .",
            "`ex:ArtistA a ex:Artist.`",
            "ex:ArtistA a ex:Artist.",
            "`ex:ArtistA a ex:Artist.`",
            "`ex:ArtistA a ex:Artist.`",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "```",
            "ex:ArtistA a ex:Artist .",
            "```",
            "`ex:ArtistA a ex:Artist.`",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "```",
            "ex:ArtistA a ex:Artist."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistD a ex:Artist ;",
            "ex:ArtistD a ex:Artist ;",
            "```",
            "ex:ArtistD a ex:Artist ."
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "```",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "`ex:ArtistA a ex:Artist.`",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist ;"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "output": [
            "ex:ArtistA a ex:Artist.",
            "```",
            "ex:ArtistA a ex:Artist ;",
            "```",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "ex:ArtistA a ex:Artist.",
            "`ex:ArtistA a ex:Artist.`",
            "ex:ArtistA a ex:Artist.",
            "```"
        ],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:Physik a ex:Artist.",
            "ex:ArtistO a ex:Artist ;",
            "`ex:Physik a ex:Artist.`",
            "ex:ArtistO a ex:Artist.",
            "ex:Physik a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist .",
            "```"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "```rdf",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist.",
            "`ex:ArtistO a ex:Artist.`",
            "```",
            "`ex:ArtistO a ex:Artist.`",
            "ex:Physik a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:Physik a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 4
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "```",
            "```",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist ;",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist .",
            "ex:ArtistO a ex:Artist ;",
            "`ex:ArtistO a ex:Artist ;"
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "`ex:ArtistO a ex:Artist.`",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "output": [
            "ex:Physik a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "```rdf",
            "ex:ArtistO a ex:Artist.",
            "ex:ArtistO a ex:Artist.",
            "ex:Physik a ex:Artist.",
            "ex:Physik a ex:Artist."
        ],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "`ex:AlbumB a ex:MusicAlbum.`"
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 9
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "`ex:AlbumB a ex:MusicAlbum.`",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 9
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist Genre - Concept Prompt v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "output": [
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum.",
            "ex:AlbumB a ex:MusicAlbum."
        ],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "`ex:ArtistZ a ex:Artist.`",
            "`ex:ArtistZ a ex:Artist.`",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 8
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "`ex:ArtistZ a ex:Artist.`",
            "ex:ArtistZ a ex:Artist.",
            "`ex:ArtistZ a ex:Artist.`",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "```",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "`ex:ArtistZ a ex:Artist.`",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 9
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "`ex:ArtistZ a ex:Artist.`",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "```",
            "```",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "```",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album of genre \"Pop\" is \"Wasa Dog\".",
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the Artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\". The album is \"Beans\".",
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the artist who made an album of genre \"Pop\" is \"Wasa Dog\".",
            "\"Wasa Dog\"",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the Artist who made an album that was genre \"Pop\" is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the Artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\". The album is \"Beans\".",
            "The artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The name of the artist who made an album that was genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an album that was genre \"Pop\" is Wasa Dog. (Based on the given data, the album was \"Beans\" with artist \"Wasa Dog\")."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The artist who made an ex:MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made a MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an ex:MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made a MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made a MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "\"Wasa Dog\"",
            "The artist who made an ex:MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "\"Wasa Dog\" is the artist who made an ex:MusicAlbum with the genre \"Pop\". Specifically, the album is \"Beans\".",
            "The artist who made a MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made a MusicAlbum with the genre \"Pop\" is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The artist who made an ex:MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an ex:MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "\"Wasa Dog\"",
            "The artist who made an ex:MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an ex:MusicAlbum with the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the ex:Artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\". The specific album is ex:AlbumB.",
            "The artist who made an ex:MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made a MusicAlbum with the genre \"Pop\" is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "output": [
            "The artist who made an ex:MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made a MusicAlbum with the genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\". The resource for this artist is `ex:ArtistZ`.",
            "The artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an ex:MusicAlbum with the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The artist whose MusicAlbum has the genre \"Pop\" is \"Wasa Dog\". The corresponding MusicAlbum is ex:AlbumB.",
            "The artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\".",
            "The dc:name of the artist who made an ex:MusicAlbum that has the ex:genre \"Pop\" is \"Wasa Dog\"."
        ],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "```",
            "`ex:Glimmerphoenix a ex:MythicalCreature.`",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureX a ex:MythicalCreature.",
            "```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "```",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature .",
            "`ex:CreatureU a ex:MythicalCreature.`",
            "```"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 3
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "```",
            "```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "`ex:Glimmerphoenix a ex:MythicalCreature.`",
            "`ex:Glimmerphoenix a ex:MythicalCreature.`",
            "`ex:Glimmerphoenix a ex:MythicalCreature.`",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 4
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "`ex:CreatureU a ex:MythicalCreature.`",
            "`ex:CreatureU a ex:MythicalCreature.`",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 4
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "```",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 9
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "`ex:Glimmerphoenix a ex:MythicalCreature.`",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "```",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "`ex:CreatureU a ex:MythicalCreature.`"
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "`ex:CreatureU a ex:MythicalCreature.`",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "`ex:CreatureU a ex:MythicalCreature.`",
            "`ex:CreatureU a ex:MythicalCreature.`",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "```",
            "`ex:CreatureU a ex:MythicalCreature.`",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "`ex:Glimmerphoenix a ex:MythicalCreature.`",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature.",
            "ex:Glimmerphoenix a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "`ex:CreatureU a ex:MythicalCreature.`",
            "`ex:CreatureU a ex:MythicalCreature.`",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 8
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "output": [
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature.",
            "ex:CreatureU a ex:MythicalCreature."
        ],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "```",
            "```",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .",
            "`ex:HabitatL a ex:Habitat.`",
            "`ex:HabitatL a ex:Habitat.`",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat`",
            "```"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "```",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat.`",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat.`",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "```",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat.`",
            "```",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .",
            "`ex:HabitatL a ex:Habitat .`",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .",
            "```",
            "ex:HabitatL a ex:Habitat ."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 8
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat.`",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "```"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v1",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat.`",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "`ex:HabitatL a ex:Habitat.`",
            "ex:HabitatL a ex:Habitat.",
            "```"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v2",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "```",
            "ex:HabitatL a ex:Habitat .",
            "```",
            "ex:HabitatL a ex:Habitat .",
            "`ex:HabitatL a ex:Habitat.`",
            "`ex:HabitatL a ex:Habitat.`",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "`ex:HabitatL a ex:Habitat.`",
            "`ex:HabitatL a ex:Habitat.`"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 3
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v3",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "ex:HabitatL a ex:Habitat .",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "```rdf",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v4",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "`ex:HabitatL a ex:Habitat.`",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat.`",
            "```",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "```",
            "`ex:HabitatL a ex:Habitat.`"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 3
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v5",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "`ex:HabitatL a ex:Habitat.`",
            "`ex:HabitatL a ex:Habitat .`",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat .`",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat .`"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 4
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v6",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "```rdf",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "```",
            "```"
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v7",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat .",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat.`",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "```",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v8",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "output": [
            "`ex:HabitatL a ex:Habitat .`",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "```rdf",
            "`ex:HabitatL a ex:Habitat`",
            "ex:HabitatL a ex:Habitat.",
            "ex:HabitatL a ex:Habitat.",
            "`ex:HabitatL a ex:Habitat.`",
            "`ex:HabitatL a ex:Habitat ;",
            "ex:HabitatL a ex:Habitat."
        ],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes",
            "Yes",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.",
            "Yes",
            "Yes.",
            "Yes",
            "No",
            "No.",
            "No.",
            "Yes.",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Fictional Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes",
            "No.",
            "Yes.",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes",
            "No.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 9
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "No.",
            "No.",
            "No",
            "No.",
            "Yes",
            "Yes.",
            "Yes",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "Chain1",
        "output": [
            "Yes.",
            "Yes",
            "Yes.",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No.",
            "No.",
            "No",
            "No.",
            "Yes.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "No.",
            "Yes",
            "Yes.",
            "No.",
            "Yes.",
            "Yes",
            "No.",
            "Yes.",
            "No.",
            "No."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Fictional 1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "output": [
            "Yes",
            "Yes.",
            "No.",
            "No.",
            "Yes",
            "Yes.",
            "No.",
            "Yes.",
            "No. It cannot be inferred that \"ex:SomeL rdfs:subClassOf ex:SomeM\" because there is no direct or transitive relationship between ex:SomeL and ex:SomeM in the provided RDF data",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 6
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "Chain2",
        "output": [
            "Yes",
            "Yes",
            "Yes.",
            "Yes",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "No.",
            "Yes.",
            "Yes.",
            "Yes",
            "No.",
            "Yes",
            "Yes.",
            "No.",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Fictional 2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "output": [
            "Yes.",
            "No.",
            "No.",
            "Yes",
            "Yes.",
            "No.",
            "No.",
            "No.",
            "Yes",
            "Yes"
        ],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v1",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No.",
            "No",
            "No",
            "No",
            "No.",
            "No.",
            "No",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v2",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No",
            "No.",
            "No",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative chain Inference Prompt v3",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "output": [
            "No.",
            "No.",
            "No",
            "No",
            "No.",
            "No",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v1",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v2",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "No",
            "No.",
            "No",
            "No",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: Inversed Relationship v3",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "output": [
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No.",
            "No."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 10
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v1",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes.",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v2",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes"
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v3",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "output": [
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes",
            "Yes.",
            "Yes.",
            "Yes",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v1",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes.",
            "Yes",
            "Yes",
            "Yes",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v2",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "No.",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes",
            "Yes.",
            "Yes",
            "Yes",
            "Yes.",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v3",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "output": [
            "Yes.",
            "Yes.",
            "Yes",
            "No.",
            "Yes.",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes."
        ],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 1
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v1",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Canis rdfs:subClassOf ex:Mammal.",
            "ex:Canis rdfs:subClassOf ex:Mammal.",
            "There is no error in the provided RDF data. However, if we were to create a triple with an error, it would look like this: ex:Dog rdfs:subClassOf ex:Bird. This would be incorrect",
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tigris rdfs:subClassOf ex:Tiger.",
            "ex:Tigris rdfs:subClassOf ex:Cat.",
            "ex:Tigris rdfs:subClassOf ex:Tiger. (Error: Circular definition)",
            "ex:Tigris rdfs:subClassOf ex:Cat.",
            "ex:Tigris rdfs:subClassOf ex:Tiger."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v2",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Canis rdfs:subClassOf ex:Mammal.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Canis rdfs:subClassOf ex:Mammal.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Canis rdfs:subClassOf ex:Mammal.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Canis rdfs:subClassOf ex:Mammal.",
            "ex:Tiger rdfs:subClassOf ex:Cat."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v3",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "output": [
            "ex:Tiger rdfs:subClassOf ex:Cat. (Error: ex:Tiger is a superclass of ex:Tiger, which is incorrect as a subclass should be a specific type of its superclass.)",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Tiger.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Cat.",
            "ex:Tiger rdfs:subClassOf ex:Tiger.",
            "ex:Tiger rdfs:subClassOf ex:Cat."
        ],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumX ex:artist ex:\"ArtistY\" .",
            "ex:AlbumX ex:artist ex:Y",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:AlbumX ex:artist ex:ArtistY",
            "ex:AlbumX ex:releaseYear \"1985\" .",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:AlbumX ex:artist ex:ArtistY .",
            "ex:AlbumX ex:rating \"4.5\" . This triple has a syntax error because the value of the \"rating\" property is not a resource or a literal with a data type, and it should be either \"4.5",
            "ex:AlbumX rdf:type rdfs:Class",
            "ex:AlbumX ex:rating \"4.5\" ."
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:ArtistZ ex:nationality \"USA\" .",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:AlbumM a ex:MusicAlbum ;",
            "ex:ArtistZ ex:birthYear \"1958\" .",
            "ex:AlbumM a ex:MusicAlbum ;"
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "@prefix ex: <http://example.com/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "@prefix ex: <http://example.org/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "@prefix ex: <http://example.com/> ."
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 3
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:ArtistA rdfs:[label] \"[value]\"",
            "ex:ArtistA ex:nationality \"UK\" .",
            "ex:AlbumF ex:releaseYear \"1982\" .",
            "ex:ArtistA ex:birthYear \"1960\"",
            "ex:ArtistA ex:birthYear \"1960\" .",
            "ex:ArtistA ex:birthYear \"1960\" .",
            "ex:AlbumF ex:releaseYear \"1982\" .",
            "ex:ArtistA ex:birthYear \"1960\"",
            "ex:ArtistA ex:birthYear \"1960\" .",
            "ex:AlbumF ex:releaseYear \"1982\" ."
        ],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "ex:ArtistO ex:birthYear \"1971\" .",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:birthYear \"1980\" . (This triple contains a syntax error because the `ex:birthYear` property is associated with the `ex:ArtistO` resource, but `ex",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:birthYear \"1980\" .",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:birthYear \"1980\" . (The \"birthYear\" property should be applied to the Artist, not the Album.)",
            "ex:AlbumM ex:birthYear \"1980\"",
            "ex:AlbumM ex:releaseYear \"1980\" .",
            "ex:AlbumM ex:birthYear \"1980\""
        ],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Error Identification Prompt - less data 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "output": [
            "dc: <http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://purl.org/dc/elements/1.1/> .",
            "<http://ex:> .",
            "<http://purl.org/> ."
        ],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums size 1",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "```",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 7
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums size 2",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "`ex:ArtistZ a ex:Artist.`",
            "```",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist ;",
            "```"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 5
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums size 4",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:Seamus Finn a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistZ a ex:Artist.",
            "ex:ArtistY a ex:Artist.",
            "ex:ArtistY a ex:Artist."
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums size 8",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist .",
            "```",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist ;"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 3
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums size 16",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist .",
            "ex:ArtistZ a ex:Artist .",
            "ex:Wasa Dog a ex:Artist.",
            "ex:ArtistA a ex:Artist .",
            "ex:ArtistZ a ex:Artist ;",
            "`ex:ArtistZ a ex:Artist.`",
            "ex:ArtistZ a ex:Artist ;",
            "ex:ArtistZ a ex:Artist ;"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 2
    },
    {
        "model": "MaziyarPanahi/Mistral-7B-Instruct-v0.3-GGUF/Mistral-7B-Instruct-v0.3.Q4_K_M.gguf",
        "prompt_name": "Albums size 32",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "output": [
            "ex:ArtistA",
            "ex:ArtistA.",
            "ex:ArtistA .",
            "ex:ArtistA",
            "ex:ArtistA.",
            "ex:ArtistA",
            "ex:ArtistA.",
            "ex:ArtistA",
            "ex:ArtistA",
            "ex:ArtistA"
        ],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums - Concept Prompt v1",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums - Concept Prompt v2",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums - Concept Prompt v3",
        "cat": "Albums",
        "subcat": "FictAlbums",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Real Albumn v1",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Real Albumn v2",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Real Albumn v3",
        "cat": "Albums",
        "subcat": "RealAlbumn",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Born Year v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "outputs": [],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Born Year v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "outputs": [],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Born Year v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "outputs": [],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v1",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "outputs": [],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v2",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "outputs": [],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Born Year - Concept Prompt v3",
        "cat": "AArtistBorn",
        "subcat": "AArtistBorn",
        "outputs": [],
        "expected_answer": "ex:ArtistA a ex:Artist",
        "expected_subject": "ex:ArtistA",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Nationality v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "outputs": [],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Nationality v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "outputs": [],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Nationality v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "outputs": [],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v1",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "outputs": [],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v2",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "outputs": [],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Nationality - Concept Prompt v3",
        "cat": "AArtistNat",
        "subcat": "AArtistNat",
        "outputs": [],
        "expected_answer": "ex:ArtistO a ex:Artist",
        "expected_subject": "ex:ArtistO",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Genre v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "outputs": [],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Genre v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "outputs": [],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Genre v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "outputs": [],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Genre - Concept Prompt v1",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "outputs": [],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Genre - Concept Prompt v2",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "outputs": [],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist Genre - Concept Prompt v3",
        "cat": "AlbumGenre",
        "subcat": "AlbumGenre",
        "outputs": [],
        "expected_answer": "ex:AlbumB a ex:MusicAlbum",
        "expected_subject": "ex:AlbumB",
        "expected_property": "a",
        "expected_object": "ex:MusicAlbum",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v1",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v2",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop - Concept Prompt v3",
        "cat": "AArtistPop",
        "subcat": "AArtistPop",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop Name v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "outputs": [],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop Name v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "outputs": [],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop Name v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "outputs": [],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v1",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "outputs": [],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v2",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "outputs": [],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums Artist who made Album Pop Name - Concept Prompt v3",
        "cat": "AArtistPopName",
        "subcat": "AArtistPopName",
        "outputs": [],
        "expected_answer": "Wasa Dog",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Rating v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Rating v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Rating v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v1",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v2",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Rating - Concept Prompt v3",
        "cat": "MCreatureHRating",
        "subcat": "MCreatureHRating",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Magic Level v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Magic Level v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Magic Level v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v1",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v2",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Magic Level - Concept Prompt v3",
        "cat": "MCreatureHMagic",
        "subcat": "MCreatureHMagic",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Temp Habitat v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v1",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v2",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Highest Temp Habitat - Concept Prompt v3",
        "cat": "MCreatureHTemp",
        "subcat": "MCreatureHTemp",
        "outputs": [],
        "expected_answer": "ex:CreatureU a ex:MythicalCreature",
        "expected_subject": "ex:CreatureU",
        "expected_property": "a",
        "expected_object": "ex:MythicalCreature",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v1",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v2",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name - Concept Prompt v3",
        "cat": "MCreatureHName",
        "subcat": "MCreatureHName",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v1",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v2",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v3",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v4",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v5",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v6",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v7",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Mythical Creatures Habitat Name Syntax Incorrect v8",
        "cat": "MCreatureSyn0",
        "subcat": "MCreatureSyn0",
        "outputs": [],
        "expected_answer": "ex:HabitatL a ex:Habitat",
        "expected_subject": "ex:HabitatL",
        "expected_property": "a",
        "expected_object": "ex:Habitat",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "Retrieval",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Fictional Baseline No Inference v1",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Fictional Baseline No Inference v2",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Fictional Baseline No Inference v3",
        "cat": "Retrieval",
        "subcat": "FictRetrieval",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "Chain1",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "Chain1",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "Chain1",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Fictional 1-chain Inference Prompt v1",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Fictional 1-chain Inference Prompt v2",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Fictional 1-chain Inference Prompt v3",
        "cat": "Chain1",
        "subcat": "FictChain1",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "Chain2",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "Chain2",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "Chain2",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Fictional 2-chain Inference Prompt v1",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Fictional 2-chain Inference Prompt v2",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Fictional 2-chain Inference Prompt v3",
        "cat": "Chain2",
        "subcat": "FictChain2",
        "outputs": [],
        "expected_answer": "Yes",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative chain Inference Prompt v1",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative chain Inference Prompt v2",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative chain Inference Prompt v3",
        "cat": "ChainNeg",
        "subcat": "WrongSuperclass",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: Inversed Relationship v1",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: Inversed Relationship v2",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: Inversed Relationship v3",
        "cat": "ChainNeg",
        "subcat": "subClassOf",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v1",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v2",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: unspecified concept ex:Dog v3",
        "cat": "ChainNeg",
        "subcat": "MissingConcept",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v1",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v2",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf inference v3",
        "cat": "ChainNeg",
        "subcat": "superClassOf",
        "outputs": [],
        "expected_answer": "No",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v1",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "outputs": [],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v2",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "outputs": [],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Negative prompt: fake property rdfs:superClassOf extract v3",
        "cat": "ChainNeg",
        "subcat": "SuperError",
        "outputs": [],
        "expected_answer": "ex:Tiger rdfs:superClassOf ex:Tigris",
        "expected_subject": "ex:Tiger",
        "expected_property": "rdfs:superClassOf",
        "expected_object": "ex:Tigris",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Error Identification Prompt 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "outputs": [],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Error Identification Prompt 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "outputs": [],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Error Identification Prompt 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "outputs": [],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Error Identification Prompt - less data 1",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "outputs": [],
        "expected_answer": "ex:AlbumF ex:rating 4.9",
        "expected_subject": "ex:AlbumF",
        "expected_property": "ex:rating",
        "expected_object": "4.9",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Error Identification Prompt - less data 2",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "outputs": [],
        "expected_answer": "ex:AlbumM ex:releaseYear 1980",
        "expected_subject": "ex:AlbumM",
        "expected_property": "ex:releaseYear",
        "expected_object": "1980",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Error Identification Prompt - less data 3",
        "cat": "ErrIdent",
        "subcat": "SyntaxErr",
        "outputs": [],
        "expected_answer": "@prefix ex: <http://example.org/>",
        "expected_subject": "",
        "expected_property": "",
        "expected_object": "",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums size 1",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums size 2",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums size 4",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums size 8",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums size 16",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    },
    {
        "model": "gpt-4o",
        "prompt_name": "Albums size 32",
        "cat": "Albums",
        "subcat": "VaryingSizeDataset",
        "outputs": [],
        "expected_answer": "ex:ArtistZ a ex:Artist",
        "expected_subject": "ex:ArtistZ",
        "expected_property": "a",
        "expected_object": "ex:Artist",
        "correct_count": 0
    }
]